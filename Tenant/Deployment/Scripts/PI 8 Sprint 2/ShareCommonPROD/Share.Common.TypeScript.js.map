{"version":3,"sources":["webpack://share/webpack/universalModuleDefinition","webpack://share/webpack/bootstrap","webpack://share/./node_modules/@pnp/common/dist/common.es5.js","webpack://share/./node_modules/@pnp/logging/dist/logging.es5.js","webpack://share/./node_modules/@microsoft/applicationinsights-shims/dist-esm/applicationinsights-shims.js","webpack://share/./node_modules/@pnp/odata/dist/odata.es5.js","webpack://share/./node_modules/@pnp/sp/dist/sp.es5.js","webpack://share/(webpack)/buildin/global.js","webpack://share/./src/constants.ts","webpack://share/./src/models.ts","webpack://share/./src/storage.ts","webpack://share/./src/util.ts","webpack://share/./node_modules/adal-angular/dist/adal.min.js","webpack://share/./src/index.ts","webpack://share/./src/sp.ts","webpack://share/./node_modules/@pnp/polyfill-ie11/dist/index.js","webpack://share/./src/telemetryServices.ts","webpack://share/./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/EnvUtils.js","webpack://share/./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/CoreUtils.js","webpack://share/./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK.Enums/LoggingEnums.js","webpack://share/./node_modules/@microsoft/dynamicproto-js/lib/dist/esm/dynamicproto-js.js","webpack://share/./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/DiagnosticLogger.js","webpack://share/./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/PerfManager.js","webpack://share/./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/TelemetryPluginChain.js","webpack://share/./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/ProcessTelemetryContext.js","webpack://share/./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/BaseTelemetryPlugin.js","webpack://share/./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/TelemetryHelpers.js","webpack://share/./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/ChannelController.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Enums.js","webpack://share/./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/BaseCore.js","webpack://share/./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK.Enums/EventsDiscardedReason.js","webpack://share/./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/NotificationManager.js","webpack://share/./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/AppInsightsCore.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/RequestResponseHeaders.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataSanitizer.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Util.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Constants.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/ConnectionStringParser.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Base.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Data.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/Envelope.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Envelope.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/Domain.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/EventData.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Event.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/StackFrame.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/ExceptionData.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/ExceptionDetails.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Exception.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/DataPointType.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/MetricData.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/DataPoint.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/SeverityLevel.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/DataPoint.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Metric.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/PageViewData.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/PageView.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/RemoteDependencyData.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/RemoteDependencyData.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Trace.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/MessageData.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/PageViewPerformance.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/PageViewPerfData.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Telemetry/Common/Data.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/IConfig.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/Contracts/Generated/ContextTagKeys.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/TelemetryItemCreator.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/Interfaces/PartAExtensions.js","webpack://share/./node_modules/@microsoft/applicationinsights-common/dist-esm/applicationinsights-common.js","webpack://share/./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewManager.js","webpack://share/./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageVisitTimeManager.js","webpack://share/./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/Telemetry/PageViewPerformanceManager.js","webpack://share/./node_modules/@microsoft/applicationinsights-analytics-js/dist-esm/JavaScriptSDK/ApplicationInsights.js","webpack://share/./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/SendBuffer.js","webpack://share/./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/EnvelopeCreator.js","webpack://share/./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/Serializer.js","webpack://share/./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/Offline.js","webpack://share/./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/TelemetryProcessors/SamplingScoreGenerators/HashCodeScoreGenerator.js","webpack://share/./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/TelemetryProcessors/SamplingScoreGenerators/SamplingScoreGenerator.js","webpack://share/./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/TelemetryProcessors/Sample.js","webpack://share/./node_modules/@microsoft/applicationinsights-channel-js/dist-esm/Sender.js","webpack://share/./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Session.js","webpack://share/./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Application.js","webpack://share/./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Device.js","webpack://share/./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Internal.js","webpack://share/./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/User.js","webpack://share/./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/Location.js","webpack://share/./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/Context/TelemetryTrace.js","webpack://share/./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/TelemetryContext.js","webpack://share/./node_modules/@microsoft/applicationinsights-properties-js/dist-esm/PropertiesPlugin.js","webpack://share/./node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/InstrumentHooks.js","webpack://share/./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/ajaxRecord.js","webpack://share/./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/TraceParent.js","webpack://share/./node_modules/@microsoft/applicationinsights-dependencies-js/dist-esm/ajax.js","webpack://share/./node_modules/@microsoft/applicationinsights-web/dist-esm/Initialization.js","webpack://share/./node_modules/@microsoft/applicationinsights-web/dist-esm/ApplicationInsightsDeprecated.js","webpack://share/./node_modules/@microsoft/applicationinsights-web/dist-esm/ApplicationInsightsContainer.js","webpack://share/./node_modules/@microsoft/applicationinsights-web/dist-esm/applicationinsights-web.js","webpack://share/./node_modules/@pnp/sp-clientsvc/dist/sp-clientsvc.es5.js","webpack://share/./node_modules/@pnp/sp-taxonomy/dist/sp-taxonomy.es5.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","global","AdalClient","SPFxAdalClient","objectToMap","mergeMaps","setup","RuntimeConfigImpl","RuntimeConfig","mergeHeaders","mergeOptions","FetchClient","BearerTokenFetchClient","PnPClientStorageWrapper","PnPClientStorage","getCtxCallback","dateAdd","combine","getRandomString","getGUID","isFunc","objectDefinedNotNull","isArray","extend","isUrlAbsolute","stringIsNullOrEmpty","getAttrValueFromString","sanitizeGuid","jsS","hOP","getHashCode","adal_angular_dist_adal_min_js__WEBPACK_IMPORTED_MODULE_0__","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","this","constructor","global$1","self","context","method","params","_i","arguments","length","apply","date","interval","units","ret","Date","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","undefined","paths","filter","path","map","replace","join","chars","text","possible","charAt","Math","floor","random","toString","cf","obj","array","target","source","noOverwrite","check","getOwnPropertyNames","v","reduce","url","test","html","attrName","match","RegExp","exec","guid","matches","JSON","stringify","hash","charCodeAt","Request","headers","forEach","append","fetch","options","_super","_token","_this","set","token","configurable","Headers","getResource","parser","document","createElement","href","protocol","hostname","clientId","tenant","redirectUri","_displayCallback","_loginPromise","fromSPFxContext","spfxContext","Error","getToken","then","resource","Promise","resolve","reject","ensureAuthContext","_","login","_authContext","acquireToken","message","catch","displayCall","navigateToLoginRequestUrl","getCachedUser","popupWindow","open","focus","pollTimer","setInterval","closed","clearInterval","URL","indexOf","handleWindowCallback","location","close","e","_loginInProgress","aadTokenProviderFactory","getTokenProvider","provider","objectEntries","entries","keys","k","Map","maps","config","_v","store","defaultTimeoutMinutes","enabled","enableCacheExpiration","cacheExpirationHandler","getItem","persistable","parse","expiration","delete","put","expire","setItem","createPersistable","removeItem","getOrPut","deleteExpired","defaultTimeout","defaultCachingTimeoutSeconds","pnp","setTimeout","cacheExpirationIntervalMilliseconds","console","error","MemoryStorage","_store","size","clear","index","from","data","_local","_session","getStore","localStorage","sessionStorage","Logger","LogLevel","instance","activeLogLevel","_instance","LoggerImpl","subscribe","listeners","listener","clearSubscribers","count","write","level","log","writeJSON","json","entry","err","subscribers","push","slice","subscriber","ConsoleListener","msg","format","warn","FunctionListener","strShimFunction","strShimObject","strShimUndefined","strShimPrototype","getGlobal","objCreateFn","strShimHasOwnProperty","globalThis","func","type","TypeError","tmpFunc","__extendStaticsFn","globalObj","assignFn","extendsFn","__assign","assign","CachingOptions","CachingParserWrapper","ODataParserBase","ODataDefaultParser","TextParser","BlobParser","JSONParser","BufferParser","Queryable","ODataQueryable","ODataBatch","_pnp_common__WEBPACK_IMPORTED_MODULE_0__","_pnp_logging__WEBPACK_IMPORTED_MODULE_1__","storeName","defaultCachingStore","storage","local","session","cacheOptions","response","cacheData","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","HttpRequestError","status","statusText","isHttpRequestError","init","clone","handleError","parseImpl","has","parseFloat","txt","parseODataJSON","ok","result","results","blob","arrayBuffer","buffer","LambdaParser","setResult","hasResult","next","pipeline","shift","pipe","requestId","promise","ctx","returnResult","isBatched","batch","addResolveBatchDependency","requestPipelineMethod","alwaysRun","propertyKey","descriptor","args","PipelineMethods","logStart","verb","requestAbsoluteUrl","caching","isCached","cachingOptions","batchDependency","hydrate","send","add","batchId","client","clientFactory","opts","logEnd","getDefaultPipeline","_query","_options","_url","_parentUrl","_useCaching","_cachingOptions","_cloneParentWasCaching","_cloneParentCacheOptions","toUrl","concat","pathPart","configure","configureFrom","usingCaching","globalCacheDisable","getCore","toRequestContext","postCore","patchCore","deleteCore","putCore","parent","_clone","_0","_batch","inBatch","addBatchDependency","addDependency","hasBatch","cloneSettings","includeBatch","_batchId","_reqs","_deps","_rDeps","id","info","toUpperCase","resolver","execute","all","executeImpl","odataUrlFrom","spODataEntity","spODataEntityArray","SharePointQueryable","SharePointQueryableInstance","SharePointQueryableCollection","SharePointQueryableSecurable","FileFolderShared","SharePointQueryableShareable","SharePointQueryableShareableFile","SharePointQueryableShareableFolder","SharePointQueryableShareableItem","SharePointQueryableShareableWeb","AppCatalog","App","SPBatch","ContentType","ContentTypes","FieldLink","FieldLinks","Field","Fields","CheckinType","WebPartsPersonalizationScope","MoveOperations","TemplateFileType","File","Files","Folder","Folders","SPHttpClient","Item","Items","ItemVersion","ItemVersions","PagedItemCollection","NavigationNodes","NavigationNode","NavigationService","List","Lists","RegionalSettings","InstalledLanguages","TimeZone","TimeZones","sp","SPRest","RoleDefinitionBindings","Search","SearchQueryBuilder","SearchResults","SortDirection","ReorderingRuleMatchType","QueryPropertyValueType","SearchBuiltInSourceId","SearchSuggest","Site","UserProfileQuery","toAbsoluteUrl","extractWebUrl","UtilityMethod","View","Views","ViewFields","WebPartDefinitions","WebPartDefinition","WebPart","Web","SiteScripts","SiteDesigns","PromotedState","ClientSidePage","CanvasSection","CanvasControl","CanvasColumn","ClientSidePart","ClientSideText","ClientSideWebpart","Comments","Comment","Replies","SocialQuery","MySocialQuery","SocialActorType","SocialActorTypes","SocialFollowResult","SocialStatusCode","ControlMode","FieldTypes","DateTimeFieldFormatType","AddFieldOptions","CalendarType","UrlFieldFormatType","PermissionKind","PrincipalType$1","PrincipalSource","RoleType","PageType","SharingLinkKind","SharingRole","SharingOperationStatusCode","SPSharedObjectType","SharingDomainRestrictionMode","RenderListDataOptions","FieldUserSelectionMode","ChoiceFieldFormatType","UrlZone","_pnp_odata__WEBPACK_IMPORTED_MODULE_2__","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","rejected","done","__generator","body","f","y","g","label","sent","trys","ops","throw","return","iterator","op","pop","candidateUrl","substr","candidate","parts","__metadata","uri","SPODataEntityParserImpl","SPODataEntityArrayParserImpl","SPRuntimeConfig","SPRuntimeConfigImpl","spPart","baseUrl","pageContext","web","absoluteUrl","fetchClientFactory","CachedDigest","digests","DigestCache","_httpClient","_digests","getDigest","webUrl","cachedDigest","fetchRaw","cache","credentials","Accept","Content-Type","GetContextWebInformation","newCachedDigest","FormDigestValue","seconds","FormDigestTimeoutSeconds","_impl","_digestCache","digest","rawHeaders","retry","setRetry","delay","parseInt","attempts","retryCount","retryContext","post","patch","_spPageContextInfo","webAbsoluteUrl","webServerRelativeUrl","baseUrl_1","metadata","_forceCaching","lastIndexOf","query","as","toUrlAndQuery","aliasedParams","labelName","select","selects","expand","expands","getParent","parentUrl","additionalPath","dependencyDispose","orderBy","ascending","split","skip","top","_update","mapper","props","X-HTTP-Method","_delete","_deleteWithETag","eTag","IF-Match","defaultPath","class_1","PrincipalType","SiteUsers","SiteUsers_1","getById","SiteUser","getByEmail","email","getByLoginName","loginName","su","encodeURIComponent","removeById","removeByLoginName","LoginName","UserBase","SiteGroups","update","user","CurrentUser","SiteGroups_1","sg","SiteGroup","properties","postBody","group","Id","getByName","groupName","retGroup","RoleAssignments","RoleAssignments_1","ra","RoleAssignment","principalId","roleDefId","remove","RoleDefinitions","RoleDefinition","getByType","roleTypeKind","description","order","basePermissions","BasePermissions","Description","Name","Order","definition","retDef","getUserEffectivePermissions","q","GetUserEffectivePermissions","getCurrentUserEffectivePermissions","breakRoleInheritance","copyRoleAssignments","clearSubscopes","resetRoleInheritance","userHasPermissions","permission","perms","hasPermissions","currentUserHasPermissions","perm","FullMask","High","Low","num","getShareLink","kind","expString","toISOString","request","createLink","emailData","settings","linkKind","shareWith","loginNames","role","requireSignin","propagateAcl","userStr","Key","roleFilter","Edit","Contributor","Reader","def","includeAnonymousLinkInEmail","peoplePickerInput","roleValue","useSimplifiedRoles","emailBody","emailSubject","subject","sendEmail","shareObject","bypass","sendShareObjectRequest","getRoleValue","unshareObjectWeb","checkPermissions","recipients","getSharingInformation","getObjectSharingSettings","unshareObject","deleteLinkByKind","unshareLink","shareId","Guest","getShareObjectWeb","dependency","shareObjectRaw","OrganizationView","checkSharingPermissions","unshare","deleteSharingLinkByKind","getShareable","shareable","shareEverything","LimitedWebPartManager","export","webPartId","import","xml","webPartXml","getByControlId","saveChanges","moveTo","zoneId","zoneIndex","Folders_1","folder","recycle","listItemAllFields","destUrl","_a","srcUrl","ServerRelativeUrl","webBaseUrl","hostUrl","methodUrl","ContentTypes_1","addAvailableContentType","contentTypeId","contentType","ct","additionalSettings","Group","StringValue","fl","AttachmentFiles","AttachmentFiles_1","AttachmentFile","content","file","addMultiple","files","chain","deleteMultiple","recycleMultiple","getText","getParsed","getBlob","getBuffer","getJSON","setContent","Views_1","getByTitle","title","personalView","PersonalView","Title","view","renderAsHtml","setViewXml","viewXml","ViewFields_1","getSchemaXml","fieldTitleOrInternalName","move","fieldInternalName","field","removeAll","Fields_1","getByInternalNameOrTitle","createFieldAsXml","SchemaXml","parameters","fieldType","addText","maxLength","FieldTypeKind","MaxLength","addCalculated","formula","dateFormat","outputType","Text","DateFormat","Formula","OutputType","addDateTime","displayFormat","calendarType","friendlyDisplayFormat","DateOnly","Gregorian","DateTimeCalendarType","DisplayFormat","FriendlyDisplayFormat","addNumber","minValue","maxValue","MinimumValue","MaximumValue","addCurrency","currencyLocalId","CurrencyLocaleId","addMultilineText","numberOfLines","richText","restrictedMode","appendOnly","allowHyperlink","AllowHyperlink","AppendOnly","NumberOfLines","RestrictedMode","RichText","addUrl","Hyperlink","addUser","selectionMode","SelectionMode","addLookup","lookupListId","lookupFieldName","LookupFieldName","LookupListId","addChoice","choices","fillIn","Dropdown","Choices","EditFormat","FillInChoice","addMultiChoice","addBoolean","addDependentLookupField","displayName","primaryLookupFieldId","showField","setShowInDisplayForm","show","setShowInEditForm","setShowInNewForm","Forms","Form","Subscriptions","subscriptionId","Subscription","notificationUrl","expirationDate","clientState","expirationDateTime","subscription","UserCustomActions","UserCustomActions_1","uca","UserCustomAction","action","Lists_1","list","template","enableContentTypes","addSettings","AllowContentTypes","BaseTemplate","ContentTypesEnabled","ensure","addOrUpdateSettings","created","ensureSiteAssetsLibrary","ensureSitePagesLibrary","getView","viewId","retList","getChanges","getItemsByCAMLQuery","getListItemChangesSinceToken","Recycle","renderListData","RenderListData","renderListDataAsStream","overrideParameters","renderListFormData","itemId","formId","RenderListFormData","reserveListItemId","ReserveListItemId","getListItemEntityTypeFullName","ListItemEntityTypeFullName","addValidateUpdateItemUsingPath","formValues","decodedUrl","bNewDocumentUpdate","checkInComment","listItemCreateInfo","FolderPath","DecodedUrl","res","AddValidateUpdateItemUsingPath","Comments_1","like","unlike","Replies_1","Items_1","getItemByStringId","stringId","reverse","getPaged","PagedItemCollectionParser","getAll","requestSize","acceptHeader","items","itemsCollector","gatherer","last","hasNext","getNext","listItemEntityTypeFullName","removeDependency","ensureListItemEntityTypeName","listItemEntityType","item","candidatelistItemEntityTypeFullName","ItemUpdatedParser","getLikedBy","getWopiFrameUrl","GetWOPIFrameUrl","validateUpdateListItem","newDocumentUpdate","getLikedByInformation","versionId","nextUrl","_parent","__next","odata.etag","Files_1","shouldOverWrite","addChunked","progress","chunkSize","setContentChunked","addTemplateFile","fileUrl","templateFileType","Versions","approve","comment","cancelUpload","uploadId","checkin","checkinType","Major","checkout","copyTo","deny","getLimitedWebPartManager","scope","Shared","moveOperations","Overwrite","publish","undoCheckout","unpublish","binaryStringResponseBody","fileSize","blockCount","blockNumber","currentPointer","stage","totalBlocks","startUpload","_loop_1","pointer","continueUpload","finishUpload","fragment","StartUpload","fileOffset","ContinueUpload","Versions_1","Version","deleteAll","deleteById","recycleByID","deleteByLabel","recycleByLabel","restoreByLabel","getAppById","filename","deploy","skipFeatureDeployment","retract","install","uninstall","upgrade","ParseResponse","responses","statusRegExp","lines","state","line","trim","Response","requests","absoluteRequestUrl","batchBody","currentChangeSetId","reqInfo","castHeaders","batchOptions","getNextOrder","collection","max","regexIndexOf","regex","startpos","substring","search","getBoundedDivMarkup","boundaryStartPattern","collector","blocks","cleanedHtml","startIndex","openCounter","searchIndex","nextDivOpen","nextCloseDiv","markup","reindex","columns","controls","sections","commentsDisabled","library","pageName","pageLayoutType","rootFolder","fs","pageServerRelPath","ServerRelativePath","far","BannerImageUrl","Url","CanvasContent1","ClientSideApplicationId","ContentTypeId","PageLayoutType","iar","CommentsDisabled","fromFile","page","load","jsonToEscapedString","escapedStringToJson","escapedString","escaped","unespace","addSection","section","toHtml","fromHtml","control","mergeColumnToTree","mergePartToTree","save","updateProperties","enableComments","setCommentsOn","disableComments","findControlById","findControl","predicate","j","on","column","controlData","position","sectionIndex","sectionFactor","addControl","_memId","addColumn","factor","defaultColumn","controlType","dataVersion","getControlData","getControl","jsonData","displayMode","_text","startsWith","editorType","controlIndex","propertieJson","htmlProperties","serverProcessedContent","canvasDataVersion","fromComponentDef","part","component","manifest","Manifest","preconfiguredEntries","default","parseJsonProperties","setProperties","getProperties","instanceId","renderHtmlProperties","webPartData","htmlProps","searchablePlainTexts","imageSources","links","node","visible","IsVisible","moveAfter","nodeId","previousNodeId","Navigation","getMenuState","menuNodeKey","depth","mapProviderName","customProperties","getMenuNodeKey","currentUrl","TimeZone_1","utcToLocalTime","utcTime","dateIsoString","UTCToLocalTime","localTimeToUTC","localTime","getTimezoneOffset","LocalTimeToUTC","TimeZones_1","funcs","toPropCase","str","$1","queryText","Proxy","Querytext","proxy","pk","mappedPk","propKey","queryInit","parseQuery","HitHighlightedProperties","fixArrProp","Properties","RefinementFilters","ReorderingRules","SelectProperties","SortList","cacheKey","prop","toSearchQuery","rawResponse","_raw","_primary","postquery","RawSearchResults","ElapsedTime","PrimaryQueryResult","RelevantResults","RowCount","TotalRows","TotalRowsIncludingDuplicates","formatSearchResults","Table","Rows","getPage","pageNumber","pageSize","rows","RowLimit","StartRow","rawResults","tempResults_1","tempResult","cells","Cells","cell","Value","writable","Documents","ItemsMatchingContentType","ItemsMatchingTag","ItemsRelatedToCurrentUser","ItemsWithSameKeywordAsThisItem","LocalPeopleResults","LocalReportsAndDataResults","LocalSharePointResults","LocalVideoResults","Pages","Pictures","Popular","RecentlyChangedItems","RecommendedItems","Wiki","mapQueryToQueryString","suggest","PeopleNames","PersonalResults","Queries","querytext","querySetter","checkProp","setProp","Features","Features_1","force","featdefScope","featureId","feature","Feature","deactivate","DefinitionId","RelatedItemManagerImpl","RelatedItemManagerImpl_1","FromUrl","getRelatedItems","sourceListName","sourceItemId","SourceItemID","SourceListName","getPageOneRelatedItems","addSingleLink","sourceWebUrl","targetListName","targetItemID","targetWebUrl","tryAddReverseLink","SourceWebUrl","TargetItemID","TargetListName","TargetWebUrl","TryAddReverseLink","addSingleLinkToUrl","targetItemUrl","TargetItemUrl","addSingleLinkFromUrl","sourceItemUrl","targetItemId","SourceItemUrl","deleteSingleLink","tryDeleteReverseLink","TryDeleteReverseLink","Webs","Webs_1","language","inheritPermissions","Language","UseSamePermissionsAsParentSite","WebTemplate","WebInfos","Web_1","fromUrl","getParentWeb","ParentWeb","openWebById","getSubwebsFilteredForCurrentUser","nWebTemplateFilter","nConfigurationFilter","createBatch","getFolderByServerRelativeUrl","folderRelativeUrl","getFolderByServerRelativePath","getFileByServerRelativeUrl","fileRelativeUrl","getFileByServerRelativePath","getList","listRelativeUrl","applyTheme","colorPaletteUrl","fontSchemeUrl","backgroundImageUrl","shareGenerated","applyWebTemplate","ensureUser","logonName","availableWebTemplates","includeCrossLanugage","getCatalog","getUserById","mapToIcon","progId","getStorageEntity","setStorageEntity","comments","removeStorageEntity","getAppCatalog","getClientSideWebParts","addClientSidePage","libraryTitle","lists","addClientSidePageByPath","listRelativePath","createDefaultAssociatedGroups","siteOwner","siteOwner2","groupNameSeed","hubSiteData","forceRefresh","syncHubSiteTheme","Site_1","getRootWeb","rootWeb","getContextInfo","SupportedSchemaVersions","getDocumentLibraries","absoluteWebUrl","GetDocumentLibraries","getWebUrlFromPageUrl","absolutePageUrl","GetWebUrlFromPageUrl","webId","joinHubSite","siteId","registerHubSite","unRegisterHubSite","createCommunicationSite","lcid","shareByEmailEnabled","classification","siteDesignId","Classification","Lcid","ShareByEmailEnabled","SiteDesignId","WebTemplateExtensionId","createModernTeamSite","alias","isPublic","owners","optionalParams","CreationOptions","Owners","clientPeoplePickerQuery","ClientPeoplePickerQuery","profileLoader","ProfileLoader","amIFollowedBy","amIFollowing","getFollowedTags","maxCount","getFollowersFor","getPeopleFollowedBy","getPropertiesFor","getUserProfilePropertyFor","propertyName","hideSuggestion","isFollowing","follower","followee","setMyProfilePic","profilePicSource","reader","FileReader","onload","readAsArrayBuffer","String","fromCharCode","Uint16Array","setSingleValueProfileProperty","accountName","propertyValue","setMultiValuedProfileProperty","propertyValues","createPersonalSiteEnqueueBulk","emails","ownerUserProfile","userProfile","createPersonalSite","interactiveRequest","shareAllSocialData","share","clientPeoplePickerResolveUser","queryParams","clientPeoplePickerSearchUser","ProfileLoader_1","emailIDs","ClientPeoplePickerQuery_1","createClientPeoplePickerQueryParametersRequestBody","ClientPeoplePickerResolveUser","ClientPeoplePickerSearchUser","SocialQuery_1","getFollowedSitesUri","FollowedSitesUri","getFollowedDocumentsUri","FollowedDocumentsUri","follow","actorInfo","createSocialActorInfoRequestBody","isFollowed","stopFollowing","actor","MySocialQuery_1","followed","types","Followed","followedCount","FollowedCount","followers","Followers","suggestions","Suggestions","methodName","getBaseUrl","getSiteScripts","createSiteScript","getSiteScriptMetadata","deleteSiteScript","updateSiteScript","siteScriptUpdateInfo","Content","updateInfo","createSiteDesign","creationInfo","applySiteDesign","getSiteDesigns","getSiteDesignMetadata","updateSiteDesign","deleteSiteDesign","getSiteDesignRights","grantSiteDesignRights","principalNames","grantedRights","revokeSiteDesignRights","excute","Body","From","Subject","To","CC","BCC","AdditionalHeaders","getCurrentUserEmailAddresses","resolvePrincipal","input","scopes","sources","inputIsEmailOnly","addToUserInfoList","matchUserInfoList","searchPrincipals","createEmailBodyForInvitation","pageAddress","expandGroupsToPrincipals","inputs","createWikiPage","containsInvalidFileFolderChars","onPremise","InvalidFileFolderNameCharsOnPremiseRegex","InvalidFileFolderNameCharsOnlineRegex","stripInvalidFileFolderChars","replacer","_baseUrl","searchSuggest","finalQuery","searchWithCaching","fm","Function","eval","Constants","ColumnNames","ID","TITLE","NAME","ENCODED_ABS_URL","CANVAS_CONTENT_1","CONTENT_TYPE_ID","AUTHOR","CREATED","BANNERIMAGEURL","LAYOUTWEBPARTSCONTENT","SHARE_ORGANIZATIONS","Campaigns","CAMPAIGN_URL","ARCHIVED","MyLinks","MYLINK_URL","MYLINK_ORDER","CollaborationSites","ACCESS_LEVEL","TaxonomyList","ID_FOR_TERM","ListInternalNames","CAMPAIGNS","SITE_PAGES","MYLINKS","SITE_ASSETS","COLLABORATION_SITES","TAXONOMY_LIST","LOCALSITES_SITECATALOG_LISTITLE","CacheKeys","STARTPAGE_CAMPAIGNS","STARTPAGE_NEWS_CORPORATENEWS","STARTPAGE_NEWS_MYNEWS","STARTPAGE_NEWS_LOCATION_TERMS","STARTPAGE_NEWS_ORGANIZATION_TERMS","STARTPAGE_MYLINKS","STARTPAGE_MYLINKSLOCKCACHE","STARTPAGE_MYLINKS_VIEWS_VIEW","STARTPAGE_MYLINKS_VIEWS_MANAGE","USER_PROPERTIES","NEWSPORTAL_NEWS_TOPSTORIES","NEWSPORTAL_ALLNEWS_LIST","NEWSPORTAL_MYNEWS_LIST","NEWSPORTAL_NEWS_PUBLISHED","TERM_ID_SITE_COLLECTION","COLLABORATION_MY_ORGANIZATION_COLLABORATION_SITES","PORTABLE_NEWS_LOCAL","STARTPAGEQA_INSTRUMENTATIONKEY","STARTPAGEUAT_INSTRUMENTATIONKEY","STARTPAGE_INSTRUMENTATIONKEY","SHARE_NAME","PUBLIC_CDN_STANDARD_URL","CDN_SITE_URL","ALERTS","ManagedProperties","SHARE_LOCATIONS","SHARE_CATEGORIES","PATH","LAST_MODIFIED_TIME","PICTURE_THUMBNAIL_URL","VIEWS_LIFE_TIME","DESCRIPTION","PUBLISHING_START","PUBLISHING_END","LIST_ITEM_ID","CREATED_BY","WEB_URL","ResultSources","SHARE_CORPORATE_NEWS","SHARE_NEWS","SHARE_ALL_NEWS","SHARE_SCHEDULED_NEWS","Terms","TermSetGUIDs","ORGANIZATIONS","LOCATIONS","CATEGORIES","CHANNELS","TermSetName","TOPICS","TermProperties","PATH_OF_TERM","TermsGeneral","QUERY_EXACT_TERM_PREFIX","UserProfileProperties","SHARE_ORGANIZATION","SHARE_ORGANIZATION_ID","SHARE_LOCATION","SHARE_LOCATION_ID","SHARE_TOPICS","SHARE_TOPICS_IDS","SHARE_MYLINKS_LOCATION","FolderNames","NewsSitePages","CORPORATE_NEWS","NEWS","CORPORATE_NEWS_TEMPLATES","NEWS_TEMPLATES","NEWS_TEMPLATES_ALL","NewsSiteAssets","NewsFields","SHARE_NEWS_TITLE","SHARE_PUBLISHING_START_DATE","SHARE_PUBLISHING_END_DATE","SHARE_CONTENTTYPEID","SHARE_NEWS_TEMPLATE_TYPE","General","ACCOUNT_NAME_PREFIX","DD_GENERAL","DD_ORGNIZATION_NEWS","NEWS_TEMPLATE","CORPORATE_NEWS_TEMPLATE","ORGANIZATION_NEWS_TEMPLATE","FileNames","NEWS_DEFAULT_IMAGE","SitePages","NewsPortalPage","StartPage","CT_CorporateNews","CT_News","CT_ToolSite","CT_ToolLink","Collaboration","TEAMS_SITE_COLLECTION_URL_PREFIX","PROJECTS_SITE_COLLECTION_URL_PREFIX","ToolSites","TOOLSITE_HUBSITE","models","Term","UserProperties","CorpNewsItem","NewsItem","TermGuidWithParentLevelsToRetrieve","FollowedSPObject","SiteInfo","common_1","getOrPutPromiseAsGlobalVariable","getOrPutPromiseValueInStorage","pnpStorage","clearKeyFromLocalStorage","Util","constants_1","util","randomNoRepeats","copy","splice","formatShortDate","day","dateAddLeadZero","month","getLocaleDateString","lng","formats","af-ZA","sq-AL","gsw-FR","am-ET","ar-DZ","ar-BH","ar-EG","ar-IQ","ar-JO","ar-KW","ar-LB","ar-LY","ar-MA","ar-OM","ar-QA","ar-SA","ar-SY","ar-TN","ar-AE","ar-YE","hy-AM","as-IN","az-Cyrl-AZ","az-Latn-AZ","ba-RU","eu-ES","be-BY","bn-BD","bn-IN","bs-Cyrl-BA","bs-Latn-BA","br-FR","bg-BG","ca-ES","zh-HK","zh-MO","zh-CN","zh-SG","zh-TW","co-FR","hr-BA","hr-HR","cs-CZ","da-DK","prs-AF","dv-MV","nl-BE","nl-NL","en-AU","en-BZ","en-CA","en-029","en-IN","en-IE","en-JM","en-MY","en-NZ","en-PH","en-SG","en-ZA","en-TT","en-GB","en-US","en-ZW","et-EE","fo-FO","fil-PH","fi-FI","fr-BE","fr-CA","fr-FR","fr-LU","fr-MC","fr-CH","fy-NL","gl-ES","ka-GE","de-AT","de-DE","de-LI","de-LU","de-CH","el-GR","kl-GL","gu-IN","ha-Latn-NG","he-IL","hi-IN","hu-HU","is-IS","ig-NG","smn-FI","id-ID","iu-Latn-CA","iu-Cans-CA","ga-IE","xh-ZA","zu-ZA","it-IT","it-CH","ja-JP","kn-IN","kk-KZ","km-KH","qut-GT","rw-RW","sw-KE","kok-IN","ko-KR","ky-KG","lo-LA","lv-LV","lt-LT","dsb-DE","smj-NO","smj-SE","lb-LU","mk-MK","ms-MY","ms-BN","ml-IN","mt-MT","mi-NZ","arn-CL","mr-IN","moh-CA","mn-MN","mn-Mong-CN","ne-NP","se-FI","se-NO","se-SE","nb-NO","nn-NO","oc-FR","or-IN","ps-AF","fa-IR","pl-PL","pt-BR","pt-PT","pa-IN","quz-BO","quz-EC","quz-PE","ro-RO","rm-CH","ru-RU","sah-RU","sa-IN","sr-Cyrl-BA","sr-Cyrl-ME","sr-Cyrl-RS","sr-Latn-BA","sr-Latn-ME","sr-Latn-RS","nso-ZA","tn-ZA","gd-GB","si-LK","sms-FI","sk-SK","sl-SI","sma-NO","sma-SE","es-AR","es-BO","es-CL","es-CO","es-CR","es-DO","es-EC","es-SV","es-GT","es-HN","es-MX","es-NI","es-PA","es-PY","es-PE","es-PR","es-ES_tradnl","es-ES","es-US","es-UY","es-VE","sv-SE","sv-FI","syr-SY","tg-Cyrl-TJ","tzm-Latn-DZ","ta-IN","tt-RU","te-IN","th-TH","bo-CN","tr-TR","tk-TM","uk-UA","hsb-DE","ur-PK","ug-CN","uz-Cyrl-UZ","uz-Latn-UZ","vi-VN","cy-GB","wo-SN","ii-CN","yo-NG","formatDate","_monthNames","_dayNames","_year","_month","_day","getDay","_date","_hours","getHours","_minutes","getMinutes","_seconds","getSeconds","_h","getShortUserName","userName","getClaimsUserName","addResolutionParamToURL","resolution","encodeURI","prefix","endsWith","suffix","ensureURLEndsWithSlash","getEnvironmentFromWebPartAlias","webPartAlias","returnValue","regexWebPartAliasEnvironmentResult","arraysEqual","arr1","arr2","removeDuplicatesFromArray","arr","newArr","lookup","GetEnvironmentPostfix","spCtx","envCode","AuthenticationContext","a","REQUEST_TYPE","LOGIN","RENEW_TOKEN","UNKNOWN","RESPONSE_TYPE","ID_TOKEN_TOKEN","TOKEN","CONSTANTS","ACCESS_TOKEN","EXPIRES_IN","ID_TOKEN","ERROR_DESCRIPTION","SESSION_STATE","ERROR","STORAGE","TOKEN_KEYS","ACCESS_TOKEN_KEY","EXPIRATION_KEY","STATE_LOGIN","STATE_RENEW","NONCE_IDTOKEN","USERNAME","IDTOKEN","LOGIN_REQUEST","LOGIN_ERROR","RENEW_STATUS","ANGULAR_LOGIN_REQUEST","RESOURCE_DELIMETER","CACHE_DELIMETER","LOADFRAME_TIMEOUT","TOKEN_RENEW_STATUS_CANCELED","TOKEN_RENEW_STATUS_COMPLETED","TOKEN_RENEW_STATUS_IN_PROGRESS","LOGGING_LEVEL","WARN","INFO","VERBOSE","LEVEL_STRING_MAP","0","1","2","3","POPUP_WIDTH","POPUP_HEIGHT","_singletonInstance","callback","popUp","isAngular","_user","_activeRenewals","_acquireTokenInProgress","_renewStates","_callBackMappedToRenewStates","_callBacksMappedToRenewStates","_openedWindows","_requestType","_adalInstance","_cloneConfig","loginResource","postLogoutRedirectUri","anonymousEndpoints","loadFrameTimeout","Logging","piiLoggingEnabled","_guid","_idTokenNonce","_getItem","_saveItem","verbose","_getNavigateUrl","registerCallback","_loginPopup","promptUser","_openPopup","screenLeft","screenX","screenTop","screenY","innerWidth","documentElement","clientWidth","h","innerHeight","clientHeight","_handlePopupError","_broadcast","bubbles","cancelable","detail","createEvent","initCustomEvent","CustomEvent","Event","dispatchEvent","loginInProgress","_hasResource","_isEmpty","getCachedToken","expireOffsetSeconds","_now","_createUser","_renewToken","_addAdalFrame","_urlRemoveQueryStringParameter","_addHintParameters","verbosePii","src","_loadFrameTimeout","_renewIdToken","_urlContainsQueryStringParameter","_loadFrame","extraQueryParameter","acquireTokenPopup","acquireTokenRedirect","infoPii","clearCache","clearCacheForResource","logOut","logOutUri","getUser","profile","sid","upn","_extractIdToken","aud","_getHash","isCallback","_deserialize","getLoginError","getRequestInfo","valid","stateMatch","stateResponse","requestType","_matchState","_matchNonce","nonce","_getResourceFromState","saveTokenFromHash","error_description","_expiresIn","exp","getResourceForEndpoint","endpoints","_getHostFromUri","opener","_serialize","_addLibMetadata","_decodeJwt","JWSPayload","_base64DecodeStringUrlSafe","atob","decodeURIComponent","escape","_decode","header","JWSSig","_convertUrlSafeToRegularBase64EncodedString","correlationId","_decimalToHex","crypto","msCrypto","getRandomValues","Uint8Array","round","getElementById","opera","navigator","userAgent","setAttribute","style","visibility","width","height","borderWidth","getElementsByTagName","appendChild","insertAdjacentHTML","frames","cacheLocation","_supportsLocalStorage","_supportsSessionStorage","_libVersion","toUTCString","stack","errorPii","warnPii","inject","__export","sp_1","models_1","storage_1","util_1","sp_taxonomy_1","getTermFromSearchSingleTaxonomyField","taxFieldValue","regexResult","term","getTermsFromSearchMultiTaxonomyField","singleTermValue","getTermsFromMultiTaxonomyField","texFieldArray","termDetailed","tag","PathOfTerm","configurePnP","taxonomy","getUserProperties","LocationGUID","Location","OrganizationGUID","Organization","TopicsGUIDs","Topics","MyLinksLocation","IsDataLoaded","userNameClaimsFormat","profiles","userProperties","userProfileProperties","bLocationGUIDFound","bLocationFound","bOrganizationGUIDFound","bOrganizationFound","bTopicsGUIDsFound","bTopicsFound","bMyLinksLocationFound","userProfileProperty","interestIDs","interestID","interestNames","interestName","error_1","getCachedUserProperties","userNameClaimsFormat_1","up","userNameClaimsFormat_2","error_2","clearCachedUserProperties","getTermsByIDs","termIDs","termSetID","termStores","stores","getTermSetById","termSet","retArray","termIDs_1","termID","getTermById","tmpItem","error_3","getChildTerms","terms","IsDeprecated","getParentTermsByID","bNeedToExecuteQuery","termGuidWithLevel","parentTerms","ParentLevelsToRetrieve","TermGUID","tmpTerm","tempParents","termArray","tmpRetArray","getViewIdFromUrl","viewUrl","site","views","error_4","updateUserProfileProperty","spConfig","restPath","httpOptions","accept","spHttpClient","code","error_5","updateMultiValueUserProfileProperty","error_6","_b","odataVersion","odata-version","getMyFollowedSPObjects","error_7","getTermSiteCollectionIdFromGuid","termGUID","serverRelativeUrl","taxonomyResult","serverAbsoluteUrl","error_8","asyncForEach","getCurrentUserEmail","currentUser","Email","getTenantProperty","newPropertyKey","error_9","__g","u","gs","version","__e","F","G","S","B","x","U","core","W","R","inspectSource","min","defineProperties","__list__","__context__","__nextIndex__","_onAdd","_onDelete","_onClear","_next","__redo__","_unBind","_createResult","_resolve","off","w","O","process","versions","v8","A","E","T","M","PromiseRejectionEvent","D","_n","_c","_s","fail","domain","C","enter","exit","I","emit","onunhandledrejection","reason","onrejectionhandled","_d","_w","race","callee","copyright","ceil","isNaN","getIteratorMethod","setImmediate","clearImmediate","MessageChannel","Dispatch","nextTick","now","port2","port1","onmessage","postMessage","addEventListener","importScripts","onreadystatechange","removeChild","_t","_k","Arguments","searchParams","iterable","Blob","formData","ArrayBuffer","isView","bodyUsed","onerror","byteLength","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","readAsText","values","signal","referrer","redirect","RangeError","DOMException","aborted","XMLHttpRequest","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","withCredentials","responseType","setRequestHeader","readyState","removeEventListener","polyfill","getPrototypeOf","nullPolyfill","contains","valueOf","BREAK","RETURN","MutationObserver","WebKitMutationObserver","fn","standalone","createTextNode","observe","characterData","propertyIsEnumerable","display","contentWindow","__mapKeysData__","__mapValuesData__","abs","Number","NaN","isFinite","sign","function","foo","bar","trzy","__ee__","once","__eeOnceListener__","methods","symbol","toPrimitive","__description__","__name__","for","keyFor","hasInstance","isConcatSpreadable","species","unscopables","some","__kind__","overwriteDefinition","resolveContext","Boolean","sort","__length__","__values__","applicationinsights_web_1","TelemetryService","getAppInsightsInstance","aiKey","_appInsightsInstance","InitializeAI","appInsights","ApplicationInsights","instrumentationKey","disableFetchTracking","maxBatchInterval","enableAutoRouteTracking","namePrefix","loadAppInsights","application","ver","setAuthenticatedUserContext","strUndefined","applicationinsights_shims","strObject","strPrototype","strFunction","strWindow","strDocument","strNavigator","strHistory","strLocation","strConsole","strPerformance","strJSON","strCrypto","strMsCrypto","strReactNative","getGlobalInst","gbl","hasWindow","getWindow","hasDocument","getDocument","getNavigator","getHistory","history","getLocation","getPerformance","hasJSON","strOnPrefix","strAttachEvent","strAddEventHelper","strDetachEvent","strRemoveEventListener","UInt32Mask","MaxUInt32","_isTrident","_mwcSeeded","_mwcW","_mwcZ","_mwcSeed","seedValue","_autoSeedMwc","_isTypeof","theType","_isUndefined","_isNullOrUndefined","_hasOwnProperty","_isObject","_isFunction","_attachEvent","eventNameWithoutOn","handlerRef","useCapture","_detachEvent","LoggingSeverity","CoreUtils_CoreUtils","CoreUtils","isDate","isError","isString","isNumber","isBoolean","disableCookies","_canUseCookies","newGuid","GuidRegex","randomValue","pad","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","arrForEach","callbackfn","len","idx","arrIndexOf","searchElement","fromIndex","lp","arrMap","arrReduce","initialValue","strTrim","objKeys","hasDontEnumBug","dontEnums","dontEnumsLength","objDefineAccessors","getProp","defineProp","addEventHandler","eventName","doc","EventHelper","Attach","dateNow","dt","perfNow","perf","newId","number","random32","isIE","signed","Uint32Array","mwcRandom32","mwcRandomSeed","generateW3CId","tmp","hexValues","oct","clockSequenceHi","isTypeof","isUndefined","isNullOrUndefined","isFunction","isObject","objCreate","AttachEvent","Detach","DetachEvent","_InternalMessageId","BrowserDoesNotSupportLocalStorage","BrowserCannotReadLocalStorage","BrowserCannotReadSessionStorage","BrowserCannotWriteLocalStorage","BrowserCannotWriteSessionStorage","BrowserFailedRemovalFromLocalStorage","BrowserFailedRemovalFromSessionStorage","CannotSendEmptyTelemetry","ClientPerformanceMathError","ErrorParsingAISessionCookie","ErrorPVCalc","ExceptionWhileLoggingError","FailedAddingTelemetryToBuffer","FailedMonitorAjaxAbort","FailedMonitorAjaxDur","FailedMonitorAjaxOpen","FailedMonitorAjaxRSC","FailedMonitorAjaxSend","FailedMonitorAjaxGetCorrelationHeader","FailedToAddHandlerForOnBeforeUnload","FailedToSendQueuedTelemetry","FailedToReportDataLoss","FlushFailed","MessageLimitPerPVExceeded","MissingRequiredFieldSpecification","NavigationTimingNotSupported","OnError","SessionRenewalDateIsZero","SenderNotInitialized","StartTrackEventFailed","StopTrackEventFailed","StartTrackFailed","StopTrackFailed","TelemetrySampledAndNotSent","TrackEventFailed","TrackExceptionFailed","TrackMetricFailed","TrackPVFailed","TrackPVFailedCalc","TrackTraceFailed","TransmissionFailed","FailedToSetStorageBuffer","FailedToRestoreStorageBuffer","InvalidBackendResponse","FailedToFixDepricatedValues","InvalidDurationValue","TelemetryEnvelopeInvalid","CreateEnvelopeError","CannotSerializeObject","CannotSerializeObjectNonSerializable","CircularReferenceDetected","ClearAuthContextFailed","ExceptionTruncated","IllegalCharsInName","ItemNotInArray","MaxAjaxPerPVExceeded","MessageTruncated","NameTooLong","SampleRateOutOfRange","SetAuthContextFailed","SetAuthContextFailedAccountName","StringValueTooLong","StartCalledMoreThanOnce","StopCalledWithoutStart","TelemetryInitializerFailed","TrackArgumentsNotSpecified","UrlTooLong","SessionStorageBufferFull","CannotAccessCookie","IdTooLong","InvalidEvent","FailedMonitorAjaxSetRequestHeader","SendBrowserInfoOnUserInit","PluginException","NotificationException","SnippetScriptLoadFailure","InvalidInstrumentationKey","Constructor","Prototype","dynamicproto_js_strFunction","DynInstFuncTable","DynProxyTag","DynClassName","DynClassNamePrefix","DynInstChkTag","DynAllowInstChkTag","DynProtoDefaultOptions","UnknownValue","str__Proto","strUseBaseInst","strSetInstFuncs","_objGetPrototypeOf","_dynamicNames","dynamicproto_js_hasOwnProperty","dynamicproto_js_isFunction","_isObjectOrArrayPrototype","_isObjectArrayOrFunctionPrototype","_getObjProto","newProto","_isDynamicCandidate","funcName","skipOwn","_throwTypeError","_hasVisited","_populatePrototype","proto","className","baseInstFuncs","setInstanceFunc","_createDynamicPrototype","dynProtoProxy","currentDynProtoProxy","instFunc","instFuncTable","canAddInst","objProto","visited","protoFunc","_getInstFunc","_getProtoFunc","instFuncs","_getObjName","unknownValue","dynamicProto","theClass","delegateFunc","classProto","thisTarget","thisProto","_checkPrototype","perfOptions","useBaseInst","_getInstanceFuncs","_instFuncProxy","funcHost","theFunc","baseFuncs","baseProto","_getBaseFuncs","setInstFuncs","dynamicproto_js","AiNonUserActionablePrefix","AiUserActionablePrefix","AIInternalMessagePrefix","_sanitizeDiagnosticText","DiagnosticLogger_InternalLogMessage","_InternalLogMessage","msgId","isUserAct","messageId","strProps","diagnosticText","dataType","DiagnosticLogger_DiagnosticLogger","DiagnosticLogger","identifier","queue","_messageCount","_messageLogged","_self","_getConfigValue","defValue","consoleLoggingLevel","telemetryLoggingLevel","maxInternalMessageLimit","enableDebugExceptions","throwInternal","severity","messageKey","WARNING","warnToConsole","logInternalMessage","theConsole","logFunc","resetInternalMessageCount","logMessage","throttleLimitMessage","throttleMessage","strExecutionContextKey","PerfManager_PerfEvent","PerfEvent","payloadDetails","isAsync","theDetails_1","accessorDefined","start","isChildEvt","getCtx","ParentContextKey","ChildrenContextKey","setCtx","complete","childTime","childEvts","childEvt","time","exTime","payload","PerfManager_PerfManager","PerfManager","manager","fire","perfEvent","doPerfActiveKey","doPerf","mgrSource","getSource","details","perfMgr","perfEvt","currentActive","children","ex","TelemetryPluginChain_isFunction","TelemetryPluginChain_TelemetryPluginChain","plugin","defItemCtx","_nextProxy","_hasProcessTelemetry","processTelemetry","_hasSetNext","setNextPlugin","_hasRun","getPlugin","setNext","nextPlugin","env","itemCtx","hasRun","diagLog","CRITICAL","ProcessTelemetryContext_isNullOrUndefined","_createProxyChain","plugins","proxies","lastProxy","thePlugin","newProxy","ProcessTelemetryContext_ProcessTelemetryContext","ProcessTelemetryContext","startAt","_copyProxyChain","srcPlugins","_copyPluginChain","logger","getCfg","getExtCfg","defaultValue","theConfig","extConfig","extensionConfig","getConfig","theValue","processNext","createNew","BaseTelemetryPlugin_isFunction","BaseTelemetryPlugin_BaseTelemetryPlugin","BaseTelemetryPlugin","_isinitialized","_rootCtx","_nextPlugin","_getTelCtx","isInitialized","setInitialized","currentCtx","rootCtx","_baseTelInit","extensions","pluginChain","getProcessTelContext","initialize","TelemetryHelpers_isFunction","priority","initializePlugins","processContext","initPlugins","lastPlugin","sortPlugins","extA","extB","bHasProcess","StorageType","FieldType","DistributedTracingModes","ChannelControllerPriority","ChannelValidationMessage","_objDefineAccessors","ChannelController_ChannelController","ChannelController","_channelQueue","_arrForEach","_addChannelQueue","queueItem","_checkQueuePriority","_base","queues","getChannelControls","isCookieUseDisabled","channels","extensionQueue_1","_createChannelQueues","_staticInit","validationError","BaseCore_arrForEach","BaseCore_isNullOrUndefined","strNotificationManager","BaseCore_BaseCore","BaseCore","_eventQueue","_channelController","_notificationManager","_perfManager","_isInitialized","_extensions","notificationManager","NotificationManager","allExtensions","coreExtensions","channelExtensions","extPriorities","ext","extPriority","getTransmissionControls","releaseQueue","track","telemetryItem","iKey","thePlugins","getNotifyMgr","addNotificationListener","removeNotificationListener","eventsSent","events","eventsDiscarded","eventsSendRequest","sendReason","getPerfMgr","enablePerfMgr","setPerfMgr","eventCnt","event","EventsDiscardedReason","Unknown","NonRetryableStatus","SizeLimitExceeded","KillSwitch","QueueFull","NotificationManager_NotificationManager","perfEvtsSendAll","AppInsightsCore_AppInsightsCore","AppInsightsCore","_notifyInvalidEvent","_validateTelemetryItem","pollInternalLogs","diagnosticLogInterval","baseType","baseData","RequestHeaders","requestContextHeader","requestContextTargetKey","requestContextAppIdFormat","requestIdHeader","traceParentHeader","sdkContextHeader","sdkContextHeaderAppIdRequest","requestContextHeaderLowerCase","DataSanitizer_DataSanitizer","DataSanitizer","sanitizeKeyAndAddUniqueness","origLength","sanitizeKey","uniqueField","MAX_NAME_LENGTH","padNumber","nameTrunc","sanitizeString","valueTrunc","MAX_STRING_LENGTH","sanitizeUrl","sanitizeInput","MAX_URL_LENGTH","sanitizeMessage","messageTrunc","MAX_MESSAGE_LENGTH","sanitizeException","exception","exceptionTrunc","MAX_EXCEPTION_LENGTH","sanitizeProperties","tempProps","MAX_PROPERTY_LENGTH","sanitizeMeasurements","measurements","tempMeasurements","measure","sanitizeId","MAX_ID_LENGTH","_msgId","inputTrunc","Util_navigator","Util_isString","_uaDisallowsSameSiteNone","Util_Util","createDomEvent","initEvent","disableStorage","_canUseLocalStorage","_canUseSessionStorage","_getLocalStorageObject","canUseLocalStorage","_getVerifiedStorageObject","LocalStorage","storageType","uid","isInternalApplicationInsightsEndpoint","endpointUrl","_internalEndpoints","getStorage","getExceptionName","dump","setStorage","removeStorage","_getSessionStorageObject","canUseSessionStorage","SessionStorage","getSessionStorageKeys","getSessionStorage","setSessionStorage","removeSessionStorage","canUseCookies","cookie","disallowsSameSiteNone","_endsWith","setCookie","domainAttrib","secureAttrib","location_1","stringToBoolOrDefault","getCookie","cookieName","cookies","deleteCookie","getIEVersion","userAgentStr","myNav","tridentVer","msToTimeSpan","totalms","ms","sec","hour","days","isCrossOriginError","lineNumber","columnNumber","objectTypeDump","propertyValueDump","IsBeaconApiSupported","sendBeacon","getExtension","extension","extIx","NotSpecified","toISOStringForIE8","Util_UrlHelper","UrlHelper","parseUrl","anchorIdx","_htmlAnchorIdx","anchorCache","_htmlAnchorElement","tempAnchor","host","parseHost","getAbsoluteUrl","getPathName","pathname","getCompleteUrl","inclPort","fullHost","parseFullHost","port","Util_CorrelationIdHelper","CorrelationIdHelper","canIncludeCorrelationHeader","requestUrl","currentHost","disableCorrelationHeaders","correlationHeaderExcludePatterns","requestHost","enableCorsCorrelation","matchExists_1","includedDomains","correlationHeaderDomains","excludedDomains","correlationHeaderExcludedDomains","getCorrelationContext","responseHeader","getCorrelationContextValue","correlationIdPrefix","keyValues","keyValue","Util_AjaxHelper","AjaxHelper","ParseDependencyPath","commandName","parsedUrl","pathName","Util_DateTimeUtils","DateTimeUtils","Now","timing","navigationStart","GetDuration","end","DisabledPropertyName","SampleRate","ProcessLegacy","HttpMethod","DEFAULT_BREEZE_ENDPOINT","ConnectionStringParser_ConnectionStringParser","ConnectionStringParser","connectionString","kvPairs","_FIELDS_SEPARATOR","fields","kv","kvParts","_FIELD_KEY_VALUE_SEPARATOR","endpointsuffix","locationPrefix","ingestionendpoint","Base","Data_Data","Data","Common_Envelope_Envelope","Envelope","aiDataContract","Required","sampleRate","Hidden","tags","Domain","EventData","Event_Event","Default","envelopeType","StackFrame","ExceptionData","exceptions","ExceptionDetails","hasFullStack","parsedStack","strError","DataPointType","Exception_Exception","Exception","severityLevel","_isExceptionInternal","Exception_ExceptionDetails","problemGroup","isManual","CreateFromInterface","toInterface","CreateSimpleException","typeName","assembly","fileName","_ExceptionDetails","outerId","_isExceptionDetailsInternal","evt","errorType","_getErrorType","parseStack","frame","Exception_StackFrame","frames_1","totalSizeInBytes","parsedFrame","sizeInBytes","left","right","acceptedLeft","acceptedRight","howMany","_StackFrame","sourceFrame","baseSize","MetricData","metrics","SeverityLevel","Common_DataPoint_DataPoint","DataPoint","stdDev","Measurement","Metric_Metric","Metric","dataPoint","PageViewData","PageView_PageView","PageView","durationMs","duration","Telemetry_RemoteDependencyData_RemoteDependencyData","RemoteDependencyData","success","resultCode","requestAPI","correlationContext","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","Trace_Trace","Trace","MessageData","PageViewPerformance_PageViewPerformance","PageViewPerformance","unused","cs4BaseData","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","PageViewPerfData","Common_Data_Data","IConfig_ConfigurationManager","ConfigurationManager","configValue","ContextTagKeys","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalNodeName","internalSdkVersion","internalAgentVersion","internalSnippet","internalSdkSrc","TelemetryItemCreator_TelemetryItemCreator","TelemetryItemCreator","envelopeName","systemProperties","Extensions","UserExt","DeviceExt","TraceExt","WebExt","AppExt","OSExt","SessionExt","SDKExt","CtxTagKeys","PropertiesPluginIdentifier","BreezeChannelIdentifier","AnalyticsPluginIdentifier","PageViewManager_PageViewManager","PageViewManager","overridePageViewDuration","pageViewPerformanceManager","_logger","intervalHandle","itemQueue","pageViewPerformanceSent","_flushChannels","flush","trackPageView","pageView","isPerformanceTimingSupported","sendPageViewInternal","customDuration","pageViewSent","getPerformanceTiming","shouldCollectDuration","cb","allItems","doFlush","_addQueue","processed","isPerformanceTimingDataReady","pageViewPerformance","populatePageViewPerformanceEvent","isValid","sendPageViewPerformanceInternal","PageVisitTimeManager_PageVisitTimeManager","PageVisitTimeManager","pageVisitTimeTrackingHandler","prevPageVisitDataKeyName","trackPreviousPageVisit","currentPageName","currentPageUrl","prevPageVisitTimeData","restartPageVisitTimer","pageUrl","pageVisitTime","prevPageVisitData","stopPageVisitTimer","startPageVisitTimer","currPageVisitData","PageVisitTimeManager_PageVisitData","currPageVisitDataStr","pageVisitEndTime","pageVisitDataJsonStr","pageVisitStartTime","PageViewPerformanceManager_PageViewPerformanceManager","PageViewPerformanceManager","MAX_DURATION_ALLOWED","navigationTiming","getPerformanceNavigationTiming","total","network","startTime","connectEnd","requestStart","responseStart","responseEnd","dom","loadEventEnd","isPerformanceNavigationTimingSupported","getEntriesByType","domainLookupStart","domLoading","durations","botAgentNames","isGoogleBot","_dispatchEvent","evnt","ApplicationInsights_ApplicationInsights","autoRoutePVDelay","_trackAjaxAttempts","_prevUri","getDefaultConfig","sessionRenewalMs","sessionExpirationMs","disableExceptionTracking","autoTrackPageVisitTime","enableUnhandledPromiseRejectionTracking","samplingPercentage","isStorageUseDisabled","isBrowserLinkTrackingEnabled","doNotSendItem","telemetryInitializersCount","_telemetryInitializers","telemetryInitializer","trackEvent","startTrackEvent","_eventTracking","stopTrackEvent","stop","trackTrace","trace","trackMetric","metric","inPv","_pageViewManager","_pageVisitTimeManager","refUri","trackPageViewPerformance","_pageViewPerformanceManager","startTrackPage","_pageTracking","stopTrackPage","measurement","loc","sendExceptionInternal","exceptionPartB","trackException","_onerror","properties_1","_sendCORSException","errorString","addTelemetryInitializer","_globalconfig","defaults","configGetters","accountId","cookieDomain","sdkExtension","appId","trackPageVisitTime","_addDefaultTelemetryInitializers","ApplicationInsights_Timing","pageViewItem","_window","_history","_location","autoExceptionInstrumented","originalOnError_1","handled","autoUnhandledPromiseInstrumented","originalOnUnhandledRejection_1","pushState","replaceState","_self_1","_properties","telemetryTrace","traceID","_currUri","PageName","PageUrl","average","sampleCount","browserLinkPaths_1","_addTelemetryInitializer","envelope","remoteData","Timing","_name","_events","SendBuffer_ArraySendBuffer","ArraySendBuffer","_buffer","enqueue","getItems","batchPayloads","emitLineDelimitedJson","markAsSent","clearSent","SendBuffer_SessionStorageSendBuffer","SessionStorageSendBuffer","_bufferFullMessageSent","bufferItems","_getBuffer","BUFFER_KEY","notDeliveredItems","SENT_BUFFER_KEY","_removePayloadsFromBuffer","payloads","remaining","prefixedKey","bufferJson","_setBuffer","MAX_BUFFER_SIZE","sentElements","EnvelopeCreator_arrForEach","EnvelopeCreator_isNullOrUndefined","_setValueIf","EnvelopeCreator_EnvelopeCreator","EnvelopeCreator","extractPropsAndMeasurements","createEnvelope","iKeyNoDashes","extractPartAExtensions","envTags","itmExt","itmTags","extUser","authId","localId","extApp","app","sesId","extDevice","device","deviceClass","ip","model","browserLang","browserVer","browser","envData","envBaseData","envProps","screenRes","userConsent","extOs","os","extTrace","parentID","tgs","tg","Init","EnvelopeCreator_DependencyEnvelopeCreator","DependencyEnvelopeCreator","Create","customMeasurements","bd","remoteDepData","responseCode","EnvelopeCreator_EventEnvelopeCreator","EventEnvelopeCreator","eventData","EnvelopeCreator_ExceptionEnvelopeCreator","ExceptionEnvelopeCreator","exData","EnvelopeCreator_MetricEnvelopeCreator","MetricEnvelopeCreator","baseMetricData","EnvelopeCreator_PageViewEnvelopeCreator","PageViewEnvelopeCreator","currentContextId","pageType","isLoggedIn","pageTags_1","pageViewData","EnvelopeCreator_PageViewPerformanceEnvelopeCreator","PageViewPerformanceEnvelopeCreator","EnvelopeCreator_TraceEnvelopeCreator","TraceEnvelopeCreator","Serializer_Serializer","Serializer","_serializeObject","output","_serializeStringMap","_serializeArray","contract","isRequired","isHidden","isPresent","expectedType","serialize","Offline","OfflineListener","_document","isListening","_onlineStatus","_setOnline","_setOffline","ononline","onoffline","isOnline","_navigator","onLine","isOffline","HashCodeScoreGenerator","getHashCodeScore","INT_MAX_VALUE","MIN_INPUT_LENGTH","SamplingScoreGenerator_SamplingScoreGenerator","SamplingScoreGenerator","hashCodeGeneragor","getSamplingScore","Sample_Sample","Sample","samplingRate","samplingScoreGenerator","isSampledIn","Sender_getResponseText","xhr","Sender_Sender","Sender","_consecutiveErrors","_retryAt","_timeoutHandle","_serializer","_XMLHttpRequestSupported","_notImplemented","_beaconSender","_senderConfig","plainTextBatch","_onSuccess","_xhrSender","endPointUrl","_xhrReadyStateChange","_onError","_formatErrorMessageXhr","_parseResponse","itemsReceived","itemsAccepted","errors","_resendPayload","linearFactor","payload_1","delayInSeconds","backOffSlot","pow","backOffDelay","retryAfterTimeSpan","_setRetryTime","_setupTimer","retryInterval","timerValue","triggerSend","_isRetriable","statusCode","_xdrSender","xdr","XDomainRequest","_xdrOnLoad","_formatErrorMessageXdr","hostingProtocol","pause","resume","onunloadFlush","onunloadDisableBeacon","isBeaconApiDisabled","teardown","_sender","defaultConfig","_getDefaultAppInsightsChannelConfig","_getEmptyAppInsightsChannelConfig","enableSessionStorageBuffer","_sample","disableInstrumentaionKeyValidation","_validateInstrumentationKey","disableTelemetry","_isSampledIn","aiEnvelope_1","constructEnvelope","doNotSendItem_1","callBack","bufferPayload","maxBatchSizeInBytes","countOfItemsInPayload","_appId","isRetryDisabled","_onPartialSuccess","async","forcedSender","sendRequest","_getNotifyMgr","_notifySendRequest","clearTimeout","ieVer","failed","errors_1","extracted","orig","Session","Session_SessionManager","_SessionManager","acquisitionSpan","renewalSpan","_storageNamePrefix","cookieNameConst","automaticSession","initializeAutomaticSession","acquisitionExpired","acquisitionDate","renewalExpired","renewalDate","renew","cookieUpdatedTimestamp","cookieUpdateInterval","backup","initializeAutomaticSessionWithData","sessionData","acq","renewal","idLength","acquisitionExpiry","renewalExpiry","cookieExpiry","UTCString","Application","Device","Internal","sdkVersion","User_User","User","isNewUser","userCookieName","cookieSeparator","acqStr","accountAcquisitionDate","newCookie","name_1","authCookie","authUserCookieName","authCookieString","decodeURI","authenticatedId","authenticatedUserId","storeInCookie","validateUserInput","clearAuthenticatedUserContext","TelemetryTrace_TelemetryTrace","parentId","TelemetryContext_TelemetryContext","TelemetryContext","internal","sessionManager","applySessionContext","sessionContext","applyOperatingSystemContxt","applyApplicationContext","build","applyDeviceContext","applyInternalContext","agentVersion","snippetVer","sdkSrc","applyLocationContext","applyOperationContext","applyWebContext","applyUserContext","cleanUp","dist_esm_PropertiesPlugin","PropertiesPlugin","_extensionConfig","this_1","_breezeChannel","_processTelemetryInternal","aiInstrumentHooks","cbNames","InstrumentHooks_str_Proto","strConstructor","_arrLoop","_doCallbacks","hooks","callDetails","cbArgs","hookCtx","hook","cbks","inst","orgEx","hookErrorCb","InstrumentHooks_objGetPrototypeOf","_getOwner","checkPrototype","owner","InstrumentHooks_getObjProto","InstrumentFunc","callbacks","aiHook_1","newFunc","aiHook","orgArgs","funcArgs","_createArgs","theArgs","arg","rslt","_createFunctionHook","theHook","rm","ajaxRecord_strProperties","_objKeys","ajaxRecord_arrForEach","_calcPerfDuration","resourceEntry","to","_setPerfDuration","_setPerfValue","XHRMonitoringState","openDone","setRequestHeaderDone","sendDone","abortDone","stateChangeAttached","ajaxRecord_ajaxRecord","ajaxRecord","spanID","perfMark","completed","requestHeadersSize","requestHeaders","responseReceivingDuration","callbackDuration","ajaxTotalDuration","requestSentTime","responseStartedTime","responseFinishedTime","callbackFinishedTime","endTime","xhrMonitoringState","clientFailure","CreateTrackItem","ajaxType","enableRequestHeaderTracking","getResponse","ajaxData","perfTiming","propsSet","_isString","strRedirect","strRedirectStart","strRedirectEnd","strDomainLookup","strConnect","strRequest","strResponse","serverTiming","server_1","normalizeJsName","newValue","val","perfAttempts","_populatePerfData","headerMap","responseHeaders","TraceParent_Traceparent","Traceparent","traceId","spanId","traceFlag","DEFAULT_TRACE_FLAG","DEFAULT_VERSION","isValidTraceId","isValidSpanId","AJAX_MONITOR_PREFIX","strDiagLog","strAjaxData","strThrowInternal","strFetch","ajax_isNullOrUndefined","ajax_arrForEach","ajax_objKeys","_markCount","_getFailedAjaxDiagnosticsMessage","_throwInternalCritical","ajaxMonitorInstance","_throwInternalWarning","_createErrorCallbackFunc","internalMessage","ajaxDiagnosticsMessage","_indexOf","_internalSdkSrc","ajax_AjaxMonitor","AjaxMonitor","_context","_isUsingW3CHeaders","_isUsingAIHeaders","_markPrefix","strTrackDependencyDataInternal","_fetchInitialized","_xhrInitialized","_currentWindowHost","_config","getEmptyConfig","_enableRequestHeaderTracking","_enableAjaxPerfTracking","_maxAjaxCallsPerView","_enableResponseHeaderTracking","_hooks","_disabledUrls","base","_hookProto","InstrumentProto","_isDisabledRequest","isDisabled","theUrl","idx2","_isMonitoredXhrInstance","excludeAjaxDataValidation","ajaxValidation","initialized","_createMarkId","performance_1","mark","markId","getEntriesByName","_findPerfResourceEntry","initiatorType","trackCallback","reportError","performance","maxAttempts","maxAjaxPerfLookupAttempts","retryDelay","ajaxPerfLookupDelay","attempt","locateResourceTiming","getEntries","entryType","clearMarks","_getFailedFetchDiagnosticsMessage","_reportFetchMetrics","_reportFetchError","failedProps","errorProps","ctx_1","defaultConfig_1","distributedTracingMode","enableAjaxPerfTracking","maxAjaxCallsPerView","enableResponseHeaderTracking","AI","AI_AND_W3C","W3C","disableAjaxTracking","theOpen","_supportsAjaxMonitoring","req","_reportXhrError","ajaxResponse","responseHeadersString","getResponseHeader","_getAjaxCorrelationContext","_getResponseText","responseHeaderMap_2","_onAjaxComplete","exceptionText","_attachToOnReadyStateChange","_openHandler","hkErr","includeCorrelationHeaders","_global","_supportsFetch","isPolyfill","fetchData","_createFetchRecord","newInit","rsp","fetchDiagnosticsMessage","_getFetchCorrelationContext","responseHeaderMap_1","_instrumentFetch","propExt","trackDependencyData","currentWindowHost","traceparent","enableAjaxErrorStatusText","emptyConfig","Telemetry","applicationinsights_common_namespaceObject","Initialization_Initialization","Initialization","snippet","_snippetVersion","sv","cs","ingest","instrumentationkey","dependencies","getSKUDefaults","inPvp","channel","legacyMode","appInsightsChannel","_updateSnippetProperties","emptyQueue","addHousekeepingBeforeUnload","updateSnippetDefinitions","length_1","appInsightsInstance","performHousekeeping","_sessionManager","disableFlushOnBeforeUnload","added","nav","product","isReactNative","disableFlushOnUnload","cdns","scrpt","currentScript","ApplicationInsightsDeprecated_AppInsightsDeprecated","AppInsightsDeprecated","appInsightsNew","_hasLegacyInitializers","_queue","addTelemetryInitializers","enableDebug","verboseLogging","_processLegacyInitializers","telemetry","trackDependency","totalTime","handledAt","downloadAndSetup","originalTrackPageView_1","pagePath","ApplicationInsightsContainer_ApplicationInsightsContainer","ApplicationInsightsContainer","getAppInsights","initialization","legacy","opQuery","selectProperties","childSelectProperties","builder","setProperty","objectProperties","actions","ObjectPath","staticMethod","typeId","objConstructor","MethodParams","_p","initValues","string","boolean","strArray","objectPath","inputIndex","toArray","arrParams","writeObjectPathBody","objectPaths","replaceAfter","opSetId","opSetPathId","opSetParentId","opSetPathParamId","indexMapper","sp_clientsvc_es5_ObjectPathQueue","ObjectPathQueue","_paths","_relationships","_contextIndex","_siteIndex","_webIndex","dirty","lastIndex","addChildRelationship","parentIndex","childIndex","common_es5","getChildRelationship","getChildRelationships","appendAction","appendActionToLast","contextIndex","staticProperty","toBody","_xml","toIndexedTree","builderIndex","lastOpId","idIndexMap","opId","sp_clientsvc_es5_ProcessQueryParser","ProcessQueryParser","parsed","ErrorInfo","findResult","getParsedResultById","IsNull","ProcessQueryPath","sp_clientsvc_es5_ClientSvcQueryable","ClientSvcQueryable","_objectPaths","_selects","getSelects","getChild","getChildProperty","clientsvc_ObjectPaths","sendGet","sendGetCollection","invokeMethod","invokeMethodImpl","invokeMethodAction","invokeNonQuery","invokeMethodCollection","invokeUpdate","sp_es5","content-type","odata_es5","queryAction","isAction","methodAction","sp_clientsvc_es5_ObjectPathBatch","ObjectPathBatch","logging_es5","executor","sp_clientsvc_es5_BatchExecutor","appendRequests","BatchExecutor","_requests","_builderIndex","method$$1","pathQueue","indexMappingFunction","opActions","obPaths","ProcessQueryCachingParserWrapper","BatchParser","wrapper","sp_taxonomy_es5_Labels","Label","sp_taxonomy_es5_Session","sp_taxonomy_es5_TermGroup","sp_taxonomy_es5_Terms","sp_taxonomy_es5_Term","sp_taxonomy_es5_TermSets","sp_taxonomy_es5_TermSet","sp_taxonomy_es5_TermStores","sp_taxonomy_es5_TermStore","StringMatchOption","ChangedItemType","ChangedOperationType","setItemMetaDataField","setItemMetaDataMultiField","sp_taxonomy_es5_extendStatics","sp_taxonomy_es5_extends","Labels","getByValue","setAsDefaultForLanguage","createLabel","isDefault","labels","deprecate","doDeprecate","getDescription","setDescription","setLocalCustomProperty","TermSets","TermSet","addStakeholder","stakeholderName","deleteStakeholder","addTerm","isAvailableForTagging","TermGroup","addContributor","principalName","addGroupManager","createTermSet","TermStores","TermStore","getTermSetsByName","getTermsById","ids","getTermInTermSet","termId","termSetId","getTermGroupById","getTerms","methodIndex","getSiteCollectionGroup","createIfMissing","methodParent","siteIndex","addLanguage","addGroup","commitAll","deleteLanguage","rollbackAll","updateCache","updateUsedTermsOnSite","getDefaultKeywordTermStore","getDefaultSiteCollectionTermStore","fieldName","postData","TermGuid","WssId","InternalName"],"mappings":"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","file":"./Share.Common.TypeScript.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"share\"] = factory();\n\telse\n\t\troot[\"share\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","/**\n * @license\n * v1.2.6\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https://github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\nimport { inject } from 'adal-angular/dist/adal.min.js';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\nvar global$1 = (typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {});\n\n/**\r\n * Gets a callback function which will maintain context across async calls.\r\n * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\r\n *\r\n * @param context The object that will be the 'this' value in the callback\r\n * @param method The method to which we will apply the context and parameters\r\n * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\r\n */\r\nfunction getCtxCallback(context, method) {\r\n    var params = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        params[_i - 2] = arguments[_i];\r\n    }\r\n    return function () {\r\n        method.apply(context, params);\r\n    };\r\n}\r\n/**\r\n * Adds a value to a date\r\n *\r\n * @param date The date to which we will add units, done in local time\r\n * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\r\n * @param units The amount to add to date of the given interval\r\n *\r\n * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\r\n */\r\nfunction dateAdd(date, interval, units) {\r\n    var ret = new Date(date); // don't change original date\r\n    switch (interval.toLowerCase()) {\r\n        case \"year\":\r\n            ret.setFullYear(ret.getFullYear() + units);\r\n            break;\r\n        case \"quarter\":\r\n            ret.setMonth(ret.getMonth() + 3 * units);\r\n            break;\r\n        case \"month\":\r\n            ret.setMonth(ret.getMonth() + units);\r\n            break;\r\n        case \"week\":\r\n            ret.setDate(ret.getDate() + 7 * units);\r\n            break;\r\n        case \"day\":\r\n            ret.setDate(ret.getDate() + units);\r\n            break;\r\n        case \"hour\":\r\n            ret.setTime(ret.getTime() + units * 3600000);\r\n            break;\r\n        case \"minute\":\r\n            ret.setTime(ret.getTime() + units * 60000);\r\n            break;\r\n        case \"second\":\r\n            ret.setTime(ret.getTime() + units * 1000);\r\n            break;\r\n        default:\r\n            ret = undefined;\r\n            break;\r\n    }\r\n    return ret;\r\n}\r\n/**\r\n * Combines an arbitrary set of paths ensuring and normalizes the slashes\r\n *\r\n * @param paths 0 to n path parts to combine\r\n */\r\nfunction combine() {\r\n    var paths = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        paths[_i] = arguments[_i];\r\n    }\r\n    return paths\r\n        .filter(function (path) { return !stringIsNullOrEmpty(path); })\r\n        .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\r\n        .join(\"/\")\r\n        .replace(/\\\\/g, \"/\");\r\n}\r\n/**\r\n * Gets a random string of chars length\r\n *\r\n * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\r\n *\r\n * @param chars The length of the random string to generate\r\n */\r\nfunction getRandomString(chars) {\r\n    var text = new Array(chars);\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < chars; i++) {\r\n        text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text.join(\"\");\r\n}\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* tslint:disable no-bitwise */\r\nfunction getGUID() {\r\n    var d = new Date().getTime();\r\n    var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n        var r = (d + Math.random() * 16) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n        return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\r\n    });\r\n    return guid;\r\n}\r\n/* tslint:enable */\r\n/**\r\n * Determines if a given value is a function\r\n *\r\n * @param cf The thing to test for functionness\r\n */\r\nfunction isFunc(cf) {\r\n    return typeof cf === \"function\";\r\n}\r\n/**\r\n * Determines if an object is both defined and not null\r\n * @param obj Object to test\r\n */\r\nfunction objectDefinedNotNull(obj) {\r\n    return typeof obj !== \"undefined\" && obj !== null;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n*/\r\nfunction isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    return array && typeof array.length === \"number\" && array.constructor === Array;\r\n}\r\n/**\r\n * Provides functionality to extend the given object by doing a shallow copy\r\n *\r\n * @param target The object to which properties will be copied\r\n * @param source The source object from which properties will be copied\r\n * @param noOverwrite If true existing properties on the target are not overwritten from the source\r\n * @param filter If provided allows additional filtering on what properties are copied (propName: string) => boolean\r\n *\r\n */\r\nfunction extend(target, source, noOverwrite, filter) {\r\n    if (noOverwrite === void 0) { noOverwrite = false; }\r\n    if (filter === void 0) { filter = function () { return true; }; }\r\n    if (!objectDefinedNotNull(source)) {\r\n        return target;\r\n    }\r\n    // ensure we don't overwrite things we don't want overwritten\r\n    var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\r\n    // final filter we will use\r\n    var f = function (v) { return check(target, v) && filter(v); };\r\n    return Object.getOwnPropertyNames(source)\r\n        .filter(f)\r\n        .reduce(function (t, v) {\r\n        t[v] = source[v];\r\n        return t;\r\n    }, target);\r\n}\r\n/**\r\n * Determines if a given url is absolute\r\n *\r\n * @param url The url to check to see if it is absolute\r\n */\r\nfunction isUrlAbsolute(url) {\r\n    return /^https?:\\/\\/|^\\/\\//i.test(url);\r\n}\r\n/**\r\n * Determines if a string is null or empty or undefined\r\n *\r\n * @param s The string to test\r\n */\r\nfunction stringIsNullOrEmpty(s) {\r\n    return s === undefined || s === null || s.length < 1;\r\n}\r\n/**\r\n * Gets an attribute value from an html/xml string block. NOTE: if the input attribute value has\r\n * RegEx special characters they will be escaped in the returned string\r\n *\r\n * @param html HTML to search\r\n * @param attrName The name of the attribute to find\r\n */\r\nfunction getAttrValueFromString(html, attrName) {\r\n    // make the input safe for regex\r\n    html = html.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    var reg = new RegExp(attrName + \"\\\\s*?=\\\\s*?(\\\"|')([^\\\\1]*?)\\\\1\", \"i\");\r\n    var match = reg.exec(html);\r\n    return match !== null && match.length > 0 ? match[2] : null;\r\n}\r\n/**\r\n * Ensures guid values are represented consistently as \"ea123463-137d-4ae3-89b8-cf3fc578ca05\"\r\n *\r\n * @param guid The candidate guid\r\n */\r\nfunction sanitizeGuid(guid) {\r\n    if (stringIsNullOrEmpty(guid)) {\r\n        return guid;\r\n    }\r\n    var matches = /([0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12})/i.exec(guid);\r\n    return matches === null ? guid : matches[1];\r\n}\r\n/**\r\n * Shorthand for JSON.stringify\r\n *\r\n * @param o Any type of object\r\n */\r\nfunction jsS(o) {\r\n    return JSON.stringify(o);\r\n}\r\n/**\r\n * Shorthand for Object.hasOwnProperty\r\n *\r\n * @param o Object to check for\r\n * @param p Name of the property\r\n */\r\nfunction hOP(o, p) {\r\n    return Object.hasOwnProperty.call(o, p);\r\n}\r\n/**\r\n * Generates a ~unique hash code\r\n *\r\n * From: https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\r\n */\r\n// tslint:disable:no-bitwise\r\nfunction getHashCode(s) {\r\n    var hash = 0;\r\n    if (s.length === 0) {\r\n        return hash;\r\n    }\r\n    for (var i = 0; i < s.length; i++) {\r\n        var chr = s.charCodeAt(i);\r\n        hash = ((hash << 5) - hash) + chr;\r\n        hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n// tslint:enable:no-bitwise\n\nfunction mergeHeaders(target, source) {\r\n    if (source !== undefined && source !== null) {\r\n        var temp = new Request(\"\", { headers: source });\r\n        temp.headers.forEach(function (value, name) {\r\n            target.append(name, value);\r\n        });\r\n    }\r\n}\r\nfunction mergeOptions(target, source) {\r\n    if (objectDefinedNotNull(source)) {\r\n        var headers = extend(target.headers || {}, source.headers);\r\n        target = extend(target, source);\r\n        target.headers = headers;\r\n    }\r\n}\r\n/**\r\n * Makes requests using the global/window fetch API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    FetchClient.prototype.fetch = function (url, options) {\r\n        return global$1.fetch(url, options);\r\n    };\r\n    return FetchClient;\r\n}());\r\n/**\r\n * Makes requests using the fetch API adding the supplied token to the Authorization header\r\n */\r\nvar BearerTokenFetchClient = /** @class */ (function (_super) {\r\n    __extends(BearerTokenFetchClient, _super);\r\n    function BearerTokenFetchClient(_token) {\r\n        var _this = _super.call(this) || this;\r\n        _this._token = _token;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BearerTokenFetchClient.prototype, \"token\", {\r\n        get: function () {\r\n            return this._token || \"\";\r\n        },\r\n        set: function (token) {\r\n            this._token = token;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BearerTokenFetchClient.prototype.fetch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var headers = new Headers();\r\n        mergeHeaders(headers, options.headers);\r\n        headers.set(\"Authorization\", \"Bearer \" + this._token);\r\n        options.headers = headers;\r\n        return _super.prototype.fetch.call(this, url, options);\r\n    };\r\n    return BearerTokenFetchClient;\r\n}(FetchClient));\n\n/**\r\n * Parses out the root of the request url to use as the resource when getting the token\r\n *\r\n * After: https://gist.github.com/jlong/2428561\r\n * @param url The url to parse\r\n */\r\nfunction getResource(url) {\r\n    var parser = document.createElement(\"a\");\r\n    parser.href = url;\r\n    return parser.protocol + \"//\" + parser.hostname;\r\n}\r\n/**\r\n * Azure AD Client for use in the browser\r\n */\r\nvar AdalClient = /** @class */ (function (_super) {\r\n    __extends(AdalClient, _super);\r\n    /**\r\n     * Creates a new instance of AdalClient\r\n     * @param clientId Azure App Id\r\n     * @param tenant Office 365 tenant (Ex: {tenant}.onmicrosoft.com)\r\n     * @param redirectUri The redirect url used to authenticate the\r\n     */\r\n    function AdalClient(clientId, tenant, redirectUri) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.clientId = clientId;\r\n        _this.tenant = tenant;\r\n        _this.redirectUri = redirectUri;\r\n        _this._displayCallback = null;\r\n        _this._loginPromise = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new AdalClient using the values of the supplied SPFx context (requires SPFx >= 1.6)\r\n     *\r\n     * @param spfxContext Current SPFx context\r\n     * @description Using this method requires that the features described in this article\r\n     * https://docs.microsoft.com/en-us/sharepoint/dev/spfx/use-aadhttpclient are activated in the tenant.\r\n     */\r\n    AdalClient.fromSPFxContext = function (spfxContext) {\r\n        return new SPFxAdalClient(spfxContext);\r\n    };\r\n    /**\r\n     * Conducts the fetch opertation against the AAD secured resource\r\n     *\r\n     * @param url Absolute URL for the request\r\n     * @param options Any fetch options passed to the underlying fetch implementation\r\n     */\r\n    AdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (!isUrlAbsolute(url)) {\r\n            throw Error(\"You must supply absolute urls to AdalClient.fetch.\");\r\n        }\r\n        // the url we are calling is the resource\r\n        return this.getToken(getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a token based on the current user\r\n     *\r\n     * @param resource The resource for which we are requesting a token\r\n     */\r\n    AdalClient.prototype.getToken = function (resource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.ensureAuthContext().then(function (_) { return _this.login(); }).then(function (_) {\r\n                AdalClient._authContext.acquireToken(resource, function (message, token) {\r\n                    if (message) {\r\n                        return reject(Error(message));\r\n                    }\r\n                    resolve(token);\r\n                });\r\n            }).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have created and setup the adal AuthenticationContext instance\r\n     */\r\n    AdalClient.prototype.ensureAuthContext = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            if (AdalClient._authContext === null) {\r\n                AdalClient._authContext = inject({\r\n                    clientId: _this.clientId,\r\n                    displayCall: function (url) {\r\n                        if (_this._displayCallback) {\r\n                            _this._displayCallback(url);\r\n                        }\r\n                    },\r\n                    navigateToLoginRequestUrl: false,\r\n                    redirectUri: _this.redirectUri,\r\n                    tenant: _this.tenant,\r\n                });\r\n            }\r\n            resolve();\r\n        });\r\n    };\r\n    /**\r\n     * Ensures the current user is logged in\r\n     */\r\n    AdalClient.prototype.login = function () {\r\n        var _this = this;\r\n        if (this._loginPromise) {\r\n            return this._loginPromise;\r\n        }\r\n        this._loginPromise = new Promise(function (resolve, reject) {\r\n            if (AdalClient._authContext.getCachedUser()) {\r\n                return resolve();\r\n            }\r\n            _this._displayCallback = function (url) {\r\n                var popupWindow = window.open(url, \"login\", \"width=483, height=600\");\r\n                if (!popupWindow) {\r\n                    return reject(Error(\"Could not open pop-up window for auth. Likely pop-ups are blocked by the browser.\"));\r\n                }\r\n                if (popupWindow && popupWindow.focus) {\r\n                    popupWindow.focus();\r\n                }\r\n                var pollTimer = window.setInterval(function () {\r\n                    if (!popupWindow || popupWindow.closed || popupWindow.closed === undefined) {\r\n                        window.clearInterval(pollTimer);\r\n                    }\r\n                    try {\r\n                        if (popupWindow.document.URL.indexOf(_this.redirectUri) !== -1) {\r\n                            window.clearInterval(pollTimer);\r\n                            AdalClient._authContext.handleWindowCallback(popupWindow.location.hash);\r\n                            popupWindow.close();\r\n                            resolve();\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }, 30);\r\n            };\r\n            // this triggers the login process\r\n            _this.ensureAuthContext().then(function (_) {\r\n                AdalClient._authContext._loginInProgress = false;\r\n                AdalClient._authContext.login();\r\n                _this._displayCallback = null;\r\n            });\r\n        });\r\n        return this._loginPromise;\r\n    };\r\n    /**\r\n     * Our auth context\r\n     */\r\n    AdalClient._authContext = null;\r\n    return AdalClient;\r\n}(BearerTokenFetchClient));\r\n/**\r\n * Client wrapping the aadTokenProvider available from SPFx >= 1.6\r\n */\r\nvar SPFxAdalClient = /** @class */ (function (_super) {\r\n    __extends(SPFxAdalClient, _super);\r\n    /**\r\n     *\r\n     * @param context provide the appropriate SPFx Context object\r\n     */\r\n    function SPFxAdalClient(context) {\r\n        var _this = _super.call(this, null) || this;\r\n        _this.context = context;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Executes a fetch request using the supplied url and options\r\n     *\r\n     * @param url Absolute url of the request\r\n     * @param options Any options\r\n     */\r\n    SPFxAdalClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        return this.getToken(getResource(url)).then(function (token) {\r\n            _this.token = token;\r\n            return _super.prototype.fetch.call(_this, url, options);\r\n        });\r\n    };\r\n    /**\r\n     * Gets an AAD token for the provided resource using the SPFx AADTokenProvider\r\n     *\r\n     * @param resource Resource for which a token is to be requested (ex: https://graph.microsoft.com)\r\n     */\r\n    SPFxAdalClient.prototype.getToken = function (resource) {\r\n        return this.context.aadTokenProviderFactory.getTokenProvider().then(function (provider) {\r\n            return provider.getToken(resource);\r\n        });\r\n    };\r\n    return SPFxAdalClient;\r\n}(BearerTokenFetchClient));\n\n/**\r\n * Used to calculate the object properties, with polyfill if needed\r\n */\r\nvar objectEntries = isFunc(Object.entries) ? Object.entries : function (o) { return Object.keys(o).map(function (k) { return [k, o[k]]; }); };\r\n/**\r\n * Converts the supplied object to a map\r\n *\r\n * @param o The object to map\r\n */\r\nfunction objectToMap(o) {\r\n    if (o !== undefined && o !== null) {\r\n        return new Map(objectEntries(o));\r\n    }\r\n    return new Map();\r\n}\r\n/**\r\n * Merges to Map instances together, overwriting values in target with matching keys, last in wins\r\n *\r\n * @param target map into which the other maps are merged\r\n * @param maps One or more maps to merge into the target\r\n */\r\nfunction mergeMaps(target) {\r\n    var maps = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        maps[_i - 1] = arguments[_i];\r\n    }\r\n    for (var i = 0; i < maps.length; i++) {\r\n        maps[i].forEach(function (v, k) {\r\n            target.set(k, v);\r\n        });\r\n    }\r\n    return target;\r\n}\n\nfunction setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\n// lable mapping for known config values\r\nvar s = [\r\n    \"defaultCachingStore\",\r\n    \"defaultCachingTimeoutSeconds\",\r\n    \"globalCacheDisable\",\r\n    \"enableCacheExpiration\",\r\n    \"cacheExpirationIntervalMilliseconds\",\r\n    \"spfxContext\",\r\n];\r\nvar RuntimeConfigImpl = /** @class */ (function () {\r\n    function RuntimeConfigImpl(_v) {\r\n        if (_v === void 0) { _v = new Map(); }\r\n        this._v = _v;\r\n        // setup defaults\r\n        this._v.set(s[0], \"session\");\r\n        this._v.set(s[1], 60);\r\n        this._v.set(s[2], false);\r\n        this._v.set(s[3], false);\r\n        this._v.set(s[4], 750);\r\n        this._v.set(s[5], null);\r\n    }\r\n    /**\r\n     *\r\n     * @param config The set of properties to add to the globa configuration instance\r\n     */\r\n    RuntimeConfigImpl.prototype.extend = function (config) {\r\n        this._v = mergeMaps(this._v, objectToMap(config));\r\n    };\r\n    RuntimeConfigImpl.prototype.get = function (key) {\r\n        return this._v.get(key);\r\n    };\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\r\n        get: function () {\r\n            return this.get(s[0]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\r\n        get: function () {\r\n            return this.get(s[1]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\r\n        get: function () {\r\n            return this.get(s[2]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"enableCacheExpiration\", {\r\n        get: function () {\r\n            return this.get(s[3]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"cacheExpirationIntervalMilliseconds\", {\r\n        get: function () {\r\n            return this.get(s[4]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"spfxContext\", {\r\n        get: function () {\r\n            return this.get(s[5]);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RuntimeConfigImpl;\r\n}());\r\nvar _runtimeConfig = new RuntimeConfigImpl();\r\nvar RuntimeConfig = _runtimeConfig;\n\n/**\r\n * A wrapper class to provide a consistent interface to browser based storage\r\n *\r\n */\r\nvar PnPClientStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorageWrapper class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\r\n        if (defaultTimeoutMinutes === void 0) { defaultTimeoutMinutes = -1; }\r\n        this.store = store;\r\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\r\n        this.enabled = this.test();\r\n        // if the cache timeout is enabled call the handler\r\n        // this will clear any expired items and set the timeout function\r\n        if (RuntimeConfig.enableCacheExpiration) {\r\n            this.cacheExpirationHandler();\r\n        }\r\n    }\r\n    /**\r\n     * Get a value from storage, or null if that value does not exist\r\n     *\r\n     * @param key The key whose value we want to retrieve\r\n     */\r\n    PnPClientStorageWrapper.prototype.get = function (key) {\r\n        if (!this.enabled) {\r\n            return null;\r\n        }\r\n        var o = this.store.getItem(key);\r\n        if (!objectDefinedNotNull(o)) {\r\n            return null;\r\n        }\r\n        var persistable = JSON.parse(o);\r\n        if (new Date(persistable.expiration) <= new Date()) {\r\n            this.delete(key);\r\n            return null;\r\n        }\r\n        else {\r\n            return persistable.value;\r\n        }\r\n    };\r\n    /**\r\n     * Adds a value to the underlying storage\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param o The value to store\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\r\n        if (this.enabled) {\r\n            this.store.setItem(key, this.createPersistable(o, expire));\r\n        }\r\n    };\r\n    /**\r\n     * Deletes a value from the underlying storage\r\n     *\r\n     * @param key The key of the pair we want to remove from storage\r\n     */\r\n    PnPClientStorageWrapper.prototype.delete = function (key) {\r\n        if (this.enabled) {\r\n            this.store.removeItem(key);\r\n        }\r\n    };\r\n    /**\r\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\r\n     *\r\n     * @param key The key to use when storing the provided value\r\n     * @param getter A function which will upon execution provide the desired value\r\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\r\n     */\r\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\r\n        var _this = this;\r\n        if (!this.enabled) {\r\n            return getter();\r\n        }\r\n        return new Promise(function (resolve) {\r\n            var o = _this.get(key);\r\n            if (o == null) {\r\n                getter().then(function (d) {\r\n                    _this.put(key, d, expire);\r\n                    resolve(d);\r\n                });\r\n            }\r\n            else {\r\n                resolve(o);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Deletes any expired items placed in the store by the pnp library, leaves other items untouched\r\n     */\r\n    PnPClientStorageWrapper.prototype.deleteExpired = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!_this.enabled) {\r\n                resolve();\r\n            }\r\n            try {\r\n                for (var i = 0; i < _this.store.length; i++) {\r\n                    var key = _this.store.key(i);\r\n                    if (key !== null) {\r\n                        // test the stored item to see if we stored it\r\n                        if (/[\"|']?pnp[\"|']? ?: ?1/i.test(_this.store.getItem(key))) {\r\n                            // get those items as get will delete from cache if they are expired\r\n                            _this.get(key);\r\n                        }\r\n                    }\r\n                }\r\n                resolve();\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Used to determine if the wrapped storage is available currently\r\n     */\r\n    PnPClientStorageWrapper.prototype.test = function () {\r\n        var str = \"t\";\r\n        try {\r\n            this.store.setItem(str, str);\r\n            this.store.removeItem(str);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Creates the persistable to store\r\n     */\r\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\r\n        if (expire === undefined) {\r\n            // ensure we are by default inline with the global library setting\r\n            var defaultTimeout = RuntimeConfig.defaultCachingTimeoutSeconds;\r\n            if (this.defaultTimeoutMinutes > 0) {\r\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\r\n            }\r\n            expire = dateAdd(new Date(), \"second\", defaultTimeout);\r\n        }\r\n        return jsS({ pnp: 1, expiration: expire, value: o });\r\n    };\r\n    /**\r\n     * Deletes expired items added by this library in this.store and sets a timeout to call itself\r\n     */\r\n    PnPClientStorageWrapper.prototype.cacheExpirationHandler = function () {\r\n        var _this = this;\r\n        this.deleteExpired().then(function (_) {\r\n            // call ourself in the future\r\n            setTimeout(getCtxCallback(_this, _this.cacheExpirationHandler), RuntimeConfig.cacheExpirationIntervalMilliseconds);\r\n        }).catch(function (e) {\r\n            console.error(e);\r\n        });\r\n    };\r\n    return PnPClientStorageWrapper;\r\n}());\r\n/**\r\n * A thin implementation of in-memory storage for use in nodejs\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage(_store) {\r\n        if (_store === void 0) { _store = new Map(); }\r\n        this._store = _store;\r\n    }\r\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\r\n        get: function () {\r\n            return this._store.size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MemoryStorage.prototype.clear = function () {\r\n        this._store.clear();\r\n    };\r\n    MemoryStorage.prototype.getItem = function (key) {\r\n        return this._store.get(key);\r\n    };\r\n    MemoryStorage.prototype.key = function (index) {\r\n        return Array.from(this._store)[index][0];\r\n    };\r\n    MemoryStorage.prototype.removeItem = function (key) {\r\n        this._store.delete(key);\r\n    };\r\n    MemoryStorage.prototype.setItem = function (key, data) {\r\n        this._store.set(key, data);\r\n    };\r\n    return MemoryStorage;\r\n}());\r\n/**\r\n * A class that will establish wrappers for both local and session storage\r\n */\r\nvar PnPClientStorage = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the PnPClientStorage class\r\n     *\r\n     * @constructor\r\n     */\r\n    function PnPClientStorage(_local, _session) {\r\n        if (_local === void 0) { _local = null; }\r\n        if (_session === void 0) { _session = null; }\r\n        this._local = _local;\r\n        this._session = _session;\r\n    }\r\n    Object.defineProperty(PnPClientStorage.prototype, \"local\", {\r\n        /**\r\n         * Provides access to the local storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._local === null) {\r\n                this._local = this.getStore(\"local\");\r\n            }\r\n            return this._local;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PnPClientStorage.prototype, \"session\", {\r\n        /**\r\n         * Provides access to the session storage of the browser\r\n         */\r\n        get: function () {\r\n            if (this._session === null) {\r\n                this._session = this.getStore(\"session\");\r\n            }\r\n            return this._session;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PnPClientStorage.prototype.getStore = function (name) {\r\n        if (name === \"local\") {\r\n            return new PnPClientStorageWrapper(typeof (localStorage) === \"undefined\" ? new MemoryStorage() : localStorage);\r\n        }\r\n        return new PnPClientStorageWrapper(typeof (sessionStorage) === \"undefined\" ? new MemoryStorage() : sessionStorage);\r\n    };\r\n    return PnPClientStorage;\r\n}());\n\nexport { AdalClient, SPFxAdalClient, objectToMap, mergeMaps, setup, RuntimeConfigImpl, RuntimeConfig, mergeHeaders, mergeOptions, FetchClient, BearerTokenFetchClient, PnPClientStorageWrapper, PnPClientStorage, getCtxCallback, dateAdd, combine, getRandomString, getGUID, isFunc, objectDefinedNotNull, isArray, extend, isUrlAbsolute, stringIsNullOrEmpty, getAttrValueFromString, sanitizeGuid, jsS, hOP, getHashCode };\n//# sourceMappingURL=common.es5.js.map\n","/**\n * @license\n * v1.2.6\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https://github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\n/**\r\n * Class used to subscribe ILogListener and log messages throughout an application\r\n *\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger() {\r\n    }\r\n    Object.defineProperty(Logger, \"activeLogLevel\", {\r\n        /**\r\n         * Gets or sets the active log level to apply for log filtering\r\n         */\r\n        get: function () {\r\n            return Logger.instance.activeLogLevel;\r\n        },\r\n        set: function (value) {\r\n            Logger.instance.activeLogLevel = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger, \"instance\", {\r\n        get: function () {\r\n            if (Logger._instance === undefined || Logger._instance === null) {\r\n                Logger._instance = new LoggerImpl();\r\n            }\r\n            return Logger._instance;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds ILogListener instances to the set of subscribed listeners\r\n     *\r\n     * @param listeners One or more listeners to subscribe to this log\r\n     */\r\n    Logger.subscribe = function () {\r\n        var listeners = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            listeners[_i] = arguments[_i];\r\n        }\r\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\r\n    };\r\n    /**\r\n     * Clears the subscribers collection, returning the collection before modifiction\r\n     */\r\n    Logger.clearSubscribers = function () {\r\n        return Logger.instance.clearSubscribers();\r\n    };\r\n    Object.defineProperty(Logger, \"count\", {\r\n        /**\r\n         * Gets the current subscriber count\r\n         */\r\n        get: function () {\r\n            return Logger.instance.count;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param message The message to write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        Logger.instance.log({ level: level, message: message });\r\n    };\r\n    /**\r\n     * Writes the supplied string to the subscribed listeners\r\n     *\r\n     * @param json The json object to stringify and write\r\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Info)\r\n     */\r\n    Logger.writeJSON = function (json, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.write(JSON.stringify(json), level);\r\n    };\r\n    /**\r\n     * Logs the supplied entry to the subscribed listeners\r\n     *\r\n     * @param entry The message to log\r\n     */\r\n    Logger.log = function (entry) {\r\n        Logger.instance.log(entry);\r\n    };\r\n    /**\r\n     * Logs an error object to the subscribed listeners\r\n     *\r\n     * @param err The error object\r\n     */\r\n    Logger.error = function (err) {\r\n        Logger.instance.log({ data: err, level: 3 /* Error */, message: err.message });\r\n    };\r\n    return Logger;\r\n}());\r\nvar LoggerImpl = /** @class */ (function () {\r\n    function LoggerImpl(activeLogLevel, subscribers) {\r\n        if (activeLogLevel === void 0) { activeLogLevel = 2 /* Warning */; }\r\n        if (subscribers === void 0) { subscribers = []; }\r\n        this.activeLogLevel = activeLogLevel;\r\n        this.subscribers = subscribers;\r\n    }\r\n    LoggerImpl.prototype.subscribe = function (listener) {\r\n        this.subscribers.push(listener);\r\n    };\r\n    LoggerImpl.prototype.clearSubscribers = function () {\r\n        var s = this.subscribers.slice(0);\r\n        this.subscribers.length = 0;\r\n        return s;\r\n    };\r\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\r\n        get: function () {\r\n            return this.subscribers.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.write = function (message, level) {\r\n        if (level === void 0) { level = 1 /* Info */; }\r\n        this.log({ level: level, message: message });\r\n    };\r\n    LoggerImpl.prototype.log = function (entry) {\r\n        if (entry !== undefined && this.activeLogLevel <= entry.level) {\r\n            this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\n\n/**\r\n * A set of logging levels\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\r\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\r\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\r\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\r\n})(LogLevel || (LogLevel = {}));\n\n/**\r\n * Implementation of LogListener which logs to the console\r\n *\r\n */\r\nvar ConsoleListener = /** @class */ (function () {\r\n    function ConsoleListener() {\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    ConsoleListener.prototype.log = function (entry) {\r\n        var msg = this.format(entry);\r\n        switch (entry.level) {\r\n            case 0 /* Verbose */:\r\n            case 1 /* Info */:\r\n                console.log(msg);\r\n                break;\r\n            case 2 /* Warning */:\r\n                console.warn(msg);\r\n                break;\r\n            case 3 /* Error */:\r\n                console.error(msg);\r\n                break;\r\n        }\r\n    };\r\n    /**\r\n     * Formats the message\r\n     *\r\n     * @param entry The information to format into a string\r\n     */\r\n    ConsoleListener.prototype.format = function (entry) {\r\n        var msg = [];\r\n        msg.push(\"Message: \" + entry.message);\r\n        if (entry.data !== undefined) {\r\n            msg.push(\" Data: \" + JSON.stringify(entry.data));\r\n        }\r\n        return msg.join(\"\");\r\n    };\r\n    return ConsoleListener;\r\n}());\r\n/**\r\n * Implementation of LogListener which logs to the supplied function\r\n *\r\n */\r\nvar FunctionListener = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the FunctionListener class\r\n     *\r\n     * @constructor\r\n     * @param  method The method to which any logging data will be passed\r\n     */\r\n    function FunctionListener(method) {\r\n        this.method = method;\r\n    }\r\n    /**\r\n     * Any associated data that a given logging listener may choose to log or ignore\r\n     *\r\n     * @param entry The information to be logged\r\n     */\r\n    FunctionListener.prototype.log = function (entry) {\r\n        this.method(entry);\r\n    };\r\n    return FunctionListener;\r\n}());\n\nexport { Logger, LogLevel, ConsoleListener, FunctionListener };\n//# sourceMappingURL=logging.es5.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var strShimFunction = \"function\";\r\nexport var strShimObject = \"object\";\r\nexport var strShimUndefined = \"undefined\";\r\nexport var strShimPrototype = \"prototype\";\r\nexport var strShimHasOwnProperty = \"hasOwnProperty\";\r\n/**\r\n * Returns the current global scope object, for a normal web page this will be the current\r\n * window, for a Web Worker this will be current worker global scope via \"self\". The internal\r\n * implementation returns the first available instance object in the following order\r\n * - globalThis (New standard)\r\n * - self (Will return the current window instance for supported browsers)\r\n * - window (fallback for older browser implementations)\r\n * - global (NodeJS standard)\r\n * - <null> (When all else fails)\r\n * While the return type is a Window for the normal case, not all environments will support all\r\n * of the properties or functions.\r\n */\r\nexport function getGlobal() {\r\n    if (typeof globalThis !== strShimUndefined && globalThis) {\r\n        return globalThis;\r\n    }\r\n    if (typeof self !== strShimUndefined && self) {\r\n        return self;\r\n    }\r\n    if (typeof window !== strShimUndefined && window) {\r\n        return window;\r\n    }\r\n    if (typeof global !== strShimUndefined && global) {\r\n        return global;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Creates an object that has the specified prototype, and that optionally contains specified properties. This helper exists to avoid adding a polyfil\r\n * for older browsers that do not define Object.create eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation.\r\n * Note: For consistency this will not use the Object.create implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n * @param obj Object to use as a prototype. May be null\r\n */\r\nexport function objCreateFn(obj) {\r\n    var func = Object[\"create\"];\r\n    // Use build in Object.create\r\n    if (func) {\r\n        // Use Object create method if it exists\r\n        return func(obj);\r\n    }\r\n    if (obj == null) {\r\n        return {};\r\n    }\r\n    var type = typeof obj;\r\n    if (type !== strShimObject && type !== strShimFunction) {\r\n        throw new TypeError('Object prototype may only be an Object:' + obj);\r\n    }\r\n    function tmpFunc() { }\r\n    tmpFunc[strShimPrototype] = obj;\r\n    return new tmpFunc();\r\n}\r\nexport function __assignFn(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) {\r\n            if (Object[strShimPrototype][strShimHasOwnProperty].call(s, p)) {\r\n                t[p] = s[p];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n}\r\n// tslint:disable-next-line: only-arrow-functions\r\nvar __extendStaticsFn = function (d, b) {\r\n    __extendStaticsFn = Object[\"setPrototypeOf\"] ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        function (d, b) {\r\n            for (var p in b) {\r\n                if (b[strShimHasOwnProperty](p)) {\r\n                    d[p] = b[p];\r\n                }\r\n            }\r\n        };\r\n    return __extendStaticsFn(d, b);\r\n};\r\nexport function __extendsFn(d, b) {\r\n    __extendStaticsFn(d, b);\r\n    function __() { this.constructor = d; }\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    d[strShimPrototype] = b === null ? objCreateFn(b) : (__[strShimPrototype] = b[strShimPrototype], new __());\r\n}\r\nvar globalObj = getGlobal() || {};\r\n// tslint:disable: only-arrow-functions\r\n(function (root, assignFn, extendsFn) {\r\n    // Assign the globally scoped versions of the functions -- used when consuming individual ts files\r\n    // If check is to support NativeScript where these are marked as readonly\r\n    if (!root.__assign) {\r\n        root.__assign = Object.assign || assignFn;\r\n    }\r\n    if (!root.__extends) {\r\n        root.__extends = extendsFn;\r\n    }\r\n})(globalObj, __assignFn, __extendsFn);\r\n// Assign local variables that will be used for embedded scenarios, if check is to support NativeScript where these are marked as readonly\r\nif (!__assign) {\r\n    __assign = globalObj.__assign;\r\n}\r\nif (!__extends) {\r\n    __extends = globalObj.__extends;\r\n}\r\n//# sourceMappingURL=applicationinsights-shims.js.map","/**\n * @license\n * v1.2.6\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https://github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\nimport { RuntimeConfig, dateAdd, PnPClientStorage, isFunc, hOP, extend, combine, mergeOptions, objectDefinedNotNull, getGUID } from '@pnp/common';\nimport { Logger } from '@pnp/logging';\n\nvar CachingOptions = /** @class */ (function () {\r\n    function CachingOptions(key) {\r\n        this.key = key;\r\n        this.expiration = dateAdd(new Date(), \"second\", RuntimeConfig.defaultCachingTimeoutSeconds);\r\n        this.storeName = RuntimeConfig.defaultCachingStore;\r\n    }\r\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\r\n        get: function () {\r\n            if (this.storeName === \"local\") {\r\n                return CachingOptions.storage.local;\r\n            }\r\n            else {\r\n                return CachingOptions.storage.session;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CachingOptions.storage = new PnPClientStorage();\r\n    return CachingOptions;\r\n}());\r\nvar CachingParserWrapper = /** @class */ (function () {\r\n    function CachingParserWrapper(parser, cacheOptions) {\r\n        this.parser = parser;\r\n        this.cacheOptions = cacheOptions;\r\n    }\r\n    CachingParserWrapper.prototype.parse = function (response) {\r\n        var _this = this;\r\n        return this.parser.parse(response).then(function (r) { return _this.cacheData(r); });\r\n    };\r\n    CachingParserWrapper.prototype.cacheData = function (data) {\r\n        if (this.cacheOptions.store !== null) {\r\n            this.cacheOptions.store.put(this.cacheOptions.key, data, this.cacheOptions.expiration);\r\n        }\r\n        return data;\r\n    };\r\n    return CachingParserWrapper;\r\n}());\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\n\nvar HttpRequestError = /** @class */ (function (_super) {\r\n    __extends(HttpRequestError, _super);\r\n    function HttpRequestError(message, response, status, statusText) {\r\n        if (status === void 0) { status = response.status; }\r\n        if (statusText === void 0) { statusText = response.statusText; }\r\n        var _this = _super.call(this, message) || this;\r\n        _this.response = response;\r\n        _this.status = status;\r\n        _this.statusText = statusText;\r\n        _this.isHttpRequestError = true;\r\n        return _this;\r\n    }\r\n    HttpRequestError.init = function (r) {\r\n        return r.clone().text().then(function (t) {\r\n            return new HttpRequestError(\"Error making HttpClient request in queryable [\" + r.status + \"] \" + r.statusText + \" ::> \" + t, r.clone());\r\n        });\r\n    };\r\n    return HttpRequestError;\r\n}(Error));\r\nvar ODataParserBase = /** @class */ (function () {\r\n    function ODataParserBase() {\r\n    }\r\n    ODataParserBase.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                _this.parseImpl(r, resolve, reject);\r\n            }\r\n        });\r\n    };\r\n    ODataParserBase.prototype.parseImpl = function (r, resolve, reject) {\r\n        var _this = this;\r\n        if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\r\n            resolve({});\r\n        }\r\n        else {\r\n            // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\r\n            r.text()\r\n                .then(function (txt) { return txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {}; })\r\n                .then(function (json) { return resolve(_this.parseODataJSON(json)); })\r\n                .catch(function (e) { return reject(e); });\r\n        }\r\n    };\r\n    /**\r\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\r\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\r\n     *\r\n     * @param r Current response object\r\n     * @param reject reject delegate for the surrounding promise\r\n     */\r\n    ODataParserBase.prototype.handleError = function (r, reject) {\r\n        if (!r.ok) {\r\n            HttpRequestError.init(r).then(reject);\r\n        }\r\n        return r.ok;\r\n    };\r\n    /**\r\n     * Normalizes the json response by removing the various nested levels\r\n     *\r\n     * @param json json object to parse\r\n     */\r\n    ODataParserBase.prototype.parseODataJSON = function (json) {\r\n        var result = json;\r\n        if (hOP(json, \"d\")) {\r\n            if (hOP(json.d, \"results\")) {\r\n                result = json.d.results;\r\n            }\r\n            else {\r\n                result = json.d;\r\n            }\r\n        }\r\n        else if (hOP(json, \"value\")) {\r\n            result = json.value;\r\n        }\r\n        return result;\r\n    };\r\n    return ODataParserBase;\r\n}());\r\nvar ODataDefaultParser = /** @class */ (function (_super) {\r\n    __extends(ODataDefaultParser, _super);\r\n    function ODataDefaultParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ODataDefaultParser;\r\n}(ODataParserBase));\r\nvar TextParser = /** @class */ (function (_super) {\r\n    __extends(TextParser, _super);\r\n    function TextParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TextParser.prototype.parseImpl = function (r, resolve) {\r\n        r.text().then(resolve);\r\n    };\r\n    return TextParser;\r\n}(ODataParserBase));\r\nvar BlobParser = /** @class */ (function (_super) {\r\n    __extends(BlobParser, _super);\r\n    function BlobParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BlobParser.prototype.parseImpl = function (r, resolve) {\r\n        r.blob().then(resolve);\r\n    };\r\n    return BlobParser;\r\n}(ODataParserBase));\r\nvar JSONParser = /** @class */ (function (_super) {\r\n    __extends(JSONParser, _super);\r\n    function JSONParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    JSONParser.prototype.parseImpl = function (r, resolve) {\r\n        r.json().then(resolve);\r\n    };\r\n    return JSONParser;\r\n}(ODataParserBase));\r\nvar BufferParser = /** @class */ (function (_super) {\r\n    __extends(BufferParser, _super);\r\n    function BufferParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    BufferParser.prototype.parseImpl = function (r, resolve) {\r\n        if (isFunc(r.arrayBuffer)) {\r\n            r.arrayBuffer().then(resolve);\r\n        }\r\n        else {\r\n            r.buffer().then(resolve);\r\n        }\r\n    };\r\n    return BufferParser;\r\n}(ODataParserBase));\r\nvar LambdaParser = /** @class */ (function (_super) {\r\n    __extends(LambdaParser, _super);\r\n    function LambdaParser(parser) {\r\n        var _this = _super.call(this) || this;\r\n        _this.parser = parser;\r\n        return _this;\r\n    }\r\n    LambdaParser.prototype.parseImpl = function (r, resolve) {\r\n        this.parser(r).then(resolve);\r\n    };\r\n    return LambdaParser;\r\n}(ODataParserBase));\n\n/**\r\n * Resolves the context's result value\r\n *\r\n * @param context The current context\r\n */\r\nfunction returnResult(context) {\r\n    Logger.log({\r\n        data: Logger.activeLogLevel === 0 /* Verbose */ ? context.result : {},\r\n        level: 1 /* Info */,\r\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result from pipeline. Set logging to verbose to see data.\",\r\n    });\r\n    return Promise.resolve(context.result);\r\n}\r\n/**\r\n * Sets the result on the context\r\n */\r\nfunction setResult(context, value) {\r\n    return new Promise(function (resolve) {\r\n        context.result = value;\r\n        context.hasResult = true;\r\n        resolve(context);\r\n    });\r\n}\r\n/**\r\n * Invokes the next method in the provided context's pipeline\r\n *\r\n * @param c The current request context\r\n */\r\nfunction next(c) {\r\n    if (c.pipeline.length > 0) {\r\n        return c.pipeline.shift()(c);\r\n    }\r\n    else {\r\n        return Promise.resolve(c);\r\n    }\r\n}\r\n/**\r\n * Executes the current request context's pipeline\r\n *\r\n * @param context Current context\r\n */\r\nfunction pipe(context) {\r\n    if (context.pipeline.length < 1) {\r\n        Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Request pipeline contains no methods!\", 2 /* Warning */);\r\n    }\r\n    var promise = next(context).then(function (ctx) { return returnResult(ctx); }).catch(function (e) {\r\n        Logger.error(e);\r\n        throw e;\r\n    });\r\n    if (context.isBatched) {\r\n        // this will block the batch's execute method from returning until the child requets have been resolved\r\n        context.batch.addResolveBatchDependency(promise);\r\n    }\r\n    return promise;\r\n}\r\n/**\r\n * decorator factory applied to methods in the pipeline to control behavior\r\n */\r\nfunction requestPipelineMethod(alwaysRun) {\r\n    if (alwaysRun === void 0) { alwaysRun = false; }\r\n    return function (target, propertyKey, descriptor) {\r\n        var method = descriptor.value;\r\n        descriptor.value = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\r\n            if (!alwaysRun && args.length > 0 && hOP(args[0], \"hasResult\") && args[0].hasResult) {\r\n                Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", 0 /* Verbose */);\r\n                return Promise.resolve(args[0]);\r\n            }\r\n            // apply the tagged method\r\n            Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", 0 /* Verbose */);\r\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\r\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\r\n        };\r\n    };\r\n}\r\n/**\r\n * Contains the methods used within the request pipeline\r\n */\r\nvar PipelineMethods = /** @class */ (function () {\r\n    function PipelineMethods() {\r\n    }\r\n    /**\r\n     * Logs the start of the request\r\n     */\r\n    PipelineMethods.logStart = function (context) {\r\n        return new Promise(function (resolve) {\r\n            Logger.log({\r\n                data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                level: 1 /* Info */,\r\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\r\n            });\r\n            resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Handles caching of the request\r\n     */\r\n    PipelineMethods.caching = function (context) {\r\n        return new Promise(function (resolve) {\r\n            // handle caching, if applicable\r\n            if (context.isCached) {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", 1 /* Info */);\r\n                var cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\r\n                if (context.cachingOptions !== undefined) {\r\n                    cacheOptions = extend(cacheOptions, context.cachingOptions);\r\n                }\r\n                // we may not have a valid store\r\n                if (cacheOptions.store !== null) {\r\n                    // check if we have the data in cache and if so resolve the promise and return\r\n                    var data = cacheOptions.store.get(cacheOptions.key);\r\n                    if (data !== null) {\r\n                        // ensure we clear any held batch dependency we are resolving from the cache\r\n                        Logger.log({\r\n                            data: Logger.activeLogLevel === 1 /* Info */ ? {} : data,\r\n                            level: 1 /* Info */,\r\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\r\n                        });\r\n                        if (isFunc(context.batchDependency)) {\r\n                            context.batchDependency();\r\n                        }\r\n                        // handle the case where a parser needs to take special actions with a cached result\r\n                        if (hOP(context.parser, \"hydrate\")) {\r\n                            data = context.parser.hydrate(data);\r\n                        }\r\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\r\n                    }\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", 1 /* Info */);\r\n                // if we don't then wrap the supplied parser in the caching parser wrapper\r\n                // and send things on their way\r\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\r\n            }\r\n            return resolve(context);\r\n        });\r\n    };\r\n    /**\r\n     * Sends the request\r\n     */\r\n    PipelineMethods.send = function (context) {\r\n        return new Promise(function (resolve, reject) {\r\n            // send or batch the request\r\n            if (context.isBatched) {\r\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\r\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser, context.requestId);\r\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\r\n                if (isFunc(context.batchDependency)) {\r\n                    context.batchDependency();\r\n                }\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", 1 /* Info */);\r\n                // we set the result as the promise which will be resolved by the batch's execution\r\n                resolve(setResult(context, p));\r\n            }\r\n            else {\r\n                Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", 1 /* Info */);\r\n                // we are not part of a batch, so proceed as normal\r\n                var client = context.clientFactory();\r\n                var opts = extend(context.options || {}, { method: context.verb });\r\n                client.fetch(context.requestAbsoluteUrl, opts)\r\n                    .then(function (response) { return context.parser.parse(response); })\r\n                    .then(function (result) { return setResult(context, result); })\r\n                    .then(function (ctx) { return resolve(ctx); })\r\n                    .catch(function (e) { return reject(e); });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Logs the end of the request\r\n     */\r\n    PipelineMethods.logEnd = function (context) {\r\n        return new Promise(function (resolve) {\r\n            if (context.isBatched) {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\r\n                });\r\n            }\r\n            else {\r\n                Logger.log({\r\n                    data: Logger.activeLogLevel === 1 /* Info */ ? {} : context,\r\n                    level: 1 /* Info */,\r\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\r\n                });\r\n            }\r\n            resolve(context);\r\n        });\r\n    };\r\n    __decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logStart\", null);\r\n    __decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"caching\", null);\r\n    __decorate([\r\n        requestPipelineMethod()\r\n    ], PipelineMethods, \"send\", null);\r\n    __decorate([\r\n        requestPipelineMethod(true)\r\n    ], PipelineMethods, \"logEnd\", null);\r\n    return PipelineMethods;\r\n}());\r\nfunction getDefaultPipeline() {\r\n    return [\r\n        PipelineMethods.logStart,\r\n        PipelineMethods.caching,\r\n        PipelineMethods.send,\r\n        PipelineMethods.logEnd,\r\n    ].slice(0);\r\n}\n\nvar Queryable = /** @class */ (function () {\r\n    function Queryable() {\r\n        this._query = new Map();\r\n        this._options = {};\r\n        this._url = \"\";\r\n        this._parentUrl = \"\";\r\n        this._useCaching = false;\r\n        this._cachingOptions = null;\r\n        this._cloneParentWasCaching = false;\r\n        this._cloneParentCacheOptions = null;\r\n    }\r\n    /**\r\n    * Gets the currentl url\r\n    *\r\n    */\r\n    Queryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\r\n     *\r\n     * @param pathPart The string to concatonate to the url\r\n     */\r\n    Queryable.prototype.concat = function (pathPart) {\r\n        this._url += pathPart;\r\n        return this;\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"query\", {\r\n        /**\r\n         * Provides access to the query builder for this url\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._query;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets custom options for current object and all derived objects accessible via chaining\r\n     *\r\n     * @param options custom options\r\n     */\r\n    Queryable.prototype.configure = function (options) {\r\n        mergeOptions(this._options, options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Configures this instance from the configure options of the supplied instance\r\n     *\r\n     * @param o Instance from which options should be taken\r\n     */\r\n    Queryable.prototype.configureFrom = function (o) {\r\n        mergeOptions(this._options, o._options);\r\n        return this;\r\n    };\r\n    /**\r\n     * Enables caching for this request\r\n     *\r\n     * @param options Defines the options used when caching this request\r\n     */\r\n    Queryable.prototype.usingCaching = function (options) {\r\n        if (!RuntimeConfig.globalCacheDisable) {\r\n            this._useCaching = true;\r\n            if (options !== undefined) {\r\n                this._cachingOptions = options;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Queryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        // Fix for #304 - when we clone objects we in some cases then execute a get request\r\n        // in these cases the caching settings were getting dropped from the request\r\n        // this tracks if the object from which this was clones was caching and applies that to an immediate get request\r\n        // does not affect objects cloned from this as we are using different fields to track the settings so it won't\r\n        // be triggered\r\n        if (this._cloneParentWasCaching) {\r\n            this.usingCaching(this._cloneParentCacheOptions);\r\n        }\r\n        return this.toRequestContext(\"GET\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"POST\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PATCH\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"DELETE\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    Queryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new JSONParser(); }\r\n        return this.toRequestContext(\"PUT\", options, parser, getDefaultPipeline()).then(function (context) { return pipe(context); });\r\n    };\r\n    /**\r\n     * Appends the given string and normalizes \"/\" chars\r\n     *\r\n     * @param pathPart The string to append\r\n     */\r\n    Queryable.prototype.append = function (pathPart) {\r\n        this._url = combine(this._url, pathPart);\r\n    };\r\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\r\n        /**\r\n         * Gets the parent url used when creating this instance\r\n         *\r\n         */\r\n        get: function () {\r\n            return this._parentUrl;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Extends this queryable from the provided parent\r\n     *\r\n     * @param parent Parent queryable from which we will derive a base url\r\n     * @param path Additional path\r\n     */\r\n    Queryable.prototype.extend = function (parent, path) {\r\n        this._parentUrl = parent._url;\r\n        this._url = combine(this._parentUrl, path || \"\");\r\n        this.configureFrom(parent);\r\n    };\r\n    /**\r\n     * Configures a cloned object from this instance\r\n     *\r\n     * @param clone\r\n     */\r\n    Queryable.prototype._clone = function (clone, _0) {\r\n        clone.configureFrom(this);\r\n        if (this._useCaching) {\r\n            clone._cloneParentWasCaching = true;\r\n            clone._cloneParentCacheOptions = this._cachingOptions;\r\n        }\r\n        return clone;\r\n    };\r\n    return Queryable;\r\n}());\r\nvar ODataQueryable = /** @class */ (function (_super) {\r\n    __extends(ODataQueryable, _super);\r\n    function ODataQueryable() {\r\n        var _this = _super.call(this) || this;\r\n        _this._batch = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ODataQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw Error(\"This query is already part of a batch.\");\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the currentl url\r\n     *\r\n     */\r\n    ODataQueryable.prototype.toUrl = function () {\r\n        return this._url;\r\n    };\r\n    /**\r\n     * Executes the currently built request\r\n     *\r\n     * @param parser Allows you to specify a parser to handle the result\r\n     * @param getOptions The options used for this request\r\n     */\r\n    ODataQueryable.prototype.get = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return this.getCore(parser, options);\r\n    };\r\n    ODataQueryable.prototype.getCore = function (parser, options) {\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        if (options === void 0) { options = {}; }\r\n        return _super.prototype.getCore.call(this, parser, options);\r\n    };\r\n    ODataQueryable.prototype.postCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.postCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.patchCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.patchCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.deleteCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.deleteCore.call(this, options, parser);\r\n    };\r\n    ODataQueryable.prototype.putCore = function (options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = new ODataDefaultParser(); }\r\n        return _super.prototype.putCore.call(this, options, parser);\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ODataQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ODataQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Configures a cloned object from this instance\r\n     *\r\n     * @param clone\r\n     */\r\n    ODataQueryable.prototype._clone = function (clone, cloneSettings) {\r\n        clone = _super.prototype._clone.call(this, clone, cloneSettings);\r\n        if (cloneSettings.includeBatch) {\r\n            clone = clone.inBatch(this._batch);\r\n        }\r\n        return clone;\r\n    };\r\n    return ODataQueryable;\r\n}(Queryable));\n\nvar ODataBatch = /** @class */ (function () {\r\n    function ODataBatch(_batchId) {\r\n        if (_batchId === void 0) { _batchId = getGUID(); }\r\n        this._batchId = _batchId;\r\n        this._reqs = [];\r\n        this._deps = [];\r\n        this._rDeps = [];\r\n    }\r\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\r\n        get: function () {\r\n            return this._batchId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ODataBatch.prototype, \"requests\", {\r\n        /**\r\n         * The requests contained in this batch\r\n         */\r\n        get: function () {\r\n            return this._reqs;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param url Request url\r\n     * @param method Request method (GET, POST, etc)\r\n     * @param options Any request options\r\n     * @param parser The parser used to handle the eventual return from the query\r\n     * @param id An identifier used to track a request within a batch\r\n     */\r\n    ODataBatch.prototype.add = function (url, method, options, parser, id) {\r\n        var info = {\r\n            id: id,\r\n            method: method.toUpperCase(),\r\n            options: options,\r\n            parser: parser,\r\n            reject: null,\r\n            resolve: null,\r\n            url: url,\r\n        };\r\n        var p = new Promise(function (resolve, reject) {\r\n            info.resolve = resolve;\r\n            info.reject = reject;\r\n        });\r\n        this._reqs.push(info);\r\n        return p;\r\n    };\r\n    /**\r\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\r\n     * MUST be cleared using the returned resolve delegate to allow batches to run\r\n     */\r\n    ODataBatch.prototype.addDependency = function () {\r\n        var resolver = function () { return void (0); };\r\n        this._deps.push(new Promise(function (resolve) {\r\n            resolver = resolve;\r\n        }));\r\n        return resolver;\r\n    };\r\n    /**\r\n     * The batch's execute method will not resolve util any promises added here resolve\r\n     *\r\n     * @param p The dependent promise\r\n     */\r\n    ODataBatch.prototype.addResolveBatchDependency = function (p) {\r\n        this._rDeps.push(p);\r\n    };\r\n    /**\r\n     * Execute the current batch and resolve the associated promises\r\n     *\r\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\r\n     */\r\n    ODataBatch.prototype.execute = function () {\r\n        var _this = this;\r\n        // we need to check the dependencies twice due to how different engines handle things.\r\n        // We can get a second set of promises added during the first set resolving\r\n        return Promise.all(this._deps)\r\n            .then(function () { return Promise.all(_this._deps); })\r\n            .then(function () { return _this.executeImpl(); })\r\n            .then(function () { return Promise.all(_this._rDeps); })\r\n            .then(function () { return void (0); });\r\n    };\r\n    return ODataBatch;\r\n}());\n\nexport { CachingOptions, CachingParserWrapper, HttpRequestError, ODataParserBase, ODataDefaultParser, TextParser, BlobParser, JSONParser, BufferParser, LambdaParser, setResult, pipe, requestPipelineMethod, PipelineMethods, getDefaultPipeline, Queryable, ODataQueryable, ODataBatch };\n//# sourceMappingURL=odata.es5.js.map\n","/**\n * @license\n * v1.2.6\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https://github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\nimport { stringIsNullOrEmpty, extend, combine, hOP, RuntimeConfig, FetchClient, mergeHeaders, getCtxCallback, isUrlAbsolute, mergeOptions, getGUID, jsS, getAttrValueFromString, dateAdd, getHashCode, objectDefinedNotNull, isArray } from '@pnp/common';\nimport { Logger } from '@pnp/logging';\nimport { ODataParserBase, ODataDefaultParser, ODataQueryable, TextParser, BlobParser, JSONParser, BufferParser, ODataBatch, CachingOptions } from '@pnp/odata';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\n\nfunction extractWebUrl(candidateUrl) {\r\n    if (stringIsNullOrEmpty(candidateUrl)) {\r\n        return \"\";\r\n    }\r\n    var index = candidateUrl.indexOf(\"_api/\");\r\n    if (index < 0) {\r\n        index = candidateUrl.indexOf(\"_vti_bin/\");\r\n    }\r\n    if (index > -1) {\r\n        return candidateUrl.substr(0, index);\r\n    }\r\n    // if all else fails just give them what they gave us back\r\n    return candidateUrl;\r\n}\n\nfunction odataUrlFrom(candidate) {\r\n    var parts = [];\r\n    var s = [\"odata.type\", \"odata.editLink\", \"__metadata\", \"odata.metadata\"];\r\n    if (hOP(candidate, s[0]) && candidate[s[0]] === \"SP.Web\") {\r\n        // webs return an absolute url in the editLink\r\n        if (hOP(candidate, s[1])) {\r\n            parts.push(candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    else {\r\n        if (hOP(candidate, s[3]) && hOP(candidate, s[1])) {\r\n            // we are dealign with minimal metadata (default)\r\n            parts.push(extractWebUrl(candidate[s[3]]), \"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[1])) {\r\n            parts.push(\"_api\", candidate[s[1]]);\r\n        }\r\n        else if (hOP(candidate, s[2])) {\r\n            // we are dealing with verbose, which has an absolute uri\r\n            parts.push(candidate.__metadata.uri);\r\n        }\r\n    }\r\n    if (parts.length < 1) {\r\n        Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", 2 /* Warning */);\r\n        return \"\";\r\n    }\r\n    return combine.apply(void 0, parts);\r\n}\r\nvar SPODataEntityParserImpl = /** @class */ (function (_super) {\r\n    __extends(SPODataEntityParserImpl, _super);\r\n    function SPODataEntityParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            var o = new _this.factory(odataUrlFrom(d), null);\r\n            return extend(o, d);\r\n        });\r\n    };\r\n    return SPODataEntityParserImpl;\r\n}(ODataParserBase));\r\nvar SPODataEntityArrayParserImpl = /** @class */ (function (_super) {\r\n    __extends(SPODataEntityArrayParserImpl, _super);\r\n    function SPODataEntityArrayParserImpl(factory) {\r\n        var _this = _super.call(this) || this;\r\n        _this.factory = factory;\r\n        _this.hydrate = function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        };\r\n        return _this;\r\n    }\r\n    SPODataEntityArrayParserImpl.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return _super.prototype.parse.call(this, r).then(function (d) {\r\n            return d.map(function (v) {\r\n                var o = new _this.factory(odataUrlFrom(v), null);\r\n                return extend(o, v);\r\n            });\r\n        });\r\n    };\r\n    return SPODataEntityArrayParserImpl;\r\n}(ODataParserBase));\r\nfunction spODataEntity(factory) {\r\n    return new SPODataEntityParserImpl(factory);\r\n}\r\nfunction spODataEntityArray(factory) {\r\n    return new SPODataEntityArrayParserImpl(factory);\r\n}\n\nfunction setup(config) {\r\n    RuntimeConfig.extend(config);\r\n}\r\nvar SPRuntimeConfigImpl = /** @class */ (function () {\r\n    function SPRuntimeConfigImpl() {\r\n    }\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"headers\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.headers !== undefined) {\r\n                return spPart.headers;\r\n            }\r\n            return {};\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"baseUrl\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.baseUrl !== undefined) {\r\n                return spPart.baseUrl;\r\n            }\r\n            if (RuntimeConfig.spfxContext !== undefined && RuntimeConfig.spfxContext !== null) {\r\n                return RuntimeConfig.spfxContext.pageContext.web.absoluteUrl;\r\n            }\r\n            return null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRuntimeConfigImpl.prototype, \"fetchClientFactory\", {\r\n        get: function () {\r\n            var spPart = RuntimeConfig.get(\"sp\");\r\n            if (spPart !== undefined && spPart.fetchClientFactory !== undefined) {\r\n                return spPart.fetchClientFactory;\r\n            }\r\n            else {\r\n                return function () { return new FetchClient(); };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SPRuntimeConfigImpl;\r\n}());\r\nvar SPRuntimeConfig = new SPRuntimeConfigImpl();\n\nvar CachedDigest = /** @class */ (function () {\r\n    function CachedDigest() {\r\n    }\r\n    return CachedDigest;\r\n}());\r\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\r\nvar digests = new Map();\r\nvar DigestCache = /** @class */ (function () {\r\n    function DigestCache(_httpClient, _digests) {\r\n        if (_digests === void 0) { _digests = digests; }\r\n        this._httpClient = _httpClient;\r\n        this._digests = _digests;\r\n    }\r\n    DigestCache.prototype.getDigest = function (webUrl) {\r\n        var _this = this;\r\n        var cachedDigest = this._digests.get(webUrl);\r\n        if (cachedDigest !== undefined) {\r\n            var now = new Date();\r\n            if (now < cachedDigest.expiration) {\r\n                return Promise.resolve(cachedDigest.value);\r\n            }\r\n        }\r\n        var url = combine(webUrl, \"/_api/contextinfo\");\r\n        var headers = {\r\n            \"Accept\": \"application/json;odata=verbose\",\r\n            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n        };\r\n        return this._httpClient.fetchRaw(url, {\r\n            cache: \"no-cache\",\r\n            credentials: \"same-origin\",\r\n            headers: extend(headers, SPRuntimeConfig.headers, true),\r\n            method: \"POST\",\r\n        }).then(function (response) {\r\n            var parser = new ODataDefaultParser();\r\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\r\n        }).then(function (data) {\r\n            var newCachedDigest = new CachedDigest();\r\n            newCachedDigest.value = data.FormDigestValue;\r\n            var seconds = data.FormDigestTimeoutSeconds;\r\n            var expiration = new Date();\r\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\r\n            newCachedDigest.expiration = expiration;\r\n            _this._digests.set(webUrl, newCachedDigest);\r\n            return newCachedDigest.value;\r\n        });\r\n    };\r\n    DigestCache.prototype.clear = function () {\r\n        this._digests.clear();\r\n    };\r\n    return DigestCache;\r\n}());\n\nvar SPHttpClient = /** @class */ (function () {\r\n    function SPHttpClient(_impl) {\r\n        if (_impl === void 0) { _impl = SPRuntimeConfig.fetchClientFactory(); }\r\n        this._impl = _impl;\r\n        this._digestCache = new DigestCache(this);\r\n    }\r\n    SPHttpClient.prototype.fetch = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\r\n        var headers = new Headers();\r\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\r\n        mergeHeaders(headers, SPRuntimeConfig.headers);\r\n        // second we add the local options so we can overwrite the globals\r\n        mergeHeaders(headers, options.headers);\r\n        // lastly we apply any default headers we need that may not exist\r\n        if (!headers.has(\"Accept\")) {\r\n            headers.append(\"Accept\", \"application/json\");\r\n        }\r\n        if (!headers.has(\"Content-Type\")) {\r\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n        }\r\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.2.6\");\r\n        }\r\n        if (!headers.has(\"User-Agent\")) {\r\n            // this marks the requests for understanding by the service\r\n            headers.append(\"User-Agent\", \"NONISV|SharePointPnP|PnPCoreJS/1.2.6\");\r\n        }\r\n        opts = extend(opts, { headers: headers });\r\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\r\n            // if we have either a request digest or an authorization header we don't need a digest\r\n            if (!headers.has(\"X-RequestDigest\") && !headers.has(\"Authorization\")) {\r\n                return this._digestCache.getDigest(extractWebUrl(url))\r\n                    .then(function (digest) {\r\n                    headers.append(\"X-RequestDigest\", digest);\r\n                    return _this.fetchRaw(url, opts);\r\n                });\r\n            }\r\n        }\r\n        return this.fetchRaw(url, opts);\r\n    };\r\n    SPHttpClient.prototype.fetchRaw = function (url, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        // here we need to normalize the headers\r\n        var rawHeaders = new Headers();\r\n        mergeHeaders(rawHeaders, options.headers);\r\n        options = extend(options, { headers: rawHeaders });\r\n        var retry = function (ctx) {\r\n            // handles setting the proper timeout for a retry\r\n            var setRetry = function (response) {\r\n                var delay;\r\n                if (response.headers.has(\"Retry-After\")) {\r\n                    // if we have gotten a header, use that value as the delay value\r\n                    delay = parseInt(response.headers.get(\"Retry-After\"), 10);\r\n                }\r\n                else {\r\n                    // grab our current delay\r\n                    delay = ctx.delay;\r\n                    // Increment our counters.\r\n                    ctx.delay *= 2;\r\n                }\r\n                ctx.attempts++;\r\n                // If we have exceeded the retry count, reject.\r\n                if (ctx.retryCount <= ctx.attempts) {\r\n                    ctx.reject(Error(\"Retry count exceeded (\" + ctx.retryCount + \") for request. Response status: [\" + response.status + \"] \" + response.statusText));\r\n                }\r\n                else {\r\n                    // Set our retry timeout for {delay} milliseconds.\r\n                    setTimeout(getCtxCallback(_this, retry, ctx), delay);\r\n                }\r\n            };\r\n            // send the actual request\r\n            _this._impl.fetch(url, options).then(function (response) {\r\n                if (response.status === 429) {\r\n                    // we have been throttled\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.resolve(response);\r\n                }\r\n            }).catch(function (response) {\r\n                if (response.status === 503) {\r\n                    // http status code 503, we can retry this\r\n                    setRetry(response);\r\n                }\r\n                else {\r\n                    ctx.reject(response);\r\n                }\r\n            });\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            var retryContext = {\r\n                attempts: 0,\r\n                delay: 100,\r\n                reject: reject,\r\n                resolve: resolve,\r\n                retryCount: 7,\r\n            };\r\n            retry.call(_this, retryContext);\r\n        });\r\n    };\r\n    SPHttpClient.prototype.get = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"GET\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.post = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"POST\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.patch = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"PATCH\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    SPHttpClient.prototype.delete = function (url, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var opts = extend(options, { method: \"DELETE\" });\r\n        return this.fetch(url, opts);\r\n    };\r\n    return SPHttpClient;\r\n}());\n\nvar global$1 = (typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {});\n\n/**\r\n * Ensures that a given url is absolute for the current web based on context\r\n *\r\n * @param candidateUrl The url to make absolute\r\n *\r\n */\r\nfunction toAbsoluteUrl(candidateUrl) {\r\n    return new Promise(function (resolve) {\r\n        if (isUrlAbsolute(candidateUrl)) {\r\n            // if we are already absolute, then just return the url\r\n            return resolve(candidateUrl);\r\n        }\r\n        if (SPRuntimeConfig.baseUrl !== null) {\r\n            // base url specified either with baseUrl of spfxContext config property\r\n            return resolve(combine(SPRuntimeConfig.baseUrl, candidateUrl));\r\n        }\r\n        if (global$1._spPageContextInfo !== undefined) {\r\n            // operating in classic pages\r\n            if (hOP(global$1._spPageContextInfo, \"webAbsoluteUrl\")) {\r\n                return resolve(combine(global$1._spPageContextInfo.webAbsoluteUrl, candidateUrl));\r\n            }\r\n            else if (hOP(global$1._spPageContextInfo, \"webServerRelativeUrl\")) {\r\n                return resolve(combine(global$1._spPageContextInfo.webServerRelativeUrl, candidateUrl));\r\n            }\r\n        }\r\n        // does window.location exist and have a certain path part in it?\r\n        if (global$1.location !== undefined) {\r\n            var baseUrl_1 = global$1.location.toString().toLowerCase();\r\n            [\"/_layouts/\", \"/siteassets/\"].forEach(function (s) {\r\n                var index = baseUrl_1.indexOf(s);\r\n                if (index > 0) {\r\n                    return resolve(combine(baseUrl_1.substr(0, index), candidateUrl));\r\n                }\r\n            });\r\n        }\r\n        return resolve(candidateUrl);\r\n    });\r\n}\n\nfunction metadata(type) {\r\n    return {\r\n        \"__metadata\": { \"type\": type },\r\n    };\r\n}\n\n/**\r\n * SharePointQueryable Base Class\r\n *\r\n */\r\nvar SharePointQueryable = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryable, _super);\r\n    /**\r\n     * Creates a new instance of the SharePointQueryable class\r\n     *\r\n     * @constructor\r\n     * @param baseUrl A string or SharePointQueryable that should form the base part of the url\r\n     *\r\n     */\r\n    function SharePointQueryable(baseUrl, path) {\r\n        var _this = _super.call(this) || this;\r\n        _this._forceCaching = false;\r\n        if (typeof baseUrl === \"string\") {\r\n            // we need to do some extra parsing to get the parent url correct if we are\r\n            // being created from just a string.\r\n            if (isUrlAbsolute(baseUrl) || baseUrl.lastIndexOf(\"/\") < 0) {\r\n                _this._parentUrl = baseUrl;\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n            else if (baseUrl.lastIndexOf(\"/\") > baseUrl.lastIndexOf(\"(\")) {\r\n                // .../items(19)/fields\r\n                var index = baseUrl.lastIndexOf(\"/\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                path = combine(baseUrl.slice(index), path);\r\n                _this._url = combine(_this._parentUrl, path);\r\n            }\r\n            else {\r\n                // .../items(19)\r\n                var index = baseUrl.lastIndexOf(\"(\");\r\n                _this._parentUrl = baseUrl.slice(0, index);\r\n                _this._url = combine(baseUrl, path);\r\n            }\r\n        }\r\n        else {\r\n            _this.extend(baseUrl, path);\r\n            var target = baseUrl.query.get(\"@target\");\r\n            if (target !== undefined) {\r\n                _this.query.set(\"@target\", target);\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new instance of the supplied factory and extends this into that new instance\r\n     *\r\n     * @param factory constructor for the new SharePointQueryable\r\n     */\r\n    SharePointQueryable.prototype.as = function (factory) {\r\n        var o = new factory(this._url, null);\r\n        return extend(o, this, true);\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    SharePointQueryable.prototype.toUrlAndQuery = function () {\r\n        var aliasedParams = new Map(this.query);\r\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\r\n            Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, 0 /* Verbose */);\r\n            aliasedParams.set(labelName, \"'\" + value + \"'\");\r\n            return labelName;\r\n        });\r\n        if (aliasedParams.size > 0) {\r\n            var char = url.indexOf(\"?\") > -1 ? \"&\" : \"?\";\r\n            url += \"\" + char + Array.from(aliasedParams).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    SharePointQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        if (selects.length > 0) {\r\n            this.query.set(\"$select\", selects.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Expands fields such as lookups to get additional data\r\n     *\r\n     * @param expands The Fields for which to expand the values\r\n     */\r\n    SharePointQueryable.prototype.expand = function () {\r\n        var expands = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            expands[_i] = arguments[_i];\r\n        }\r\n        if (expands.length > 0) {\r\n            this.query.set(\"$expand\", expands.join(\",\"));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a parent for this instance as specified\r\n     *\r\n     * @param factory The contructor for the class to create\r\n     */\r\n    SharePointQueryable.prototype.getParent = function (factory, baseUrl, path, batch) {\r\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\r\n        var parent = new factory(baseUrl, path).configureFrom(this);\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            parent.query.set(t, this.query.get(t));\r\n        }\r\n        if (batch !== undefined) {\r\n            parent = parent.inBatch(batch);\r\n        }\r\n        return parent;\r\n    };\r\n    /**\r\n     * Clones this SharePointQueryable into a new SharePointQueryable instance of T\r\n     * @param factory Constructor used to create the new instance\r\n     * @param additionalPath Any additional path to include in the clone\r\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\r\n     */\r\n    SharePointQueryable.prototype.clone = function (factory, additionalPath, includeBatch) {\r\n        if (includeBatch === void 0) { includeBatch = true; }\r\n        var clone = _super.prototype._clone.call(this, new factory(this, additionalPath), { includeBatch: includeBatch });\r\n        // handle sp specific clone actions\r\n        var t = \"@target\";\r\n        if (this.query.has(t)) {\r\n            clone.query.set(t, this.query.get(t));\r\n        }\r\n        return clone;\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    SharePointQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            mergeOptions(options, _this._options);\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._forceCaching || (_this._useCaching && /^get$/i.test(verb)),\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    return SharePointQueryable;\r\n}(ODataQueryable));\r\n/**\r\n * Represents a REST collection which can be filtered, paged, and selected\r\n *\r\n */\r\nvar SharePointQueryableCollection = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableCollection, _super);\r\n    function SharePointQueryableCollection() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\r\n     *\r\n     * @param filter The string representing the filter query\r\n     */\r\n    SharePointQueryableCollection.prototype.filter = function (filter) {\r\n        this.query.set(\"$filter\", filter);\r\n        return this;\r\n    };\r\n    /**\r\n     * Orders based on the supplied fields\r\n     *\r\n     * @param orderby The name of the field on which to sort\r\n     * @param ascending If false DESC is appended, otherwise ASC (default)\r\n     */\r\n    SharePointQueryableCollection.prototype.orderBy = function (orderBy, ascending) {\r\n        if (ascending === void 0) { ascending = true; }\r\n        var o = \"$orderby\";\r\n        var query = this.query.has(o) ? this.query.get(o).split(\",\") : [];\r\n        query.push(orderBy + \" \" + (ascending ? \"asc\" : \"desc\"));\r\n        this.query.set(o, query.join(\",\"));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the specified number of items\r\n     *\r\n     * @param skip The number of items to skip\r\n     */\r\n    SharePointQueryableCollection.prototype.skip = function (skip) {\r\n        this.query.set(\"$skip\", skip.toString());\r\n        return this;\r\n    };\r\n    /**\r\n     * Limits the query to only return the specified number of items\r\n     *\r\n     * @param top The query row limit\r\n     */\r\n    SharePointQueryableCollection.prototype.top = function (top) {\r\n        this.query.set(\"$top\", top.toString());\r\n        return this;\r\n    };\r\n    return SharePointQueryableCollection;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents an instance that can be selected\r\n *\r\n */\r\nvar SharePointQueryableInstance = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableInstance, _super);\r\n    function SharePointQueryableInstance() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Curries the update function into the common pieces\r\n     *\r\n     * @param type\r\n     * @param mapper\r\n     */\r\n    SharePointQueryableInstance.prototype._update = function (type, mapper) {\r\n        var _this = this;\r\n        return function (props) { return _this.postCore({\r\n            body: jsS(extend(metadata(type), props)),\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (d) { return mapper(d, props); }); };\r\n    };\r\n    /**\r\n    * Deletes this instance\r\n    *\r\n    */\r\n    SharePointQueryableInstance.prototype._delete = function () {\r\n        return this.postCore({\r\n            headers: {\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this instance with an etag value in the headers\r\n     *\r\n     * @param eTag eTag to delete\r\n     */\r\n    SharePointQueryableInstance.prototype._deleteWithETag = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    return SharePointQueryableInstance;\r\n}(SharePointQueryable));\r\n/**\r\n * Decorator used to specify the default path for SharePointQueryable objects\r\n *\r\n * @param path\r\n */\r\nfunction defaultPath(path) {\r\n    return function (target) {\r\n        return /** @class */ (function (_super) {\r\n            __extends(class_1, _super);\r\n            function class_1() {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                return _super.call(this, args[0], args.length > 1 && args[1] !== undefined ? args[1] : path) || this;\r\n            }\r\n            return class_1;\r\n        }(target));\r\n    };\r\n}\n\n/**\r\n * Describes a collection of all site collection users\r\n *\r\n */\r\nvar SiteUsers = /** @class */ (function (_super) {\r\n    __extends(SiteUsers, _super);\r\n    function SiteUsers() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteUsers_1 = SiteUsers;\r\n    /**\r\n     * Gets a user from the collection by id\r\n     *\r\n     * @param id The id of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getById = function (id) {\r\n        return new SiteUser(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by email\r\n     *\r\n     * @param email The email address of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByEmail = function (email) {\r\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\r\n    };\r\n    /**\r\n     * Gets a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to retrieve\r\n     */\r\n    SiteUsers.prototype.getByLoginName = function (loginName) {\r\n        var su = new SiteUser(this);\r\n        su.concat(\"('!@v::\" + encodeURIComponent(loginName) + \"')\");\r\n        return su;\r\n    };\r\n    /**\r\n     * Removes a user from the collection by id\r\n     *\r\n     * @param id The id of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeById = function (id) {\r\n        return this.clone(SiteUsers_1, \"removeById(\" + id + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes a user from the collection by login name\r\n     *\r\n     * @param loginName The login name of the user to remove\r\n     */\r\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\r\n        var o = this.clone(SiteUsers_1, \"removeByLoginName(@v)\");\r\n        o.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return o.postCore();\r\n    };\r\n    /**\r\n     * Adds a user to a group\r\n     *\r\n     * @param loginName The login name of the user to add to the group\r\n     *\r\n     */\r\n    SiteUsers.prototype.add = function (loginName) {\r\n        var _this = this;\r\n        return this.clone(SiteUsers_1, null).postCore({\r\n            body: jsS(extend(metadata(\"SP.User\"), { LoginName: loginName })),\r\n        }).then(function () { return _this.getByLoginName(loginName); });\r\n    };\r\n    var SiteUsers_1;\r\n    SiteUsers = SiteUsers_1 = __decorate([\r\n        defaultPath(\"siteusers\")\r\n    ], SiteUsers);\r\n    return SiteUsers;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Base class for a user\r\n *\r\n */\r\nvar UserBase = /** @class */ (function (_super) {\r\n    __extends(UserBase, _super);\r\n    function UserBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(UserBase.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups for this user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return UserBase;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes a single user\r\n *\r\n */\r\nvar SiteUser = /** @class */ (function (_super) {\r\n    __extends(SiteUser, _super);\r\n    function SiteUser() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user instance with the supplied properties\r\n        *\r\n        * @param properties A plain object of property names and values to update for the user\r\n        */\r\n        _this.update = _this._update(\"SP.User\", function (data) { return ({ data: data, user: _this }); });\r\n        /**\r\n         * Delete this user\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    return SiteUser;\r\n}(UserBase));\r\n/**\r\n * Represents the current user\r\n */\r\nvar CurrentUser = /** @class */ (function (_super) {\r\n    __extends(CurrentUser, _super);\r\n    function CurrentUser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CurrentUser = __decorate([\r\n        defaultPath(\"currentuser\")\r\n    ], CurrentUser);\r\n    return CurrentUser;\r\n}(UserBase));\n\n/**\r\n * Principal Type enum\r\n *\r\n */\r\nvar PrincipalType;\r\n(function (PrincipalType) {\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType || (PrincipalType = {}));\r\n/**\r\n * Describes a collection of site groups\r\n *\r\n */\r\nvar SiteGroups = /** @class */ (function (_super) {\r\n    __extends(SiteGroups, _super);\r\n    function SiteGroups() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SiteGroups_1 = SiteGroups;\r\n    /**\r\n     * Gets a group from the collection by id\r\n     *\r\n     * @param id The id of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getById = function (id) {\r\n        var sg = new SiteGroup(this);\r\n        sg.concat(\"(\" + id + \")\");\r\n        return sg;\r\n    };\r\n    /**\r\n     * Adds a new group to the site collection\r\n     *\r\n     * @param props The group properties object of property names and values to be set for the group\r\n     */\r\n    SiteGroups.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend(metadata(\"SP.Group\"), properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                group: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a group from the collection by name\r\n     *\r\n     * @param groupName The name of the group to retrieve\r\n     */\r\n    SiteGroups.prototype.getByName = function (groupName) {\r\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\r\n    };\r\n    /**\r\n     * Removes the group with the specified member id from the collection\r\n     *\r\n     * @param id The id of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeById = function (id) {\r\n        return this.clone(SiteGroups_1, \"removeById('\" + id + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Removes the cross-site group with the specified name from the collection\r\n     *\r\n     * @param loginName The name of the group to remove\r\n     */\r\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\r\n        return this.clone(SiteGroups_1, \"removeByLoginName('\" + loginName + \"')\").postCore();\r\n    };\r\n    var SiteGroups_1;\r\n    SiteGroups = SiteGroups_1 = __decorate([\r\n        defaultPath(\"sitegroups\")\r\n    ], SiteGroups);\r\n    return SiteGroups;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single group\r\n *\r\n */\r\nvar SiteGroup = /** @class */ (function (_super) {\r\n    __extends(SiteGroup, _super);\r\n    function SiteGroup() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Group\", function (d, p) {\r\n            var retGroup = _this;\r\n            if (hOP(p, \"Title\")) {\r\n                /* tslint:disable-next-line no-string-literal */\r\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + p[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: d,\r\n                group: retGroup,\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\r\n        /**\r\n         * Gets the users for this group\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this, \"users\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SiteGroup;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a set of role assignments for the current scope\r\n *\r\n */\r\nvar RoleAssignments = /** @class */ (function (_super) {\r\n    __extends(RoleAssignments, _super);\r\n    function RoleAssignments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleAssignments_1 = RoleAssignments;\r\n    /**\r\n     * Gets the role assignment associated with the specified principal id from the collection.\r\n     *\r\n     * @param id The id of the role assignment\r\n     */\r\n    RoleAssignments.prototype.getById = function (id) {\r\n        var ra = new RoleAssignment(this);\r\n        ra.concat(\"(\" + id + \")\");\r\n        return ra;\r\n    };\r\n    /**\r\n     * Adds a new role assignment with the specified principal and role definitions to the collection\r\n     *\r\n     * @param principalId The id of the user or group to assign permissions to\r\n     * @param roleDefId The id of the role definition that defines the permissions to assign\r\n     *\r\n     */\r\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the role assignment with the specified principal and role definition from the collection\r\n     *\r\n     * @param principalId The id of the user or group in the role assignment\r\n     * @param roleDefId The id of the role definition in the role assignment\r\n     *\r\n     */\r\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\r\n        return this.clone(RoleAssignments_1, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\").postCore();\r\n    };\r\n    var RoleAssignments_1;\r\n    RoleAssignments = RoleAssignments_1 = __decorate([\r\n        defaultPath(\"roleassignments\")\r\n    ], RoleAssignments);\r\n    return RoleAssignments;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role assignment\r\n *\r\n */\r\nvar RoleAssignment = /** @class */ (function (_super) {\r\n    __extends(RoleAssignment, _super);\r\n    function RoleAssignment() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role assignment\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\r\n        /**\r\n         * Gets the groups that directly belong to the access control list (ACL) for this securable object\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this, \"groups\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\r\n        /**\r\n         * Gets the role definition bindings for this role assignment\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitionBindings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RoleAssignment;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes a collection of role definitions\r\n *\r\n */\r\nvar RoleDefinitions = /** @class */ (function (_super) {\r\n    __extends(RoleDefinitions, _super);\r\n    function RoleDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the role definition with the specified id from the collection\r\n     *\r\n     * @param id The id of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getById = function (id) {\r\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified name\r\n     *\r\n     * @param name The name of the role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByName = function (name) {\r\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Gets the role definition with the specified role type\r\n     *\r\n     * @param roleTypeKind The roletypekind of the role definition (None=0, Guest=1, Reader=2, Contributor=3, WebDesigner=4, Administrator=5, Editor=6, System=7)\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\r\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\r\n    };\r\n    /**\r\n     * Creates a role definition\r\n     *\r\n     * @param name The new role definition's name\r\n     * @param description The new role definition's description\r\n     * @param order The order in which the role definition appears\r\n     * @param basePermissions The permissions mask for this role definition\r\n     *\r\n     */\r\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            BasePermissions: extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\r\n            Description: description,\r\n            Name: name,\r\n            Order: order,\r\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\r\n        });\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                definition: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    RoleDefinitions = __decorate([\r\n        defaultPath(\"roledefinitions\")\r\n    ], RoleDefinitions);\r\n    return RoleDefinitions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a role definition\r\n *\r\n */\r\nvar RoleDefinition = /** @class */ (function (_super) {\r\n    __extends(RoleDefinition, _super);\r\n    function RoleDefinition() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Deletes this role definition\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n        /* tslint:enable */\r\n    }\r\n    /**\r\n     * Updates this role definition with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the role definition\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    RoleDefinition.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var s = [\"BasePermissions\"];\r\n        if (hOP(properties, s[0]) !== undefined) {\r\n            properties[s[0]] = extend({ __metadata: { type: \"SP.\" + s[0] } }, properties[s[0]]);\r\n        }\r\n        var postBody = jsS(extend(metadata(\"SP.RoleDefinition\"), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retDef = _this;\r\n            if (hOP(properties, \"Name\")) {\r\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\r\n                retDef = parent_1.getByName(properties[\"Name\"]);\r\n            }\r\n            return {\r\n                data: data,\r\n                definition: retDef,\r\n            };\r\n        });\r\n    };\r\n    return RoleDefinition;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the role definitons bound to a role assignment object\r\n *\r\n */\r\nvar RoleDefinitionBindings = /** @class */ (function (_super) {\r\n    __extends(RoleDefinitionBindings, _super);\r\n    function RoleDefinitionBindings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RoleDefinitionBindings = __decorate([\r\n        defaultPath(\"roledefinitionbindings\")\r\n    ], RoleDefinitionBindings);\r\n    return RoleDefinitionBindings;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Determines the display mode of the given control or view\r\n */\r\nvar ControlMode;\r\n(function (ControlMode) {\r\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\r\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\r\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\r\n})(ControlMode || (ControlMode = {}));\r\n/**\r\n * Specifies the type of the field.\r\n */\r\nvar FieldTypes;\r\n(function (FieldTypes) {\r\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\r\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\r\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\r\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\r\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\r\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\r\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\r\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\r\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\r\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\r\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\r\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\r\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\r\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\r\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\r\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\r\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\r\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\r\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\r\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\r\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\r\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\r\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\r\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\r\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\r\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\r\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\r\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\r\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\r\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\r\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\r\n})(FieldTypes || (FieldTypes = {}));\r\nvar DateTimeFieldFormatType;\r\n(function (DateTimeFieldFormatType) {\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\r\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\r\n})(DateTimeFieldFormatType || (DateTimeFieldFormatType = {}));\r\n/**\r\n * Specifies the control settings while adding a field.\r\n */\r\nvar AddFieldOptions;\r\n(function (AddFieldOptions) {\r\n    /**\r\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\r\n    /**\r\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\r\n    /**\r\n     * Specify that a new field must not be added to any other content type\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\r\n    /**\r\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\r\n    /**\r\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\r\n    /**\r\n     * Specify that a new field that is added to the specified list must also be added to the default list view\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\r\n    /**\r\n     * Specify to confirm that no other field has the same display name\r\n     */\r\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\r\n})(AddFieldOptions || (AddFieldOptions = {}));\r\nvar CalendarType;\r\n(function (CalendarType) {\r\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\r\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\r\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\r\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\r\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\r\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\r\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\r\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\r\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\r\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\r\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\r\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\r\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\r\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\r\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\r\n})(CalendarType || (CalendarType = {}));\r\nvar UrlFieldFormatType;\r\n(function (UrlFieldFormatType) {\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\r\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\r\n})(UrlFieldFormatType || (UrlFieldFormatType = {}));\r\nvar PermissionKind;\r\n(function (PermissionKind) {\r\n    /**\r\n     * Has no permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\r\n    /**\r\n     * View items in lists, documents in document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\r\n    /**\r\n     * Add items to lists, documents to document libraries, and Web discussion comments.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\r\n    /**\r\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\r\n     * in documents, and customize Web Part Pages in document libraries.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\r\n    /**\r\n     * Delete items from a list, documents from a document library, and Web discussion\r\n     * comments in documents.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\r\n    /**\r\n     * Approve a minor version of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\r\n    /**\r\n     * View the source of documents with server-side file handlers.\r\n     */\r\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\r\n    /**\r\n     * View past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\r\n    /**\r\n     * Delete past versions of a list item or document.\r\n     */\r\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\r\n    /**\r\n     * Discard or check in a document which is checked out to another user.\r\n     */\r\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\r\n    /**\r\n     * Create, change, and delete personal views of lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\r\n    /**\r\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\r\n    /**\r\n     * View forms, views, and application pages, and enumerate lists.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\r\n    /**\r\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\r\n     * The list permissions in the site do not change.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\r\n    /**\r\n     * Allow users to open a Site, list, or folder to access items inside that container.\r\n     */\r\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\r\n    /**\r\n     * View pages in a Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\r\n    /**\r\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\r\n     * a Windows SharePoint Services compatible editor.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\r\n    /**\r\n     * Apply a theme or borders to the entire Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\r\n    /**\r\n     * Apply a style sheet (.css file) to the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\r\n    /**\r\n     * View reports on Site usage.\r\n     */\r\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\r\n    /**\r\n     * Create a Site using Self-Service Site Creation.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\r\n    /**\r\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\r\n    /**\r\n     * Create a group of users that can be used anywhere within the site collection.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\r\n    /**\r\n     * Create and change permission levels on the Site and assign permissions to users\r\n     * and groups.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\r\n    /**\r\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\r\n     * and WebDAV interfaces.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\r\n    /**\r\n     * View information about users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\r\n    /**\r\n     * Add or remove personal Web Parts on a Web Part Page.\r\n     */\r\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\r\n    /**\r\n     * Update Web Parts to display personalized information.\r\n     */\r\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\r\n    /**\r\n     * Grant the ability to perform all administration tasks for the Site as well as\r\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\r\n     * through the object model or through the user interface (UI). When granted on the\r\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\r\n     * site collection scoped Features through the object model. To browse to the Site\r\n     * Collection Features page and activate or deactivate Site Collection scoped Features\r\n     * through the UI, you must be a Site Collection administrator.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\r\n    /**\r\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\r\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\r\n     */\r\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\r\n    /**\r\n     * Use features that launch client applications. Otherwise, users must work on documents\r\n     * locally and upload changes.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\r\n    /**\r\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\r\n    /**\r\n     * Manage alerts for all users of the Site.\r\n     */\r\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\r\n    /**\r\n     * Create e-mail alerts.\r\n     */\r\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\r\n    /**\r\n     * Allows a user to change his or her user information, such as adding a picture.\r\n     */\r\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\r\n    /**\r\n     * Enumerate permissions on Site, list, folder, document, or list item.\r\n     */\r\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\r\n    /**\r\n     * Has all permissions on the Site. Not available through the user interface.\r\n     */\r\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\r\n})(PermissionKind || (PermissionKind = {}));\r\n/**\r\n * Specifies the type of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar PrincipalType$1;\r\n(function (PrincipalType) {\r\n    /**\r\n     * Enumeration whose value specifies no principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies a user as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\r\n    /**\r\n     * Enumeration whose value specifies a distribution list as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\r\n    /**\r\n     * Enumeration whose value specifies a security group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\r\n    /**\r\n     * Enumeration whose value specifies a group as the principal type.\r\n     */\r\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\r\n    /**\r\n     * Enumeration whose value specifies all principal types.\r\n     */\r\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\r\n})(PrincipalType$1 || (PrincipalType$1 = {}));\r\n/* tslint:enable:no-bitwise */\r\n/**\r\n * Specifies the source of a principal.\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar PrincipalSource;\r\n(function (PrincipalSource) {\r\n    /**\r\n     * Enumeration whose value specifies no principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Enumeration whose value specifies user information list as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\r\n    /**\r\n     * Enumeration whose value specifies Active Directory as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\r\n    /**\r\n     * Enumeration whose value specifies the current membership provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\r\n    /**\r\n     * Enumeration whose value specifies the current role provider as the principal source.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\r\n    /**\r\n     * Enumeration whose value specifies all principal sources.\r\n     */\r\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\r\n})(PrincipalSource || (PrincipalSource = {}));\r\n/* tslint:enable:no-bitwise */\r\nvar RoleType;\r\n(function (RoleType) {\r\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\r\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\r\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\r\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\r\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\r\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\r\n})(RoleType || (RoleType = {}));\r\nvar PageType;\r\n(function (PageType) {\r\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\r\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\r\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\r\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\r\n    PageType[PageType[\"View\"] = 3] = \"View\";\r\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\r\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\r\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\r\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\r\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\r\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\r\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\r\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\r\n})(PageType || (PageType = {}));\r\nvar SharingLinkKind;\r\n(function (SharingLinkKind) {\r\n    /**\r\n     * Uninitialized link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\r\n    /**\r\n     * Direct link to the object being shared\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with view permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\r\n    /**\r\n     * Organization-shareable link to the object being shared with edit permissions\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\r\n    /**\r\n     * View only anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\r\n    /**\r\n     * Read/Write anonymous link\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\r\n    /**\r\n     * Flexible sharing Link where properties can change without affecting link URL\r\n     */\r\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\r\n})(SharingLinkKind || (SharingLinkKind = {}));\r\n/**\r\n * Indicates the role of the sharing link\r\n */\r\nvar SharingRole;\r\n(function (SharingRole) {\r\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\r\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\r\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\r\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\r\n})(SharingRole || (SharingRole = {}));\r\nvar SharingOperationStatusCode;\r\n(function (SharingOperationStatusCode) {\r\n    /**\r\n     * The share operation completed without errors.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\r\n    /**\r\n     * The share operation completed and generated requests for access.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\r\n    /**\r\n     * The share operation failed as there were no resolved users.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\r\n    /**\r\n     * The share operation failed due to insufficient permissions.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\r\n    /**\r\n     * The share operation failed when attempting a cross site share, which is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\r\n    /**\r\n     * The sharing operation failed due to an unknown error.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\r\n    /**\r\n     * The text you typed is too long. Please shorten it.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\r\n    /**\r\n     * The maximum number of unique scopes in the list has been exceeded.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\r\n    /**\r\n     * The share operation failed because a sharing capability is disabled in the site.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\r\n    /**\r\n     * The specified object for the share operation is not supported.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\r\n    /**\r\n     * A SharePoint group cannot contain another SharePoint group.\r\n     */\r\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\r\n})(SharingOperationStatusCode || (SharingOperationStatusCode = {}));\r\nvar SPSharedObjectType;\r\n(function (SPSharedObjectType) {\r\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\r\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\r\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\r\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\r\n})(SPSharedObjectType || (SPSharedObjectType = {}));\r\nvar SharingDomainRestrictionMode;\r\n(function (SharingDomainRestrictionMode) {\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\r\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\r\n})(SharingDomainRestrictionMode || (SharingDomainRestrictionMode = {}));\r\nvar RenderListDataOptions;\r\n(function (RenderListDataOptions) {\r\n    RenderListDataOptions[RenderListDataOptions[\"None\"] = 0] = \"None\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ContextInfo\"] = 1] = \"ContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListData\"] = 2] = \"ListData\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListSchema\"] = 4] = \"ListSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"MenuView\"] = 8] = \"MenuView\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ListContentType\"] = 16] = \"ListContentType\";\r\n    RenderListDataOptions[RenderListDataOptions[\"FileSystemItemId\"] = 32] = \"FileSystemItemId\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientFormSchema\"] = 64] = \"ClientFormSchema\";\r\n    RenderListDataOptions[RenderListDataOptions[\"QuickLaunch\"] = 128] = \"QuickLaunch\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Spotlight\"] = 256] = \"Spotlight\";\r\n    RenderListDataOptions[RenderListDataOptions[\"Visualization\"] = 512] = \"Visualization\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ViewMetadata\"] = 1024] = \"ViewMetadata\";\r\n    RenderListDataOptions[RenderListDataOptions[\"DisableAutoHyperlink\"] = 2048] = \"DisableAutoHyperlink\";\r\n    RenderListDataOptions[RenderListDataOptions[\"EnableMediaTAUrls\"] = 4096] = \"EnableMediaTAUrls\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ParentInfo\"] = 8192] = \"ParentInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"PageContextInfo\"] = 16384] = \"PageContextInfo\";\r\n    RenderListDataOptions[RenderListDataOptions[\"ClientSideComponentManifest\"] = 32768] = \"ClientSideComponentManifest\";\r\n})(RenderListDataOptions || (RenderListDataOptions = {}));\r\nvar FieldUserSelectionMode;\r\n(function (FieldUserSelectionMode) {\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleAndGroups\"] = 1] = \"PeopleAndGroups\";\r\n    FieldUserSelectionMode[FieldUserSelectionMode[\"PeopleOnly\"] = 0] = \"PeopleOnly\";\r\n})(FieldUserSelectionMode || (FieldUserSelectionMode = {}));\r\nvar ChoiceFieldFormatType;\r\n(function (ChoiceFieldFormatType) {\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"Dropdown\"] = 0] = \"Dropdown\";\r\n    ChoiceFieldFormatType[ChoiceFieldFormatType[\"RadioButtons\"] = 1] = \"RadioButtons\";\r\n})(ChoiceFieldFormatType || (ChoiceFieldFormatType = {}));\r\n/**\r\n * Specifies the originating zone of a request received.\r\n */\r\nvar UrlZone;\r\n(function (UrlZone) {\r\n    /**\r\n     * Specifies the default zone used for requests unless another zone is specified.\r\n     */\r\n    UrlZone[UrlZone[\"DefaultZone\"] = 0] = \"DefaultZone\";\r\n    /**\r\n     * Specifies an intranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Intranet\"] = 1] = \"Intranet\";\r\n    /**\r\n     * Specifies an Internet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Internet\"] = 2] = \"Internet\";\r\n    /**\r\n     * Specifies a custom zone.\r\n     */\r\n    UrlZone[UrlZone[\"Custom\"] = 3] = \"Custom\";\r\n    /**\r\n     * Specifies an extranet zone.\r\n     */\r\n    UrlZone[UrlZone[\"Extranet\"] = 4] = \"Extranet\";\r\n})(UrlZone || (UrlZone = {}));\n\nvar SharePointQueryableSecurable = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableSecurable, _super);\r\n    function SharePointQueryableSecurable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"roleAssignments\", {\r\n        /**\r\n         * Gets the set of role assignments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleAssignments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SharePointQueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\r\n        /**\r\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the effective permissions for the user supplied\r\n     *\r\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\r\n     */\r\n    SharePointQueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\r\n        var q = this.clone(SharePointQueryable, \"getUserEffectivePermissions(@user)\");\r\n        q.query.set(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get().then(function (r) {\r\n            // handle verbose mode\r\n            return hOP(r, \"GetUserEffectivePermissions\") ? r.GetUserEffectivePermissions : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the effective permissions for the current user\r\n     */\r\n    SharePointQueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\r\n        var _this = this;\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableInstance(\"_api/web\", \"currentuser\");\r\n        return w.configureFrom(this).select(\"LoginName\").get().then(function (user) {\r\n            return _this.getUserEffectivePermissions(user.LoginName);\r\n        });\r\n    };\r\n    /**\r\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\r\n     *\r\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\r\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\r\n     */\r\n    SharePointQueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\r\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\r\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\r\n        return this.clone(SharePointQueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\").postCore();\r\n    };\r\n    /**\r\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\r\n     *\r\n     */\r\n    SharePointQueryableSecurable.prototype.resetRoleInheritance = function () {\r\n        return this.clone(SharePointQueryableSecurable, \"resetroleinheritance\").postCore();\r\n    };\r\n    /**\r\n     * Determines if a given user has the appropriate permissions\r\n     *\r\n     * @param loginName The user to check\r\n     * @param permission The permission being checked\r\n     */\r\n    SharePointQueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\r\n        var _this = this;\r\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Determines if the current user has the requested permissions\r\n     *\r\n     * @param permission The permission we wish to check\r\n     */\r\n    SharePointQueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\r\n        var _this = this;\r\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\r\n            return _this.hasPermissions(perms, permission);\r\n        });\r\n    };\r\n    /**\r\n     * Taken from sp.js, checks the supplied permissions against the mask\r\n     *\r\n     * @param value The security principal's permissions on the given object\r\n     * @param perm The permission checked against the value\r\n     */\r\n    /* tslint:disable:no-bitwise */\r\n    SharePointQueryableSecurable.prototype.hasPermissions = function (value, perm) {\r\n        if (!perm) {\r\n            return true;\r\n        }\r\n        if (perm === PermissionKind.FullMask) {\r\n            return (value.High & 32767) === 32767 && value.Low === 65535;\r\n        }\r\n        perm = perm - 1;\r\n        var num = 1;\r\n        if (perm >= 0 && perm < 32) {\r\n            num = num << perm;\r\n            return 0 !== (value.Low & num);\r\n        }\r\n        else if (perm >= 32 && perm < 64) {\r\n            num = num << perm - 32;\r\n            return 0 !== (value.High & num);\r\n        }\r\n        return false;\r\n    };\r\n    return SharePointQueryableSecurable;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Internal helper class used to augment classes to include sharing functionality\r\n */\r\nvar SharePointQueryableShareable = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareable, _super);\r\n    function SharePointQueryableShareable() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a sharing link for the supplied\r\n     *\r\n     * @param kind The kind of link to share\r\n     * @param expiration The optional expiration for this link\r\n     */\r\n    SharePointQueryableShareable.prototype.getShareLink = function (kind, expiration) {\r\n        if (expiration === void 0) { expiration = null; }\r\n        // date needs to be an ISO string or null\r\n        var expString = expiration !== null ? expiration.toISOString() : null;\r\n        // clone using the factory and send the request\r\n        return this.clone(SharePointQueryableShareable, \"shareLink\").postCore({\r\n            body: jsS({\r\n                request: {\r\n                    createLink: true,\r\n                    emailData: null,\r\n                    settings: {\r\n                        expiration: expString,\r\n                        linkKind: kind,\r\n                    },\r\n                },\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Shares this instance with the supplied users\r\n     *\r\n     * @param loginNames Resolved login names to share\r\n     * @param role The role\r\n     * @param requireSignin True to require the user is authenticated, otherwise false\r\n     * @param propagateAcl True to apply this share to all children\r\n     * @param emailData If supplied an email will be sent with the indicated properties\r\n     */\r\n    SharePointQueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\r\n        var _this = this;\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        // handle the multiple input types\r\n        if (!Array.isArray(loginNames)) {\r\n            loginNames = [loginNames];\r\n        }\r\n        var userStr = jsS(loginNames.map(function (login) { return { Key: login }; }));\r\n        var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n        // start by looking up the role definition id we need to set the roleValue\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var w = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n        return w.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n            if (!Array.isArray(def) || def.length < 1) {\r\n                throw Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\r\n            }\r\n            var postBody = {\r\n                includeAnonymousLinkInEmail: requireSignin,\r\n                peoplePickerInput: userStr,\r\n                propagateAcl: propagateAcl,\r\n                roleValue: \"role:\" + def[0].Id,\r\n                useSimplifiedRoles: true,\r\n            };\r\n            if (emailData !== undefined) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: emailData.body,\r\n                    emailSubject: emailData.subject !== undefined ? emailData.subject : \"\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.clone(SharePointQueryableShareable, \"shareObject\").postCore({\r\n                body: jsS(postBody),\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Shares an object based on the supplied options\r\n     *\r\n     * @param options The set of options to send to the ShareObject method\r\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\r\n     */\r\n    SharePointQueryableShareable.prototype.shareObject = function (options, bypass) {\r\n        var _this = this;\r\n        if (bypass === void 0) { bypass = false; }\r\n        if (bypass) {\r\n            // if the bypass flag is set send the supplied parameters directly to the service\r\n            return this.sendShareObjectRequest(options);\r\n        }\r\n        // extend our options with some defaults\r\n        options = extend(options, {\r\n            group: null,\r\n            includeAnonymousLinkInEmail: false,\r\n            propagateAcl: false,\r\n            useSimplifiedRoles: true,\r\n        }, true);\r\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\r\n            // handle the multiple input types\r\n            if (!Array.isArray(options.loginNames)) {\r\n                options.loginNames = [options.loginNames];\r\n            }\r\n            var userStr = jsS(options.loginNames.map(function (login) { return { Key: login }; }));\r\n            var postBody = {\r\n                peoplePickerInput: userStr,\r\n                roleValue: roleValue,\r\n                url: options.url,\r\n            };\r\n            if (options.emailData !== undefined && options.emailData !== null) {\r\n                postBody = extend(postBody, {\r\n                    emailBody: options.emailData.body,\r\n                    emailSubject: options.emailData.subject !== undefined ? options.emailData.subject : \"Shared with you.\",\r\n                    sendEmail: true,\r\n                });\r\n            }\r\n            return _this.sendShareObjectRequest(postBody);\r\n        });\r\n    };\r\n    /**\r\n     * Calls the web's UnshareObject method\r\n     *\r\n     * @param url The url of the object to unshare\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObjectWeb = function (url) {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore({\r\n            body: jsS({\r\n                url: url,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareable.prototype.checkPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, \"checkPermissions\").postCore({\r\n            body: jsS({\r\n                recipients: recipients,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     * @param expands Expand more fields.\r\n     *\r\n     */\r\n    SharePointQueryableShareable.prototype.getSharingInformation = function (request, expands) {\r\n        if (request === void 0) { request = null; }\r\n        var q = this.clone(SharePointQueryableShareable, \"getSharingInformation\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: jsS({\r\n                request: request,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, \"getObjectSharingSettings\").postCore({\r\n            body: jsS({\r\n                useSimplifiedRoles: useSimplifiedRoles,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Unshares this object\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareObject = function () {\r\n        return this.clone(SharePointQueryableShareable, \"unshareObject\").postCore();\r\n    };\r\n    /**\r\n     * Deletes a link by type\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareable.prototype.deleteLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, \"deleteLinkByKind\").postCore({\r\n            body: jsS({ linkKind: kind }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareable.prototype.unshareLink = function (kind, shareId) {\r\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\r\n        return this.clone(SharePointQueryableShareable, \"unshareLink\").postCore({\r\n            body: jsS({ linkKind: kind, shareId: shareId }),\r\n        });\r\n    };\r\n    /**\r\n     * Calculates the roleValue string used in the sharing query\r\n     *\r\n     * @param role The Sharing Role\r\n     * @param group The Group type\r\n     */\r\n    SharePointQueryableShareable.prototype.getRoleValue = function (role, group) {\r\n        // we will give group precedence, because we had to make a choice\r\n        if (group !== undefined && group !== null) {\r\n            switch (group) {\r\n                case RoleType.Contributor:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var memberGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedmembergroup\");\r\n                    return memberGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                case RoleType.Reader:\r\n                case RoleType.Guest:\r\n                    // remove need to reference Web here, which created a circular build issue\r\n                    var visitorGroup = new SharePointQueryableInstance(\"_api/web\", \"associatedvisitorgroup\");\r\n                    return visitorGroup.select(\"Id\").get().then(function (g) { return \"group: \" + g.Id; });\r\n                default:\r\n                    throw Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\r\n            }\r\n        }\r\n        else {\r\n            var roleFilter = role === SharingRole.Edit ? RoleType.Contributor : RoleType.Reader;\r\n            // remove need to reference Web here, which created a circular build issue\r\n            var roleDefs = new SharePointQueryableCollection(\"_api/web\", \"roledefinitions\");\r\n            return roleDefs.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\r\n                if (def.length < 1) {\r\n                    throw Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\r\n                }\r\n                return \"role: \" + def[0].Id;\r\n            });\r\n        }\r\n    };\r\n    SharePointQueryableShareable.prototype.getShareObjectWeb = function (candidate) {\r\n        return Promise.resolve(new SharePointQueryableInstance(extractWebUrl(candidate), \"/_api/SP.Web.ShareObject\"));\r\n    };\r\n    SharePointQueryableShareable.prototype.sendShareObjectRequest = function (options) {\r\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\r\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(SharePointQueryableShareable).postCore({\r\n                body: jsS(options),\r\n            });\r\n        });\r\n    };\r\n    return SharePointQueryableShareable;\r\n}(SharePointQueryable));\r\nvar SharePointQueryableShareableWeb = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableWeb, _super);\r\n    function SharePointQueryableShareableWeb() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this web with the supplied users\r\n     * @param loginNames The resolved login names to share\r\n     * @param role The role to share this web\r\n     * @param emailData Optional email data\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\r\n        var _this = this;\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        var dependency = this.addBatchDependency();\r\n        // remove need to reference Web here, which created a circular build issue\r\n        var web = new SharePointQueryableInstance(extractWebUrl(this.toUrl()), \"/_api/web/url\");\r\n        return web.get().then(function (url) {\r\n            dependency();\r\n            return _this.shareObject(combine(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\r\n        });\r\n    };\r\n    /**\r\n     * Provides direct access to the static web.ShareObject method\r\n     *\r\n     * @param url The url to share\r\n     * @param loginNames Resolved loginnames string[] of a single login name string\r\n     * @param roleValue Role value\r\n     * @param emailData Optional email data\r\n     * @param groupId Optional group id\r\n     * @param propagateAcl\r\n     * @param includeAnonymousLinkInEmail\r\n     * @param useSimplifiedRoles\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\r\n        if (propagateAcl === void 0) { propagateAcl = false; }\r\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).shareObject({\r\n            emailData: emailData,\r\n            group: group,\r\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\r\n            loginNames: loginNames,\r\n            propagateAcl: propagateAcl,\r\n            role: role,\r\n            url: url,\r\n            useSimplifiedRoles: useSimplifiedRoles,\r\n        });\r\n    };\r\n    /**\r\n     * Supplies a method to pass any set of arguments to ShareObject\r\n     *\r\n     * @param options The set of options to send to ShareObject\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.shareObjectRaw = function (options) {\r\n        return this.clone(SharePointQueryableShareable, null).shareObject(options, true);\r\n    };\r\n    /**\r\n     * Unshares the object\r\n     *\r\n     * @param url The url of the object to stop sharing\r\n     */\r\n    SharePointQueryableShareableWeb.prototype.unshareObject = function (url) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObjectWeb(url);\r\n    };\r\n    return SharePointQueryableShareableWeb;\r\n}(SharePointQueryableSecurable));\r\nvar SharePointQueryableShareableItem = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableItem, _super);\r\n    function SharePointQueryableShareableItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing for this item\r\n     *\r\n     * @param kind The type of link to share\r\n     * @param expiration The optional expiration date\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getShareLink(kind, expiration);\r\n    };\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        return this.clone(SharePointQueryableShareable, null).shareWith(loginNames, role, requireSignin, false, emailData);\r\n    };\r\n    /**\r\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n     *\r\n     * @param recipients The array of Entities for which Permissions need to be checked.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\r\n        return this.clone(SharePointQueryableShareable, null).checkPermissions(recipients);\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     * @param expands Expand more fields.\r\n     *\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getSharingInformation = function (request, expands) {\r\n        if (request === void 0) { request = null; }\r\n        return this.clone(SharePointQueryableShareable, null).getSharingInformation(request, expands);\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    SharePointQueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        return this.clone(SharePointQueryableShareable, null).getObjectSharingSettings(useSimplifiedRoles);\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshare = function () {\r\n        return this.clone(SharePointQueryableShareable, null).unshareObject();\r\n    };\r\n    /**\r\n     * Deletes a sharing link by kind\r\n     *\r\n     * @param kind Deletes a sharing link by the kind of link\r\n     */\r\n    SharePointQueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\r\n        return this.clone(SharePointQueryableShareable, null).deleteLinkByKind(kind);\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId\r\n     */\r\n    SharePointQueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\r\n        return this.clone(SharePointQueryableShareable, null).unshareLink(kind, shareId);\r\n    };\r\n    return SharePointQueryableShareableItem;\r\n}(SharePointQueryableSecurable));\r\nvar FileFolderShared = /** @class */ (function (_super) {\r\n    __extends(FileFolderShared, _super);\r\n    function FileFolderShared() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a link suitable for sharing\r\n     *\r\n     * @param kind The kind of link to get\r\n     * @param expiration Optional, an expiration for this link\r\n     */\r\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\r\n        if (kind === void 0) { kind = SharingLinkKind.OrganizationView; }\r\n        if (expiration === void 0) { expiration = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getShareLink(kind, expiration);\r\n        });\r\n    };\r\n    /**\r\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\r\n         *\r\n         * @param recipients The array of Entities for which Permissions need to be checked.\r\n         */\r\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.checkPermissions(recipients);\r\n        });\r\n    };\r\n    /**\r\n     * Get Sharing Information.\r\n     *\r\n     * @param request The SharingInformationRequest Object.\r\n     * @param expands Expand more fields.\r\n     *\r\n     */\r\n    FileFolderShared.prototype.getSharingInformation = function (request, expands) {\r\n        if (request === void 0) { request = null; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getSharingInformation(request, expands);\r\n        });\r\n    };\r\n    /**\r\n     * Gets the sharing settings of an item.\r\n     *\r\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\r\n     */\r\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\r\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\r\n        });\r\n    };\r\n    /**\r\n     * Unshare this item\r\n     */\r\n    FileFolderShared.prototype.unshare = function () {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareObject();\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a sharing link by the kind of link\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     */\r\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.deleteLinkByKind(kind);\r\n        });\r\n    };\r\n    /**\r\n     * Removes the specified link to the item.\r\n     *\r\n     * @param kind The kind of link to be deleted.\r\n     * @param shareId The share id to delete\r\n     */\r\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.unshareLink(kind, shareId);\r\n        });\r\n    };\r\n    /**\r\n     * For files and folders we need to use the associated item end point\r\n     */\r\n    FileFolderShared.prototype.getShareable = function () {\r\n        var _this = this;\r\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\r\n        return this.clone(SharePointQueryableShareableFile, \"listItemAllFields\", false).select(\"odata.id\").get().then(function (d) {\r\n            var shareable = new SharePointQueryableShareable(odataUrlFrom(d));\r\n            // we need to handle batching\r\n            if (_this.hasBatch) {\r\n                shareable = shareable.inBatch(_this.batch);\r\n            }\r\n            return shareable;\r\n        });\r\n    };\r\n    return FileFolderShared;\r\n}(SharePointQueryableInstance));\r\nvar SharePointQueryableShareableFile = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableFile, _super);\r\n    function SharePointQueryableShareableFile() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFile;\r\n}(FileFolderShared));\r\nvar SharePointQueryableShareableFolder = /** @class */ (function (_super) {\r\n    __extends(SharePointQueryableShareableFolder, _super);\r\n    function SharePointQueryableShareableFolder() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Shares this item with one or more users\r\n     *\r\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\r\n     * @param role The role (View | Edit) applied to the share\r\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\r\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\r\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\r\n     */\r\n    SharePointQueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\r\n        if (role === void 0) { role = SharingRole.View; }\r\n        if (requireSignin === void 0) { requireSignin = false; }\r\n        if (shareEverything === void 0) { shareEverything = false; }\r\n        var dependency = this.addBatchDependency();\r\n        return this.getShareable().then(function (shareable) {\r\n            dependency();\r\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\r\n        });\r\n    };\r\n    return SharePointQueryableShareableFolder;\r\n}(FileFolderShared));\n\nvar LimitedWebPartManager = /** @class */ (function (_super) {\r\n    __extends(LimitedWebPartManager, _super);\r\n    function LimitedWebPartManager() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\r\n        /**\r\n         * Gets the set of web part definitions contained by this web part manager\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebPartDefinitions(this, \"webparts\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Exports a webpart definition\r\n     *\r\n     * @param id the GUID id of the definition to export\r\n     */\r\n    LimitedWebPartManager.prototype.export = function (id) {\r\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\").postCore({\r\n            body: jsS({ webPartId: id }),\r\n        });\r\n    };\r\n    /**\r\n     * Imports a webpart\r\n     *\r\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\r\n     */\r\n    LimitedWebPartManager.prototype.import = function (xml) {\r\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\").postCore({\r\n            body: jsS({ webPartXml: xml }),\r\n        });\r\n    };\r\n    return LimitedWebPartManager;\r\n}(SharePointQueryable));\r\nvar WebPartDefinitions = /** @class */ (function (_super) {\r\n    __extends(WebPartDefinitions, _super);\r\n    function WebPartDefinitions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a web part definition from the collection by id\r\n     *\r\n     * @param id The storage ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getById = function (id) {\r\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Gets a web part definition from the collection by storage id\r\n     *\r\n     * @param id The WebPart.ID of the SPWebPartDefinition to retrieve\r\n     */\r\n    WebPartDefinitions.prototype.getByControlId = function (id) {\r\n        return new WebPartDefinition(this, \"getByControlId('\" + id + \"')\");\r\n    };\r\n    return WebPartDefinitions;\r\n}(SharePointQueryableCollection));\r\nvar WebPartDefinition = /** @class */ (function (_super) {\r\n    __extends(WebPartDefinition, _super);\r\n    function WebPartDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\r\n        /**\r\n         * Gets the webpart information associated with this definition\r\n         */\r\n        get: function () {\r\n            return new WebPart(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Saves changes to the Web Part made using other properties and methods on the SPWebPartDefinition object\r\n     */\r\n    WebPartDefinition.prototype.saveChanges = function () {\r\n        return this.clone(WebPartDefinition, \"SaveWebPartChanges\").postCore();\r\n    };\r\n    /**\r\n     * Moves the Web Part to a different location on a Web Part Page\r\n     *\r\n     * @param zoneId The ID of the Web Part Zone to which to move the Web Part\r\n     * @param zoneIndex A Web Part zone index that specifies the position at which the Web Part is to be moved within the destination Web Part zone\r\n     */\r\n    WebPartDefinition.prototype.moveTo = function (zoneId, zoneIndex) {\r\n        return this.clone(WebPartDefinition, \"MoveWebPartTo(zoneID='\" + zoneId + \"', zoneIndex=\" + zoneIndex + \")\").postCore();\r\n    };\r\n    /**\r\n     * Closes the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.close = function () {\r\n        return this.clone(WebPartDefinition, \"CloseWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Opens the Web Part. If the Web Part is already closed, this method does nothing\r\n     */\r\n    WebPartDefinition.prototype.open = function () {\r\n        return this.clone(WebPartDefinition, \"OpenWebPart\").postCore();\r\n    };\r\n    /**\r\n     * Removes a webpart from a page, all settings will be lost\r\n     */\r\n    WebPartDefinition.prototype.delete = function () {\r\n        return this.clone(WebPartDefinition, \"DeleteWebPart\").postCore();\r\n    };\r\n    return WebPartDefinition;\r\n}(SharePointQueryableInstance));\r\nvar WebPart = /** @class */ (function (_super) {\r\n    __extends(WebPart, _super);\r\n    function WebPart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebPart = __decorate([\r\n        defaultPath(\"webpart\")\r\n    ], WebPart);\r\n    return WebPart;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Folder objects\r\n *\r\n */\r\nvar Folders = /** @class */ (function (_super) {\r\n    __extends(Folders, _super);\r\n    function Folders() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Folders_1 = Folders;\r\n    /**\r\n     * Gets a folder by folder name\r\n     *\r\n     */\r\n    Folders.prototype.getByName = function (name) {\r\n        var f = new Folder(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\r\n     *\r\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\r\n     * @returns The new Folder and the raw response.\r\n     */\r\n    Folders.prototype.add = function (url) {\r\n        var _this = this;\r\n        return this.clone(Folders_1, \"add('\" + url + \"')\").postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                folder: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    var Folders_1;\r\n    Folders = Folders_1 = __decorate([\r\n        defaultPath(\"folders\")\r\n    ], Folders);\r\n    return Folders;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Folder instance\r\n *\r\n */\r\nvar Folder = /** @class */ (function (_super) {\r\n    __extends(Folder, _super);\r\n    function Folder() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.update = _this._update(\"SP.Folder\", function (data) { return ({ data: data, folder: _this }); });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\r\n        /**\r\n         * Specifies the sequence in which content types are displayed.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"contentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"files\", {\r\n        /**\r\n         * Gets this folder's files\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Files(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"folders\", {\r\n        /**\r\n         * Gets this folder's sub folders\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets this folder's list item field values\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\r\n        /**\r\n         * Gets the parent folder, if available\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"parentFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"properties\", {\r\n        /**\r\n         * Gets this folder's properties\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"properties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\r\n        /**\r\n         * Gets this folder's server relative url\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"serverRelativeUrl\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\r\n        /**\r\n         * Gets a value that specifies the content type order.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"uniqueContentTypeOrder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * Delete this folder\r\n    *\r\n    * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    */\r\n    Folder.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(Folder, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Folder.prototype.recycle = function () {\r\n        return this.clone(Folder, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    Folder.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Moves a folder to destination path\r\n     *\r\n     * @param destUrl Absolute or relative URL of the destination path\r\n     */\r\n    Folder.prototype.moveTo = function (destUrl) {\r\n        var _this = this;\r\n        return this.select(\"ServerRelativeUrl\").get().then(function (_a) {\r\n            var srcUrl = _a.ServerRelativeUrl;\r\n            var client = new SPHttpClient();\r\n            var webBaseUrl = _this.toUrl().split(\"/_api\")[0];\r\n            var hostUrl = webBaseUrl.replace(\"://\", \"___\").split(\"/\")[0].replace(\"___\", \"://\");\r\n            var methodUrl = webBaseUrl + \"/_api/SP.MoveCopyUtil.MoveFolder()\";\r\n            return client.post(methodUrl, {\r\n                body: jsS({\r\n                    destUrl: destUrl.indexOf(\"http\") === 0 ? destUrl : \"\" + hostUrl + destUrl,\r\n                    srcUrl: \"\" + hostUrl + srcUrl,\r\n                }),\r\n            }).then(function (r) { return r.json(); });\r\n        });\r\n    };\r\n    return Folder;\r\n}(SharePointQueryableShareableFolder));\n\n/**\r\n * Describes a collection of content types\r\n *\r\n */\r\nvar ContentTypes = /** @class */ (function (_super) {\r\n    __extends(ContentTypes, _super);\r\n    function ContentTypes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ContentTypes_1 = ContentTypes;\r\n    /**\r\n     * Adds an existing contenttype to a content type collection\r\n     *\r\n     * @param contentTypeId in the following format, for example: 0x010102\r\n     */\r\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"contentTypeId\": contentTypeId,\r\n        });\r\n        return this.clone(ContentTypes_1, \"addAvailableContentType\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                contentType: _this.getById(data.id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a ContentType by content type id\r\n     */\r\n    ContentTypes.prototype.getById = function (id) {\r\n        var ct = new ContentType(this);\r\n        ct.concat(\"('\" + id + \"')\");\r\n        return ct;\r\n    };\r\n    /**\r\n     * Adds a new content type to the collection\r\n     *\r\n     * @param id The desired content type id for the new content type (also determines the parent content type)\r\n     * @param name The name of the content type\r\n     * @param description The description of the content type\r\n     * @param group The group in which to add the content type\r\n     * @param additionalSettings Any additional settings to provide when creating the content type\r\n     *\r\n     */\r\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (group === void 0) { group = \"Custom Content Types\"; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.ContentType\"), {\r\n            \"Description\": description,\r\n            \"Group\": group,\r\n            \"Id\": { \"StringValue\": id },\r\n            \"Name\": name,\r\n        }, additionalSettings));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return { contentType: _this.getById(data.id), data: data };\r\n        });\r\n    };\r\n    var ContentTypes_1;\r\n    ContentTypes = ContentTypes_1 = __decorate([\r\n        defaultPath(\"contenttypes\")\r\n    ], ContentTypes);\r\n    return ContentTypes;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single ContentType instance\r\n *\r\n */\r\nvar ContentType = /** @class */ (function (_super) {\r\n    __extends(ContentType, _super);\r\n    function ContentType() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this content type\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\r\n        /**\r\n         * Gets the column (also known as field) references in the content type.\r\n        */\r\n        get: function () {\r\n            return new FieldLinks(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"fields\", {\r\n        /**\r\n         * Gets a value that specifies the collection of fields for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"fields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"parent\", {\r\n        /**\r\n         * Gets the parent content type of the content type.\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\r\n        /**\r\n         * Gets a value that specifies the collection of workflow associations for the content type.\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"workflowAssociations\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContentType;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents a collection of field link instances\r\n */\r\nvar FieldLinks = /** @class */ (function (_super) {\r\n    __extends(FieldLinks, _super);\r\n    function FieldLinks() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a FieldLink by GUID id\r\n     *\r\n     * @param id The GUID id of the field link\r\n     */\r\n    FieldLinks.prototype.getById = function (id) {\r\n        var fl = new FieldLink(this);\r\n        fl.concat(\"(guid'\" + id + \"')\");\r\n        return fl;\r\n    };\r\n    FieldLinks = __decorate([\r\n        defaultPath(\"fieldlinks\")\r\n    ], FieldLinks);\r\n    return FieldLinks;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents a field link instance\r\n */\r\nvar FieldLink = /** @class */ (function (_super) {\r\n    __extends(FieldLink, _super);\r\n    function FieldLink() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FieldLink;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar AttachmentFiles = /** @class */ (function (_super) {\r\n    __extends(AttachmentFiles, _super);\r\n    function AttachmentFiles() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AttachmentFiles_1 = AttachmentFiles;\r\n    /**\r\n     * Gets a Attachment File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    AttachmentFiles.prototype.getByName = function (name) {\r\n        var f = new AttachmentFile(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Adds a new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     * @param content The Base64 file content.\r\n     */\r\n    AttachmentFiles.prototype.add = function (name, content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFiles_1, \"add(FileName='\" + name + \"')\", false).postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(name),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds multiple new attachment to the collection. Not supported for batching.\r\n     *\r\n     * @param files The collection of files to add\r\n     */\r\n    AttachmentFiles.prototype.addMultiple = function (files) {\r\n        var _this = this;\r\n        // add the files in series so we don't get update conflicts\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles_1, \"add(FileName='\" + file.name + \"')\", false).postCore({\r\n            body: file.content,\r\n        }); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection. Not supported for batching.\r\n     *\r\n     * @param files The collection of files to delete\r\n     */\r\n    AttachmentFiles.prototype.deleteMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).delete(); }); }, Promise.resolve());\r\n    };\r\n    /**\r\n     * Delete multiple attachments from the collection and send to recycle bin. Not supported for batching.\r\n     *\r\n     * @param files The collection of files to be deleted and sent to recycle bin\r\n     */\r\n    AttachmentFiles.prototype.recycleMultiple = function () {\r\n        var _this = this;\r\n        var files = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            files[_i] = arguments[_i];\r\n        }\r\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.getByName(file).recycle(); }); }, Promise.resolve());\r\n    };\r\n    var AttachmentFiles_1;\r\n    AttachmentFiles = AttachmentFiles_1 = __decorate([\r\n        defaultPath(\"AttachmentFiles\")\r\n    ], AttachmentFiles);\r\n    return AttachmentFiles;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single attachment file instance\r\n *\r\n */\r\nvar AttachmentFile = /** @class */ (function (_super) {\r\n    __extends(AttachmentFile, _super);\r\n    function AttachmentFile() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the contents of the file as text\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getText = function () {\r\n        return this.getParsed(new TextParser());\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js\r\n     *\r\n     */\r\n    AttachmentFile.prototype.getBlob = function () {\r\n        return this.getParsed(new BlobParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getBuffer = function () {\r\n        return this.getParsed(new BufferParser());\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\r\n     */\r\n    AttachmentFile.prototype.getJSON = function () {\r\n        return this.getParsed(new JSONParser());\r\n    };\r\n    /**\r\n     * Sets the content of a file. Not supported for batching\r\n     *\r\n     * @param content The value to set for the file contents\r\n     */\r\n    AttachmentFile.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(AttachmentFile, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new AttachmentFile(_this); });\r\n    };\r\n    /**\r\n     * Delete this attachment file and send it to recycle bin\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    AttachmentFile.prototype.recycle = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(AttachmentFile, \"recycleObject\").postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    // /**\r\n    //  * Delete this attachment file\r\n    //  *\r\n    //  * @param eTag Value used in the IF-Match header, by default \"*\"\r\n    //  */\r\n    // public delete(eTag = \"*\"): Promise<void> {\r\n    //     return this.postCore({\r\n    //         headers: {\r\n    //             \"IF-Match\": eTag,\r\n    //             \"X-HTTP-Method\": \"DELETE\",\r\n    //         },\r\n    //     });\r\n    // }\r\n    AttachmentFile.prototype.getParsed = function (parser) {\r\n        return this.clone(AttachmentFile, \"$value\", false).get(parser);\r\n    };\r\n    return AttachmentFile;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes the views available in the current context\r\n *\r\n */\r\nvar Views = /** @class */ (function (_super) {\r\n    __extends(Views, _super);\r\n    function Views() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Views_1 = Views;\r\n    /**\r\n     * Gets a view by guid id\r\n     *\r\n     * @param id The GUID id of the view\r\n     */\r\n    Views.prototype.getById = function (id) {\r\n        var v = new View(this);\r\n        v.concat(\"('\" + id + \"')\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Gets a view by title (case-sensitive)\r\n     *\r\n     * @param title The case-sensitive title of the view\r\n     */\r\n    Views.prototype.getByTitle = function (title) {\r\n        return new View(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new view to the collection\r\n     *\r\n     * @param title The new views's title\r\n     * @param personalView True if this is a personal view, otherwise false, default = false\r\n     * @param additionalSettings Will be passed as part of the view creation body\r\n     */\r\n    Views.prototype.add = function (title, personalView, additionalSettings) {\r\n        var _this = this;\r\n        if (personalView === void 0) { personalView = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var postBody = jsS(Object.assign(metadata(\"SP.View\"), {\r\n            \"PersonalView\": personalView,\r\n            \"Title\": title,\r\n        }, additionalSettings));\r\n        return this.clone(Views_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                view: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    var Views_1;\r\n    Views = Views_1 = __decorate([\r\n        defaultPath(\"views\")\r\n    ], Views);\r\n    return Views;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single View instance\r\n *\r\n */\r\nvar View = /** @class */ (function (_super) {\r\n    __extends(View, _super);\r\n    function View() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Updates this view intance with the supplied properties\r\n         *\r\n         * @param properties A plain object hash of values to update for the view\r\n         */\r\n        _this.update = _this._update(\"SP.View\", function (data) { return ({ data: data, view: _this }); });\r\n        /**\r\n         * Delete this view\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(View.prototype, \"fields\", {\r\n        get: function () {\r\n            return new ViewFields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the list view as HTML.\r\n     *\r\n     */\r\n    View.prototype.renderAsHtml = function () {\r\n        return this.clone(SharePointQueryable, \"renderashtml\").get();\r\n    };\r\n    /**\r\n     * Sets the view schema\r\n     *\r\n     * @param viewXml The view XML to set\r\n     */\r\n    View.prototype.setViewXml = function (viewXml) {\r\n        return this.clone(View, \"SetViewXml\").postCore({\r\n            body: jsS({\r\n                viewXml: viewXml,\r\n            }),\r\n        });\r\n    };\r\n    return View;\r\n}(SharePointQueryableInstance));\r\nvar ViewFields = /** @class */ (function (_super) {\r\n    __extends(ViewFields, _super);\r\n    function ViewFields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ViewFields_1 = ViewFields;\r\n    /**\r\n     * Gets a value that specifies the XML schema that represents the collection.\r\n     */\r\n    ViewFields.prototype.getSchemaXml = function () {\r\n        return this.clone(SharePointQueryable, \"schemaxml\").get();\r\n    };\r\n    /**\r\n     * Adds the field with the specified field internal name or display name to the collection.\r\n     *\r\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\r\n     */\r\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\r\n        return this.clone(ViewFields_1, \"addviewfield('\" + fieldTitleOrInternalName + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the field with the specified field internal name to the specified position in the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\r\n     * @param index The zero-based index of the new position for the field.\r\n     */\r\n    ViewFields.prototype.move = function (fieldInternalName, index) {\r\n        return this.clone(ViewFields_1, \"moveviewfieldto\").postCore({\r\n            body: jsS({ \"field\": fieldInternalName, \"index\": index }),\r\n        });\r\n    };\r\n    /**\r\n     * Removes all the fields from the collection.\r\n     */\r\n    ViewFields.prototype.removeAll = function () {\r\n        return this.clone(ViewFields_1, \"removeallviewfields\").postCore();\r\n    };\r\n    /**\r\n     * Removes the field with the specified field internal name from the collection.\r\n     *\r\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\r\n     */\r\n    ViewFields.prototype.remove = function (fieldInternalName) {\r\n        return this.clone(ViewFields_1, \"removeviewfield('\" + fieldInternalName + \"')\").postCore();\r\n    };\r\n    var ViewFields_1;\r\n    ViewFields = ViewFields_1 = __decorate([\r\n        defaultPath(\"viewfields\")\r\n    ], ViewFields);\r\n    return ViewFields;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Fields = /** @class */ (function (_super) {\r\n    __extends(Fields, _super);\r\n    function Fields() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Fields_1 = Fields;\r\n    /**\r\n     * Gets a field from the collection by id\r\n     *\r\n     * @param id The Id of the list\r\n     */\r\n    Fields.prototype.getById = function (id) {\r\n        var f = new Field(this);\r\n        f.concat(\"('\" + id + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Gets a field from the collection by title\r\n     *\r\n     * @param title The case-sensitive title of the field\r\n     */\r\n    Fields.prototype.getByTitle = function (title) {\r\n        return new Field(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Gets a field from the collection by using internal name or title\r\n     *\r\n     * @param name The case-sensitive internal name or title of the field\r\n     */\r\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\r\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\r\n    };\r\n    /**\r\n     * Creates a field based on the specified schema\r\n     */\r\n    Fields.prototype.createFieldAsXml = function (xml) {\r\n        var _this = this;\r\n        var info;\r\n        if (typeof xml === \"string\") {\r\n            info = { SchemaXml: xml };\r\n        }\r\n        else {\r\n            info = xml;\r\n        }\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.XmlSchemaFieldCreationInformation\"), info),\r\n        });\r\n        return this.clone(Fields_1, \"createfieldasxml\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new field to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param fieldType The new field's type (ex: SP.FieldText)\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.add = function (title, fieldType, properties) {\r\n        var _this = this;\r\n        var postBody = jsS(Object.assign(metadata(fieldType), {\r\n            \"Title\": title,\r\n        }, properties));\r\n        return this.clone(Fields_1, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param maxLength The maximum number of characters allowed in the value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addText = function (title, maxLength, properties) {\r\n        if (maxLength === void 0) { maxLength = 255; }\r\n        var props = {\r\n            FieldTypeKind: 2,\r\n            MaxLength: maxLength,\r\n        };\r\n        return this.add(title, \"SP.FieldText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCalculated to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param formula The formula for the field.\r\n     * @param dateFormat The date and time format that is displayed in the field.\r\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\r\n        if (outputType === void 0) { outputType = FieldTypes.Text; }\r\n        var props = {\r\n            DateFormat: dateFormat,\r\n            FieldTypeKind: 17,\r\n            Formula: formula,\r\n            OutputType: outputType,\r\n        };\r\n        return this.add(title, \"SP.FieldCalculated\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldDateTime to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param displayFormat The format of the date and time that is displayed in the field.\r\n     * @param calendarType Specifies the calendar type of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = DateTimeFieldFormatType.DateOnly; }\r\n        if (calendarType === void 0) { calendarType = CalendarType.Gregorian; }\r\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\r\n        var props = {\r\n            DateTimeCalendarType: calendarType,\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 4,\r\n            FriendlyDisplayFormat: friendlyDisplayFormat,\r\n        };\r\n        return this.add(title, \"SP.FieldDateTime\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldNumber to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\r\n        var props = { FieldTypeKind: 9 };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldNumber\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldCurrency to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param minValue The field's minimum value\r\n     * @param maxValue The field's maximum value\r\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\r\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\r\n        var props = {\r\n            CurrencyLocaleId: currencyLocalId,\r\n            FieldTypeKind: 10,\r\n        };\r\n        if (minValue !== undefined) {\r\n            props = extend({ MinimumValue: minValue }, props);\r\n        }\r\n        if (maxValue !== undefined) {\r\n            props = extend({ MaximumValue: maxValue }, props);\r\n        }\r\n        return this.add(title, \"SP.FieldCurrency\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiLineText to the collection\r\n     *\r\n     * @param title The field title\r\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\r\n     * @param richText Specifies whether the field supports rich formatting.\r\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\r\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\r\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     *\r\n     */\r\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\r\n        if (numberOfLines === void 0) { numberOfLines = 6; }\r\n        if (richText === void 0) { richText = true; }\r\n        if (restrictedMode === void 0) { restrictedMode = false; }\r\n        if (appendOnly === void 0) { appendOnly = false; }\r\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\r\n        var props = {\r\n            AllowHyperlink: allowHyperlink,\r\n            AppendOnly: appendOnly,\r\n            FieldTypeKind: 3,\r\n            NumberOfLines: numberOfLines,\r\n            RestrictedMode: restrictedMode,\r\n            RichText: richText,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiLineText\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldUrl to the collection\r\n     *\r\n     * @param title The field title\r\n     */\r\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\r\n        if (displayFormat === void 0) { displayFormat = UrlFieldFormatType.Hyperlink; }\r\n        var props = {\r\n            DisplayFormat: displayFormat,\r\n            FieldTypeKind: 11,\r\n        };\r\n        return this.add(title, \"SP.FieldUrl\", extend(props, properties));\r\n    };\r\n    /** Adds a user field to the colleciton\r\n    *\r\n    * @param title The new field's title\r\n    * @param selectionMode The selection mode of the field\r\n    * @param selectionGroup Value that specifies the identifier of the SharePoint group whose members can be selected as values of the field\r\n    * @param properties\r\n    */\r\n    Fields.prototype.addUser = function (title, selectionMode, properties) {\r\n        var props = {\r\n            FieldTypeKind: 20,\r\n            SelectionMode: selectionMode,\r\n        };\r\n        return this.add(title, \"SP.FieldUser\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a SP.FieldLookup to the collection\r\n     *\r\n     * @param title The new field's title\r\n     * @param lookupListId The guid id of the list where the source of the lookup is found\r\n     * @param lookupFieldName The internal name of the field in the source list\r\n     * @param properties Set of additional properties to set on the new field\r\n     */\r\n    Fields.prototype.addLookup = function (title, lookupListId, lookupFieldName, properties) {\r\n        var _this = this;\r\n        var props = extend({\r\n            FieldTypeKind: 7,\r\n            LookupFieldName: lookupFieldName,\r\n            LookupListId: lookupListId,\r\n            Title: title,\r\n        }, properties);\r\n        var postBody = jsS({\r\n            \"parameters\": extend(metadata(\"SP.FieldCreationInformation\"), props),\r\n        });\r\n        return this.clone(Fields_1, \"addfield\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param format The display format of the available options for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addChoice = function (title, choices, format, fillIn, properties) {\r\n        if (format === void 0) { format = ChoiceFieldFormatType.Dropdown; }\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            EditFormat: format,\r\n            FieldTypeKind: 6,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldMultiChoice to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param choices The choices for the field.\r\n     * @param fillIn Specifies whether the field allows fill-in values.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addMultiChoice = function (title, choices, fillIn, properties) {\r\n        var props = {\r\n            Choices: {\r\n                results: choices,\r\n            },\r\n            FieldTypeKind: 15,\r\n            FillInChoice: fillIn,\r\n        };\r\n        return this.add(title, \"SP.FieldMultiChoice\", extend(props, properties));\r\n    };\r\n    /**\r\n     * Adds a new SP.FieldBoolean to the collection\r\n     *\r\n     * @param title The field title.\r\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\r\n     */\r\n    Fields.prototype.addBoolean = function (title, properties) {\r\n        var props = {\r\n            FieldTypeKind: 8,\r\n        };\r\n        return this.add(title, \"SP.Field\", extend(props, properties));\r\n    };\r\n    /**\r\n    * Creates a secondary (dependent) lookup field, based on the Id of the primary lookup field.\r\n    *\r\n    * @param displayName The display name of the new field.\r\n    * @param primaryLookupFieldId The guid of the primary Lookup Field.\r\n    * @param showField Which field to show from the lookup list.\r\n    */\r\n    Fields.prototype.addDependentLookupField = function (displayName, primaryLookupFieldId, showField) {\r\n        var _this = this;\r\n        return this.clone(Fields_1, \"adddependentlookupfield(displayName='\" + displayName + \"', primarylookupfieldid='\" + primaryLookupFieldId + \"', showfield='\" + showField + \"')\")\r\n            .postCore()\r\n            .then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    var Fields_1;\r\n    Fields = Fields_1 = __decorate([\r\n        defaultPath(\"fields\")\r\n    ], Fields);\r\n    return Fields;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Field instance\r\n *\r\n */\r\nvar Field = /** @class */ (function (_super) {\r\n    __extends(Field, _super);\r\n    function Field() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this fields\r\n         *\r\n         */\r\n        _this.delete = _this._delete;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates this field intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param fieldType The type value, required to update child field type properties\r\n     */\r\n    Field.prototype.update = function (properties, fieldType) {\r\n        var _this = this;\r\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\r\n        var postBody = jsS(extend(metadata(fieldType), properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                field: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInDisplayForm property for this field.\r\n     */\r\n    Field.prototype.setShowInDisplayForm = function (show) {\r\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInEditForm property for this field.\r\n     */\r\n    Field.prototype.setShowInEditForm = function (show) {\r\n        return this.clone(Field, \"setshowineditform(\" + show + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the value of the ShowInNewForm property for this field.\r\n     */\r\n    Field.prototype.setShowInNewForm = function (show) {\r\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\").postCore();\r\n    };\r\n    return Field;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of Field objects\r\n *\r\n */\r\nvar Forms = /** @class */ (function (_super) {\r\n    __extends(Forms, _super);\r\n    function Forms() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a form by id\r\n     *\r\n     * @param id The guid id of the item to retrieve\r\n     */\r\n    Forms.prototype.getById = function (id) {\r\n        var i = new Form(this);\r\n        i.concat(\"('\" + id + \"')\");\r\n        return i;\r\n    };\r\n    Forms = __decorate([\r\n        defaultPath(\"forms\")\r\n    ], Forms);\r\n    return Forms;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single of Form instance\r\n *\r\n */\r\nvar Form = /** @class */ (function (_super) {\r\n    __extends(Form, _super);\r\n    function Form() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return Form;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of webhook subscriptions\r\n *\r\n */\r\nvar Subscriptions = /** @class */ (function (_super) {\r\n    __extends(Subscriptions, _super);\r\n    function Subscriptions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Returns all the webhook subscriptions or the specified webhook subscription\r\n     *\r\n     * @param subscriptionId The id of a specific webhook subscription to retrieve, omit to retrieve all the webhook subscriptions\r\n     */\r\n    Subscriptions.prototype.getById = function (subscriptionId) {\r\n        var s = new Subscription(this);\r\n        s.concat(\"('\" + subscriptionId + \"')\");\r\n        return s;\r\n    };\r\n    /**\r\n     * Creates a new webhook subscription\r\n     *\r\n     * @param notificationUrl The url to receive the notifications\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     * @param clientState A client specific string (defaults to pnp-js-core-subscription when omitted)\r\n     */\r\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\r\n            \"expirationDateTime\": expirationDate,\r\n            \"notificationUrl\": notificationUrl,\r\n            \"resource\": this.toUrl(),\r\n        });\r\n        return this.postCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\r\n            return { data: result, subscription: _this.getById(result.id) };\r\n        });\r\n    };\r\n    Subscriptions = __decorate([\r\n        defaultPath(\"subscriptions\")\r\n    ], Subscriptions);\r\n    return Subscriptions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single webhook subscription instance\r\n *\r\n */\r\nvar Subscription = /** @class */ (function (_super) {\r\n    __extends(Subscription, _super);\r\n    function Subscription() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Renews this webhook subscription\r\n     *\r\n     * @param expirationDate The date and time to expire the subscription in the form YYYY-MM-ddTHH:mm:ss+00:00 (maximum of 6 months)\r\n     */\r\n    Subscription.prototype.update = function (expirationDate) {\r\n        var _this = this;\r\n        var postBody = jsS({\r\n            \"expirationDateTime\": expirationDate,\r\n        });\r\n        return this.patchCore({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\r\n            return { data: data, subscription: _this };\r\n        });\r\n    };\r\n    /**\r\n     * Removes this webhook subscription\r\n     *\r\n     */\r\n    Subscription.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return Subscription;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of user custom actions\r\n *\r\n */\r\nvar UserCustomActions = /** @class */ (function (_super) {\r\n    __extends(UserCustomActions, _super);\r\n    function UserCustomActions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    UserCustomActions_1 = UserCustomActions;\r\n    /**\r\n     * Returns the user custom action with the specified id\r\n     *\r\n     * @param id The GUID id of the user custom action to retrieve\r\n     */\r\n    UserCustomActions.prototype.getById = function (id) {\r\n        var uca = new UserCustomAction(this);\r\n        uca.concat(\"('\" + id + \"')\");\r\n        return uca;\r\n    };\r\n    /**\r\n     * Creates a user custom action\r\n     *\r\n     * @param properties The information object of property names and values which define the new user custom action\r\n     *\r\n     */\r\n    UserCustomActions.prototype.add = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\r\n        return this.postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                action: _this.getById(data.Id),\r\n                data: data,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes all user custom actions in the collection\r\n     *\r\n     */\r\n    UserCustomActions.prototype.clear = function () {\r\n        return this.clone(UserCustomActions_1, \"clear\").postCore();\r\n    };\r\n    var UserCustomActions_1;\r\n    UserCustomActions = UserCustomActions_1 = __decorate([\r\n        defaultPath(\"usercustomactions\")\r\n    ], UserCustomActions);\r\n    return UserCustomActions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single user custom action\r\n *\r\n */\r\nvar UserCustomAction = /** @class */ (function (_super) {\r\n    __extends(UserCustomAction, _super);\r\n    function UserCustomAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Updates this user custom action with the supplied properties\r\n        *\r\n        * @param properties An information object of property names and values to update for this user custom action\r\n        */\r\n        _this.update = _this._update(\"SP.UserCustomAction\", function (data) { return ({ data: data, action: _this }); });\r\n        return _this;\r\n    }\r\n    /**\r\n    * Removes this user custom action\r\n    *\r\n    */\r\n    UserCustomAction.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    return UserCustomAction;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Lists = /** @class */ (function (_super) {\r\n    __extends(Lists, _super);\r\n    function Lists() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Lists_1 = Lists;\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the list (GUID)\r\n     */\r\n    Lists.prototype.getById = function (id) {\r\n        var list = new List(this);\r\n        list.concat(\"('\" + id + \"')\");\r\n        return list;\r\n    };\r\n    /**\r\n     * Gets a list from the collection by title\r\n     *\r\n     * @param title The title of the list\r\n     */\r\n    Lists.prototype.getByTitle = function (title) {\r\n        return new List(this, \"getByTitle('\" + title + \"')\");\r\n    };\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body\r\n     */\r\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        var addSettings = extend({\r\n            \"AllowContentTypes\": enableContentTypes,\r\n            \"BaseTemplate\": template,\r\n            \"ContentTypesEnabled\": enableContentTypes,\r\n            \"Description\": description,\r\n            \"Title\": title,\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, additionalSettings);\r\n        return this.postCore({ body: jsS(addSettings) }).then(function (data) {\r\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\r\n        });\r\n    };\r\n    /**\r\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\r\n     *\r\n     * @param title The new list's title\r\n     * @param description The new list's description\r\n     * @param template The list template value\r\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\r\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\r\n     */\r\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\r\n        var _this = this;\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = 100; }\r\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\r\n        if (additionalSettings === void 0) { additionalSettings = {}; }\r\n        if (this.hasBatch) {\r\n            throw Error(\"The ensure list method is not supported for use in a batch.\");\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            var addOrUpdateSettings = extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\r\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\r\n            list.get().then(function (_) {\r\n                list.update(addOrUpdateSettings).then(function (d) {\r\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            }).catch(function (_) {\r\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\r\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\r\n                }).catch(function (e) { return reject(e); });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\r\n     */\r\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresiteassetslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list that is the default location for wiki pages.\r\n     */\r\n    Lists.prototype.ensureSitePagesLibrary = function () {\r\n        return this.clone(Lists_1, \"ensuresitepageslibrary\").postCore().then(function (json) {\r\n            return new List(odataUrlFrom(json));\r\n        });\r\n    };\r\n    var Lists_1;\r\n    Lists = Lists_1 = __decorate([\r\n        defaultPath(\"lists\")\r\n    ], Lists);\r\n    return Lists;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single List instance\r\n *\r\n */\r\nvar List = /** @class */ (function (_super) {\r\n    __extends(List, _super);\r\n    function List() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(List.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"items\", {\r\n        /**\r\n         * Gets the items in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Items(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"views\", {\r\n        /**\r\n         * Gets the views in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Views(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"forms\", {\r\n        /**\r\n         * Gets the forms in this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Forms(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"defaultView\", {\r\n        /**\r\n         * Gets the default view of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new View(this, \"DefaultView\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Get all custom actions on a site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\r\n        /**\r\n         * Gets the event receivers attached to this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"EventReceivers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"relatedFields\", {\r\n        /**\r\n         * Gets the related fields of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"getRelatedFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\r\n        /**\r\n         * Gets the IRM settings for this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"InformationRightsManagementSettings\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"subscriptions\", {\r\n        /**\r\n         * Gets the webhook subscriptions of this list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Subscriptions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(List.prototype, \"rootFolder\", {\r\n        /**\r\n         * The root folder of the list\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a view by view guid id\r\n     *\r\n     */\r\n    List.prototype.getView = function (viewId) {\r\n        return new View(this, \"getView('\" + viewId + \"')\");\r\n    };\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    /* tslint:disable no-string-literal */\r\n    List.prototype.update = function (properties, eTag) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.List\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            var retList = _this;\r\n            if (hOP(properties, \"Title\")) {\r\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\r\n            }\r\n            return {\r\n                data: data,\r\n                list: retList,\r\n            };\r\n        });\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * Delete this list\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    List.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\r\n     */\r\n    List.prototype.getChanges = function (query) {\r\n        return this.clone(List, \"getchanges\").postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of items from the list based on the specified query.\r\n     *\r\n     * @param CamlQuery The Query schema of Collaborative Application Markup\r\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\r\n     * to define queries against list data.\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\r\n     *\r\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\r\n     * the Entry or Collection of Entries identified by the Resource Path\r\n     * section of the URI must be represented inline (i.e. eagerly loaded).\r\n     * see:\r\n     *\r\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\r\n     *\r\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\r\n     */\r\n    List.prototype.getItemsByCAMLQuery = function (query) {\r\n        var expands = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            expands[_i - 1] = arguments[_i];\r\n        }\r\n        var q = this.clone(List, \"getitems\");\r\n        return q.expand.apply(q, expands).postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\r\n        });\r\n    };\r\n    /**\r\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\r\n     */\r\n    List.prototype.getListItemChangesSinceToken = function (query) {\r\n        return this.clone(List, \"getlistitemchangessincetoken\").postCore({\r\n            body: jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\r\n        }, { parse: function (r) { return r.text(); } });\r\n    };\r\n    /**\r\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    List.prototype.recycle = function () {\r\n        return this.clone(List, \"recycle\").postCore().then(function (data) {\r\n            if (hOP(data, \"Recycle\")) {\r\n                return data.Recycle;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Renders list data based on the view xml provided\r\n     */\r\n    List.prototype.renderListData = function (viewXml) {\r\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\r\n        q.query.set(\"@viewXml\", \"'\" + viewXml + \"'\");\r\n        return q.postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListData\") ? data.RenderListData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Returns the data for the specified query view\r\n     *\r\n     * @param parameters The parameters to be used to render list data as JSON string.\r\n     * @param overrideParameters The parameters that are used to override and extend the regular SPRenderListDataParameters.\r\n     */\r\n    List.prototype.renderListDataAsStream = function (parameters, overrideParameters) {\r\n        if (overrideParameters === void 0) { overrideParameters = null; }\r\n        var postBody = {\r\n            overrideParameters: extend(metadata(\"SP.RenderListDataOverrideParameters\"), overrideParameters),\r\n            parameters: extend(metadata(\"SP.RenderListDataParameters\"), parameters),\r\n        };\r\n        return this.clone(List, \"RenderListDataAsStream\", true).postCore({\r\n            body: jsS(postBody),\r\n        });\r\n    };\r\n    /**\r\n     * Gets the field values and field schema attributes for a list item.\r\n     */\r\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\r\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\").postCore().then(function (data) {\r\n            // data will be a string, so we parse it again\r\n            return JSON.parse(hOP(data, \"RenderListFormData\") ? data.RenderListFormData : data);\r\n        });\r\n    };\r\n    /**\r\n     * Reserves a list item ID for idempotent list item creation.\r\n     */\r\n    List.prototype.reserveListItemId = function () {\r\n        return this.clone(List, \"reservelistitemid\").postCore().then(function (data) {\r\n            if (hOP(data, \"ReserveListItemId\")) {\r\n                return data.ReserveListItemId;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\r\n     *\r\n     */\r\n    List.prototype.getListItemEntityTypeFullName = function () {\r\n        return this.clone(List, null, false).select(\"ListItemEntityTypeFullName\").get().then(function (o) { return o.ListItemEntityTypeFullName; });\r\n    };\r\n    /**\r\n     * Creates an item using path (in a folder), validates and sets its field values.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param decodedUrl Path decoded url; folder's server relative path.\r\n     * @param bNewDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     * @param checkInComment Optional check in comment.\r\n     */\r\n    List.prototype.addValidateUpdateItemUsingPath = function (formValues, decodedUrl, bNewDocumentUpdate, checkInComment) {\r\n        if (bNewDocumentUpdate === void 0) { bNewDocumentUpdate = false; }\r\n        return this.clone(List, \"AddValidateUpdateItemUsingPath()\").postCore({\r\n            body: jsS({\r\n                bNewDocumentUpdate: bNewDocumentUpdate,\r\n                checkInComment: checkInComment,\r\n                formValues: formValues,\r\n                listItemCreateInfo: {\r\n                    FolderPath: {\r\n                        DecodedUrl: decodedUrl,\r\n                        __metadata: { type: \"SP.ResourcePath\" },\r\n                    },\r\n                    __metadata: { type: \"SP.ListItemCreationInformationUsingPath\" },\r\n                },\r\n            }),\r\n        }).then(function (res) {\r\n            if (typeof res.AddValidateUpdateItemUsingPath !== \"undefined\") {\r\n                return res.AddValidateUpdateItemUsingPath.results;\r\n            }\r\n            return res;\r\n        });\r\n    };\r\n    return List;\r\n}(SharePointQueryableSecurable));\n\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Comments = /** @class */ (function (_super) {\r\n    __extends(Comments, _super);\r\n    function Comments() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Comments_1 = Comments;\r\n    /**\r\n     * Adds a new comment to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Comments.prototype.add = function (info) {\r\n        var _this = this;\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Comments_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(_this.getById(d.id), d);\r\n        });\r\n    };\r\n    /**\r\n     * Gets a comment by id\r\n     *\r\n     * @param id Id of the comment to load\r\n     */\r\n    Comments.prototype.getById = function (id) {\r\n        var c = new Comment(this);\r\n        c.concat(\"(\" + id + \")\");\r\n        return c;\r\n    };\r\n    /**\r\n     * Deletes all the comments in this collection\r\n     */\r\n    Comments.prototype.clear = function () {\r\n        return this.clone(Comments_1, \"DeleteAll\").postCore();\r\n    };\r\n    var Comments_1;\r\n    Comments = Comments_1 = __decorate([\r\n        defaultPath(\"comments\")\r\n    ], Comments);\r\n    return Comments;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents a comment\r\n */\r\nvar Comment = /** @class */ (function (_super) {\r\n    __extends(Comment, _super);\r\n    function Comment() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Comment.prototype, \"replies\", {\r\n        get: function () {\r\n            return new Replies(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Likes the comment as the current user\r\n     */\r\n    Comment.prototype.like = function () {\r\n        return this.clone(Comment, \"Like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes the comment as the current user\r\n     */\r\n    Comment.prototype.unlike = function () {\r\n        return this.clone(Comment, \"Unlike\").postCore();\r\n    };\r\n    /**\r\n     * Deletes this comment\r\n     */\r\n    Comment.prototype.delete = function () {\r\n        return this.clone(Comment, \"DeleteComment\").postCore();\r\n    };\r\n    return Comment;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Represents a Collection of comments\r\n */\r\nvar Replies = /** @class */ (function (_super) {\r\n    __extends(Replies, _super);\r\n    function Replies() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Replies_1 = Replies;\r\n    /**\r\n     * Adds a new reply to this collection\r\n     *\r\n     * @param info Comment information to add\r\n     */\r\n    Replies.prototype.add = function (info) {\r\n        if (typeof info === \"string\") {\r\n            info = { text: info };\r\n        }\r\n        var postBody = jsS(extend(metadata(\"Microsoft.SharePoint.Comments.comment\"), info));\r\n        return this.clone(Replies_1, null).postCore({ body: postBody }).then(function (d) {\r\n            return extend(new Comment(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    var Replies_1;\r\n    Replies = Replies_1 = __decorate([\r\n        defaultPath(\"replies\")\r\n    ], Replies);\r\n    return Replies;\r\n}(SharePointQueryableCollection));\n\n/**\r\n * Describes a collection of Item objects\r\n *\r\n */\r\nvar Items = /** @class */ (function (_super) {\r\n    __extends(Items, _super);\r\n    function Items() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Items_1 = Items;\r\n    /**\r\n    * Gets an Item by id\r\n    *\r\n    * @param id The integer id of the item to retrieve\r\n    */\r\n    Items.prototype.getById = function (id) {\r\n        var i = new Item(this);\r\n        i.concat(\"(\" + id + \")\");\r\n        return i;\r\n    };\r\n    /**\r\n     * Gets BCS Item by string id\r\n     *\r\n     * @param stringId The string id of the BCS item to retrieve\r\n     */\r\n    Items.prototype.getItemByStringId = function (stringId) {\r\n        // creates an item with the parent list path and append out method call\r\n        return new Item(this.parentUrl, \"getItemByStringId('\" + stringId + \"')\");\r\n    };\r\n    /**\r\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\r\n     *\r\n     * @param skip The starting id where the page should start, use with top to specify pages\r\n     * @param reverse It true the PagedPrev=true parameter is added allowing backwards navigation in the collection\r\n     */\r\n    Items.prototype.skip = function (skip, reverse) {\r\n        if (reverse === void 0) { reverse = false; }\r\n        if (reverse) {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&PagedPrev=TRUE&p_ID=\" + skip));\r\n        }\r\n        else {\r\n            this.query.set(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets a collection designed to aid in paging through data\r\n     *\r\n     */\r\n    Items.prototype.getPaged = function () {\r\n        return this.get(new PagedItemCollectionParser(this));\r\n    };\r\n    /**\r\n     * Gets all the items in a list, regardless of count. Does not support batching or caching\r\n     *\r\n     *  @param requestSize Number of items to return in each request (Default: 2000)\r\n     *  @param acceptHeader Allows for setting the value of the Accept header for SP 2013 support\r\n     */\r\n    Items.prototype.getAll = function (requestSize, acceptHeader) {\r\n        if (requestSize === void 0) { requestSize = 2000; }\r\n        if (acceptHeader === void 0) { acceptHeader = \"application/json;odata=nometadata\"; }\r\n        Logger.write(\"Calling items.getAll should be done sparingly. Ensure this is the correct choice. If you are unsure, it is not.\", 2 /* Warning */);\r\n        // this will be used for the actual query\r\n        // and we set no metadata here to try and reduce traffic\r\n        var items = new Items_1(this, \"\").top(requestSize).configure({\r\n            headers: {\r\n                \"Accept\": acceptHeader,\r\n            },\r\n        });\r\n        // let's copy over the odata query params that can be applied\r\n        // $top - allow setting the page size this way (override what we did above)\r\n        // $select - allow picking the return fields (good behavior)\r\n        // $filter - allow setting a filter, though this may fail due for large lists\r\n        this.query.forEach(function (v, k) {\r\n            if (/^\\$select|filter|top|expand$/i.test(k)) {\r\n                items.query.set(k, v);\r\n            }\r\n        });\r\n        // give back the promise\r\n        return new Promise(function (resolve, reject) {\r\n            // this will eventually hold the items we return\r\n            var itemsCollector = [];\r\n            // action that will gather up our results recursively\r\n            var gatherer = function (last) {\r\n                // collect that set of results\r\n                [].push.apply(itemsCollector, last.results);\r\n                // if we have more, repeat - otherwise resolve with the collected items\r\n                if (last.hasNext) {\r\n                    last.getNext().then(gatherer).catch(reject);\r\n                }\r\n                else {\r\n                    resolve(itemsCollector);\r\n                }\r\n            };\r\n            // start the cycle\r\n            items.getPaged().then(gatherer).catch(reject);\r\n        });\r\n    };\r\n    /**\r\n     * Adds a new item to the collection\r\n     *\r\n     * @param properties The new items's properties\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (properties === void 0) { properties = {}; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        var removeDependency = this.addBatchDependency();\r\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n            var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n            var promise = _this.clone(Items_1, \"\").postCore({ body: postBody }).then(function (data) {\r\n                return {\r\n                    data: data,\r\n                    item: _this.getById(data.Id),\r\n                };\r\n            });\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.getParent(List).getListItemEntityTypeFullName();\r\n    };\r\n    var Items_1;\r\n    Items = Items_1 = __decorate([\r\n        defaultPath(\"items\")\r\n    ], Items);\r\n    return Items;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Descrines a single Item instance\r\n *\r\n */\r\nvar Item = /** @class */ (function (_super) {\r\n    __extends(Item, _super);\r\n    function Item() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Delete this item\r\n         *\r\n         * @param eTag Value used in the IF-Match header, by default \"*\"\r\n         */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\r\n        /**\r\n         * Gets the set of attachments for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new AttachmentFiles(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"contentType\", {\r\n        /**\r\n         * Gets the content type for this item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentType(this, \"ContentType\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"comments\", {\r\n        /**\r\n         * Gets the collection of comments associated with this list item\r\n         */\r\n        get: function () {\r\n            return new Comments(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\r\n        /**\r\n         * Gets the effective base permissions for the item\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissions\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\r\n        /**\r\n         * Gets the effective base permissions for the item in a UI context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryable(this, \"EffectiveBasePermissionsForUI\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\r\n        /**\r\n         * Gets the field values for this list item in their HTML representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsHTML\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\r\n        /**\r\n         * Gets the field values for this list item in their text representation\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesAsText\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\r\n        /**\r\n         * Gets the field values for this list item for use in editing controls\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"FieldValuesForEdit\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"folder\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"folder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"file\", {\r\n        /**\r\n         * Gets the folder associated with this list item (if this item represents a folder)\r\n         *\r\n         */\r\n        get: function () {\r\n            return new File(this, \"file\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"versions\", {\r\n        /**\r\n         * Gets the collection of versions associated with this item\r\n         */\r\n        get: function () {\r\n            return new ItemVersions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Item.prototype, \"list\", {\r\n        get: function () {\r\n            return this.getParent(List, this.parentUrl.substr(0, this.parentUrl.lastIndexOf(\"/\")));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates this list intance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the list\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     * @param listItemEntityTypeFullName The type name of the list's entities\r\n     */\r\n    Item.prototype.update = function (properties, eTag, listItemEntityTypeFullName) {\r\n        var _this = this;\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\r\n        return new Promise(function (resolve, reject) {\r\n            var removeDependency = _this.addBatchDependency();\r\n            return _this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\r\n                var postBody = jsS(extend(metadata(listItemEntityType), properties));\r\n                removeDependency();\r\n                return _this.postCore({\r\n                    body: postBody,\r\n                    headers: {\r\n                        \"IF-Match\": eTag,\r\n                        \"X-HTTP-Method\": \"MERGE\",\r\n                    },\r\n                }, new ItemUpdatedParser()).then(function (data) {\r\n                    resolve({\r\n                        data: data,\r\n                        item: _this,\r\n                    });\r\n                });\r\n            }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the collection of people who have liked this item\r\n     */\r\n    Item.prototype.getLikedBy = function () {\r\n        return this.clone(Item, \"likedBy\").postCore();\r\n    };\r\n    /**\r\n     * Likes this item as the current user\r\n     */\r\n    Item.prototype.like = function () {\r\n        return this.clone(Item, \"like\").postCore();\r\n    };\r\n    /**\r\n     * Unlikes this item as the current user\r\n     */\r\n    Item.prototype.unlike = function () {\r\n        return this.clone(Item, \"unlike\").postCore();\r\n    };\r\n    /**\r\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     */\r\n    Item.prototype.recycle = function () {\r\n        return this.clone(Item, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Gets a string representation of the full URL to the WOPI frame.\r\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\r\n     *\r\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\r\n     */\r\n    Item.prototype.getWopiFrameUrl = function (action) {\r\n        if (action === void 0) { action = 0; }\r\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\");\r\n        i.query.set(\"@action\", action);\r\n        return i.postCore().then(function (data) {\r\n            // handle verbose mode\r\n            if (hOP(data, \"GetWOPIFrameUrl\")) {\r\n                return data.GetWOPIFrameUrl;\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n    /**\r\n     * Validates and sets the values of the specified collection of fields for the list item.\r\n     *\r\n     * @param formValues The fields to change and their new values.\r\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\r\n     */\r\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\r\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\r\n        return this.clone(Item, \"validateupdatelistitem\").postCore({\r\n            body: jsS({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\r\n        });\r\n    };\r\n    /**\r\n     * Get the like by information for a modern site page\r\n     */\r\n    Item.prototype.getLikedByInformation = function () {\r\n        return this.clone(Item, \"likedByInformation\").expand(\"likedby\").getCore();\r\n    };\r\n    /**\r\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\r\n     *\r\n     * @param candidatelistItemEntityTypeFullName The potential type name\r\n     */\r\n    Item.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\r\n        return candidatelistItemEntityTypeFullName ?\r\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\r\n            this.list.getListItemEntityTypeFullName();\r\n    };\r\n    return Item;\r\n}(SharePointQueryableShareableItem));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar ItemVersions = /** @class */ (function (_super) {\r\n    __extends(ItemVersions, _super);\r\n    function ItemVersions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    ItemVersions.prototype.getById = function (versionId) {\r\n        var v = new ItemVersion(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    ItemVersions = __decorate([\r\n        defaultPath(\"versions\")\r\n    ], ItemVersions);\r\n    return ItemVersions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar ItemVersion = /** @class */ (function (_super) {\r\n    __extends(ItemVersion, _super);\r\n    function ItemVersion() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n    }\r\n    return ItemVersion;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Provides paging functionality for list items\r\n */\r\nvar PagedItemCollection = /** @class */ (function () {\r\n    function PagedItemCollection(parent, nextUrl, results) {\r\n        this.parent = parent;\r\n        this.nextUrl = nextUrl;\r\n        this.results = results;\r\n    }\r\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\r\n        /**\r\n         * If true there are more results available in the set, otherwise there are not\r\n         */\r\n        get: function () {\r\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the next set of results, or resolves to null if no results are available\r\n     */\r\n    PagedItemCollection.prototype.getNext = function () {\r\n        if (this.hasNext) {\r\n            var items = new Items(this.nextUrl, null).configureFrom(this.parent);\r\n            return items.getPaged();\r\n        }\r\n        return new Promise(function (r) { return r(null); });\r\n    };\r\n    return PagedItemCollection;\r\n}());\r\nvar PagedItemCollectionParser = /** @class */ (function (_super) {\r\n    __extends(PagedItemCollectionParser, _super);\r\n    function PagedItemCollectionParser(_parent) {\r\n        var _this = _super.call(this) || this;\r\n        _this._parent = _parent;\r\n        return _this;\r\n    }\r\n    PagedItemCollectionParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                r.json().then(function (json) {\r\n                    var nextUrl = hOP(json, \"d\") && hOP(json.d, \"__next\") ? json.d.__next : json[\"odata.nextLink\"];\r\n                    resolve(new PagedItemCollection(_this._parent, nextUrl, _this.parseODataJSON(json)));\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return PagedItemCollectionParser;\r\n}(ODataParserBase));\r\nvar ItemUpdatedParser = /** @class */ (function (_super) {\r\n    __extends(ItemUpdatedParser, _super);\r\n    function ItemUpdatedParser() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ItemUpdatedParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (_this.handleError(r, reject)) {\r\n                resolve({\r\n                    \"odata.etag\": r.headers.get(\"etag\"),\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return ItemUpdatedParser;\r\n}(ODataParserBase));\n\n/**\r\n * Describes a collection of File objects\r\n *\r\n */\r\nvar Files = /** @class */ (function (_super) {\r\n    __extends(Files, _super);\r\n    function Files() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Files_1 = Files;\r\n    /**\r\n     * Gets a File by filename\r\n     *\r\n     * @param name The name of the file, including extension.\r\n     */\r\n    Files.prototype.getByName = function (name) {\r\n        var f = new File(this);\r\n        f.concat(\"('\" + name + \"')\");\r\n        return f;\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The file contents blob.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.add = function (url, content, shouldOverWrite) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return new Files_1(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\r\n            .postCore({\r\n            body: content,\r\n        }).then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(url),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Uploads a file. Not supported for batching\r\n     *\r\n     * @param url The folder-relative url of the file.\r\n     * @param content The Blob file content to add\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     * @returns The new File and the raw response.\r\n     */\r\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\r\n        var _this = this;\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        var adder = this.clone(Files_1, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\", false);\r\n        return adder.postCore()\r\n            .then(function () { return _this.getByName(url); })\r\n            .then(function (file) { return file.setContentChunked(content, progress, chunkSize); });\r\n    };\r\n    /**\r\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\r\n     *\r\n     * @param fileUrl The server-relative url where you want to save the file.\r\n     * @param templateFileType The type of use to create the file.\r\n     * @returns The template file that was added and the raw response.\r\n     */\r\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\r\n        var _this = this;\r\n        return this.clone(Files_1, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\", false)\r\n            .postCore().then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: _this.getByName(fileUrl),\r\n            };\r\n        });\r\n    };\r\n    var Files_1;\r\n    Files = Files_1 = __decorate([\r\n        defaultPath(\"files\")\r\n    ], Files);\r\n    return Files;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single File instance\r\n *\r\n */\r\nvar File = /** @class */ (function (_super) {\r\n    __extends(File, _super);\r\n    function File() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\r\n        /**\r\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableInstance(this, \"listItemAllFields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(File.prototype, \"versions\", {\r\n        /**\r\n         * Gets a collection of versions\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Versions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Approves the file submitted for content approval with the specified comment.\r\n     * Only documents in lists that are enabled for content approval can be approved.\r\n     *\r\n     * @param comment The comment for the approval.\r\n     */\r\n    File.prototype.approve = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        return this.clone(File, \"approve(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\r\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\r\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     */\r\n    File.prototype.cancelUpload = function (uploadId) {\r\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).postCore();\r\n    };\r\n    /**\r\n     * Checks the file in to a document library based on the check-in type.\r\n     *\r\n     * @param comment A comment for the check-in. Its length must be <= 1023.\r\n     * @param checkinType The check-in type for the file.\r\n     */\r\n    File.prototype.checkin = function (comment, checkinType) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\").postCore();\r\n    };\r\n    /**\r\n     * Checks out the file from a document library.\r\n     */\r\n    File.prototype.checkout = function () {\r\n        return this.clone(File, \"checkout\").postCore();\r\n    };\r\n    /**\r\n     * Copies the file to the destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to copy to.\r\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\r\n     */\r\n    File.prototype.copyTo = function (url, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\").postCore();\r\n    };\r\n    /**\r\n     * Delete this file.\r\n     *\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    File.prototype.delete = function (eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.clone(File, null).postCore({\r\n            headers: {\r\n                \"IF-Match\": eTag,\r\n                \"X-HTTP-Method\": \"DELETE\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Denies approval for a file that was submitted for content approval.\r\n     * Only documents in lists that are enabled for content approval can be denied.\r\n     *\r\n     * @param comment The comment for the denial.\r\n     */\r\n    File.prototype.deny = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"deny(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\r\n     * An exception is thrown if the file is not an ASPX page.\r\n     *\r\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\r\n     */\r\n    File.prototype.getLimitedWebPartManager = function (scope) {\r\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\r\n        return new LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\r\n    };\r\n    /**\r\n     * Moves the file to the specified destination url.\r\n     *\r\n     * @param url The absolute url or server relative url of the destination file path to move to.\r\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\r\n     */\r\n    File.prototype.moveTo = function (url, moveOperations) {\r\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\r\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\").postCore();\r\n    };\r\n    /**\r\n     * Submits the file for content approval with the specified comment.\r\n     *\r\n     * @param comment The comment for the published file. Its length must be <= 1023.\r\n     */\r\n    File.prototype.publish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"publish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\r\n     *\r\n     * @returns The GUID of the recycled file.\r\n     */\r\n    File.prototype.recycle = function () {\r\n        return this.clone(File, \"recycle\").postCore();\r\n    };\r\n    /**\r\n     * Reverts an existing checkout for the file.\r\n     *\r\n     */\r\n    File.prototype.undoCheckout = function () {\r\n        return this.clone(File, \"undoCheckout\").postCore();\r\n    };\r\n    /**\r\n     * Removes the file from content approval or unpublish a major version.\r\n     *\r\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\r\n     */\r\n    File.prototype.unpublish = function (comment) {\r\n        if (comment === void 0) { comment = \"\"; }\r\n        if (comment.length > 1023) {\r\n            throw Error(\"The maximum comment length is 1023 characters.\");\r\n        }\r\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the contents of the file as text. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getText = function () {\r\n        return this.clone(File, \"$value\", false).get(new TextParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\r\n     *\r\n     */\r\n    File.prototype.getBlob = function () {\r\n        return this.clone(File, \"$value\", false).get(new BlobParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getBuffer = function () {\r\n        return this.clone(File, \"$value\", false).get(new BufferParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\r\n     */\r\n    File.prototype.getJSON = function () {\r\n        return this.clone(File, \"$value\", false).get(new JSONParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\r\n    };\r\n    /**\r\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\r\n     *\r\n     * @param content The file content\r\n     *\r\n     */\r\n    File.prototype.setContent = function (content) {\r\n        var _this = this;\r\n        return this.clone(File, \"$value\", false).postCore({\r\n            body: content,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"PUT\",\r\n            },\r\n        }).then(function (_) { return new File(_this); });\r\n    };\r\n    /**\r\n     * Gets the associated list item for this folder, loading the default properties\r\n     */\r\n    File.prototype.getItem = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        var q = this.listItemAllFields;\r\n        return q.select.apply(q, selects).get().then(function (d) {\r\n            return extend(new Item(odataUrlFrom(d)), d);\r\n        });\r\n    };\r\n    /**\r\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\r\n     *\r\n     * @param file The file to upload\r\n     * @param progress A callback function which can be used to track the progress of the upload\r\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\r\n     */\r\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\r\n        var _this = this;\r\n        if (chunkSize === void 0) { chunkSize = 10485760; }\r\n        if (progress === undefined) {\r\n            progress = function () { return null; };\r\n        }\r\n        var fileSize = file.size;\r\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\r\n        var uploadId = getGUID();\r\n        // start the chain with the first fragment\r\n        progress({ uploadId: uploadId, blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\r\n        var chain = this.startUpload(uploadId, file.slice(0, chunkSize));\r\n        var _loop_1 = function (i) {\r\n            chain = chain.then(function (pointer) {\r\n                progress({ uploadId: uploadId, blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\r\n                return _this.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\r\n            });\r\n        };\r\n        // skip the first and last blocks\r\n        for (var i = 2; i < blockCount; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return chain.then(function (pointer) {\r\n            progress({ uploadId: uploadId, blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\r\n            return _this.finishUpload(uploadId, pointer, file.slice(pointer));\r\n        });\r\n    };\r\n    /**\r\n     * Starts a new chunk upload session and uploads the first fragment.\r\n     * The current file content is not changed when this method completes.\r\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\r\n     * The upload session ends either when you use the CancelUpload method or when you successfully\r\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\r\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\r\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.startUpload = function (uploadId, fragment) {\r\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { StartUpload: \"10485760\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.StartUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Continues the chunk upload session with an additional fragment.\r\n     * The current file content is not changed.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The size of the total uploaded data in bytes.\r\n     */\r\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (n) {\r\n            // When OData=verbose the payload has the following shape:\r\n            // { ContinueUpload: \"20971520\" }\r\n            if (typeof n === \"object\") {\r\n                n = n.ContinueUpload;\r\n            }\r\n            return parseFloat(n);\r\n        });\r\n    };\r\n    /**\r\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\r\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\r\n     * This method is currently available only on Office 365.\r\n     *\r\n     * @param uploadId The unique identifier of the upload session.\r\n     * @param fileOffset The size of the offset into the file where the fragment starts.\r\n     * @param fragment The file contents.\r\n     * @returns The newly uploaded file.\r\n     */\r\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\r\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\", false)\r\n            .postCore({ body: fragment })\r\n            .then(function (response) {\r\n            return {\r\n                data: response,\r\n                file: new File(odataUrlFrom(response)),\r\n            };\r\n        });\r\n    };\r\n    return File;\r\n}(SharePointQueryableShareableFile));\r\n/**\r\n * Describes a collection of Version objects\r\n *\r\n */\r\nvar Versions = /** @class */ (function (_super) {\r\n    __extends(Versions, _super);\r\n    function Versions() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Versions_1 = Versions;\r\n    /**\r\n     * Gets a version by id\r\n     *\r\n     * @param versionId The id of the version to retrieve\r\n     */\r\n    Versions.prototype.getById = function (versionId) {\r\n        var v = new Version(this);\r\n        v.concat(\"(\" + versionId + \")\");\r\n        return v;\r\n    };\r\n    /**\r\n     * Deletes all the file version objects in the collection.\r\n     *\r\n     */\r\n    Versions.prototype.deleteAll = function () {\r\n        return new Versions_1(this, \"deleteAll\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.deleteById = function (versionId) {\r\n        return this.clone(Versions_1, \"deleteById(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the specified version of the file.\r\n     *\r\n     * @param versionId The ID of the file version to delete.\r\n     */\r\n    Versions.prototype.recycleByID = function (versionId) {\r\n        return this.clone(Versions_1, \"recycleByID(vid=\" + versionId + \")\").postCore();\r\n    };\r\n    /**\r\n     * Deletes the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.deleteByLabel = function (label) {\r\n        return this.clone(Versions_1, \"deleteByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Recycles the file version object with the specified version label.\r\n     *\r\n     * @param label The version label of the file version to delete, for example: 1.2\r\n     */\r\n    Versions.prototype.recycleByLabel = function (label) {\r\n        return this.clone(Versions_1, \"recycleByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Creates a new file version from the file specified by the version label.\r\n     *\r\n     * @param label The version label of the file version to restore, for example: 1.2\r\n     */\r\n    Versions.prototype.restoreByLabel = function (label) {\r\n        return this.clone(Versions_1, \"restoreByLabel(versionlabel='\" + label + \"')\").postCore();\r\n    };\r\n    var Versions_1;\r\n    Versions = Versions_1 = __decorate([\r\n        defaultPath(\"versions\")\r\n    ], Versions);\r\n    return Versions;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a single Version instance\r\n *\r\n */\r\nvar Version = /** @class */ (function (_super) {\r\n    __extends(Version, _super);\r\n    function Version() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n        * Delete a specific version of a file.\r\n        *\r\n        * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        */\r\n        _this.delete = _this._deleteWithETag;\r\n        return _this;\r\n        // /**\r\n        // * Delete a specific version of a file.\r\n        // *\r\n        // * @param eTag Value used in the IF-Match header, by default \"*\"\r\n        // */\r\n        // public delete(eTag = \"*\"): Promise<void> {\r\n        //     return this.postCore({\r\n        //         headers: {\r\n        //             \"IF-Match\": eTag,\r\n        //             \"X-HTTP-Method\": \"DELETE\",\r\n        //         },\r\n        //     });\r\n        // }\r\n    }\r\n    return Version;\r\n}(SharePointQueryableInstance));\r\nvar CheckinType;\r\n(function (CheckinType) {\r\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\r\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\r\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\r\n})(CheckinType || (CheckinType = {}));\r\nvar WebPartsPersonalizationScope;\r\n(function (WebPartsPersonalizationScope) {\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\r\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\r\n})(WebPartsPersonalizationScope || (WebPartsPersonalizationScope = {}));\r\nvar MoveOperations;\r\n(function (MoveOperations) {\r\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\r\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\r\n})(MoveOperations || (MoveOperations = {}));\r\nvar TemplateFileType;\r\n(function (TemplateFileType) {\r\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\r\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\r\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\r\n    TemplateFileType[TemplateFileType[\"ClientSidePage\"] = 3] = \"ClientSidePage\";\r\n})(TemplateFileType || (TemplateFileType = {}));\n\n/**\r\n * Represents an app catalog\r\n */\r\nvar AppCatalog = /** @class */ (function (_super) {\r\n    __extends(AppCatalog, _super);\r\n    function AppCatalog(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/web/tenantappcatalog/AvailableApps\"; }\r\n        return _super.call(this, extractWebUrl(typeof baseUrl === \"string\" ? baseUrl : baseUrl.toUrl()), path) || this;\r\n    }\r\n    /**\r\n     * Get details of specific app from the app catalog\r\n     * @param id - Specify the guid of the app\r\n     */\r\n    AppCatalog.prototype.getAppById = function (id) {\r\n        return new App(this, \"getById('\" + id + \"')\");\r\n    };\r\n    /**\r\n     * Uploads an app package. Not supported for batching\r\n     *\r\n     * @param filename Filename to create.\r\n     * @param content app package data (eg: the .app or .sppkg file).\r\n     * @param shouldOverWrite Should an app with the same name in the same location be overwritten? (default: true)\r\n     * @returns Promise<AppAddResult>\r\n     */\r\n    AppCatalog.prototype.add = function (filename, content, shouldOverWrite) {\r\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\r\n        // you don't add to the availableapps collection\r\n        var adder = new AppCatalog(extractWebUrl(this.toUrl()), \"_api/web/tenantappcatalog/add(overwrite=\" + shouldOverWrite + \",url='\" + filename + \"')\");\r\n        return adder.postCore({\r\n            body: content,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    return AppCatalog;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents the actions you can preform on a given app within the catalog\r\n */\r\nvar App = /** @class */ (function (_super) {\r\n    __extends(App, _super);\r\n    function App() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * This method deploys an app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     *\r\n     * @param skipFeatureDeployment Deploy the app to the entire tenant\r\n     */\r\n    App.prototype.deploy = function (skipFeatureDeployment) {\r\n        if (skipFeatureDeployment === void 0) { skipFeatureDeployment = false; }\r\n        return this.clone(App, \"Deploy(\" + skipFeatureDeployment + \")\").postCore();\r\n    };\r\n    /**\r\n     * This method retracts a deployed app on the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.retract = function () {\r\n        return this.clone(App, \"Retract\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already deployed to be installed on a web\r\n     */\r\n    App.prototype.install = function () {\r\n        return this.clone(App, \"Install\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be uninstalled on a web\r\n     */\r\n    App.prototype.uninstall = function () {\r\n        return this.clone(App, \"Uninstall\").postCore();\r\n    };\r\n    /**\r\n     * This method allows an app which is already insatlled to be upgraded on a web\r\n     */\r\n    App.prototype.upgrade = function () {\r\n        return this.clone(App, \"Upgrade\").postCore();\r\n    };\r\n    /**\r\n     * This method removes an app from the app catalog.  It must be called in the context\r\n     * of the tenant app catalog web or it will fail.\r\n     */\r\n    App.prototype.remove = function () {\r\n        return this.clone(App, \"Remove\").postCore();\r\n    };\r\n    return App;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Manages a batch of OData operations\r\n */\r\nvar SPBatch = /** @class */ (function (_super) {\r\n    __extends(SPBatch, _super);\r\n    function SPBatch(baseUrl) {\r\n        var _this = _super.call(this) || this;\r\n        _this.baseUrl = baseUrl;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Parses the response from a batch request into an array of Response instances\r\n     *\r\n     * @param body Text body of the response from the batch request\r\n     */\r\n    SPBatch.ParseResponse = function (body) {\r\n        return new Promise(function (resolve, reject) {\r\n            var responses = [];\r\n            var header = \"--batchresponse_\";\r\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\r\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\r\n            var lines = body.split(\"\\n\");\r\n            var state = \"batch\";\r\n            var status;\r\n            var statusText;\r\n            for (var i = 0; i < lines.length; ++i) {\r\n                var line = lines[i];\r\n                switch (state) {\r\n                    case \"batch\":\r\n                        if (line.substr(0, header.length) === header) {\r\n                            state = \"batchHeaders\";\r\n                        }\r\n                        else {\r\n                            if (line.trim() !== \"\") {\r\n                                throw Error(\"Invalid response, line \" + i);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"batchHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"status\";\r\n                        }\r\n                        break;\r\n                    case \"status\":\r\n                        var parts = statusRegExp.exec(line);\r\n                        if (parts.length !== 3) {\r\n                            throw Error(\"Invalid status, line \" + i);\r\n                        }\r\n                        status = parseInt(parts[1], 10);\r\n                        statusText = parts[2];\r\n                        state = \"statusHeaders\";\r\n                        break;\r\n                    case \"statusHeaders\":\r\n                        if (line.trim() === \"\") {\r\n                            state = \"body\";\r\n                        }\r\n                        break;\r\n                    case \"body\":\r\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\r\n                        state = \"batch\";\r\n                        break;\r\n                }\r\n            }\r\n            if (state !== \"status\") {\r\n                reject(Error(\"Unexpected end of input\"));\r\n            }\r\n            resolve(responses);\r\n        });\r\n    };\r\n    SPBatch.prototype.executeImpl = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this.requests.length + \" requests.\", 1 /* Info */);\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\r\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\r\n        // below to be correct\r\n        var client = new SPHttpClient();\r\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\r\n        // and for sending the entire batch\r\n        return toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\r\n            // build all the requests, send them, pipe results in order to parsers\r\n            var batchBody = [];\r\n            var currentChangeSetId = \"\";\r\n            for (var i = 0; i < _this.requests.length; i++) {\r\n                var reqInfo = _this.requests[i];\r\n                if (reqInfo.method === \"GET\") {\r\n                    if (currentChangeSetId.length > 0) {\r\n                        // end an existing change set\r\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                        currentChangeSetId = \"\";\r\n                    }\r\n                    batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                }\r\n                else {\r\n                    if (currentChangeSetId.length < 1) {\r\n                        // start new change set\r\n                        currentChangeSetId = getGUID();\r\n                        batchBody.push(\"--batch_\" + _this.batchId + \"\\n\");\r\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\r\n                    }\r\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\r\n                }\r\n                // common batch part prefix\r\n                batchBody.push(\"Content-Type: application/http\\n\");\r\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\r\n                var headers = new Headers();\r\n                // this is the url of the individual request within the batch\r\n                var url = isUrlAbsolute(reqInfo.url) ? reqInfo.url : combine(absoluteRequestUrl, reqInfo.url);\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", 0 /* Verbose */);\r\n                if (reqInfo.method !== \"GET\") {\r\n                    var method = reqInfo.method;\r\n                    var castHeaders = reqInfo.options.headers;\r\n                    if (hOP(reqInfo, \"options\") && hOP(reqInfo.options, \"headers\") && castHeaders[\"X-HTTP-Method\"] !== undefined) {\r\n                        method = castHeaders[\"X-HTTP-Method\"];\r\n                        delete castHeaders[\"X-HTTP-Method\"];\r\n                    }\r\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\r\n                    headers.set(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                else {\r\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\r\n                }\r\n                // merge global config headers\r\n                mergeHeaders(headers, SPRuntimeConfig.headers);\r\n                // merge per-request headers\r\n                if (reqInfo.options) {\r\n                    mergeHeaders(headers, reqInfo.options.headers);\r\n                }\r\n                // lastly we apply any default headers we need that may not exist\r\n                if (!headers.has(\"Accept\")) {\r\n                    headers.append(\"Accept\", \"application/json\");\r\n                }\r\n                if (!headers.has(\"Content-Type\")) {\r\n                    headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\r\n                }\r\n                if (!headers.has(\"X-ClientService-ClientTag\")) {\r\n                    headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:@pnp-1.2.6\");\r\n                }\r\n                // write headers into batch body\r\n                headers.forEach(function (value, name) {\r\n                    batchBody.push(name + \": \" + value + \"\\n\");\r\n                });\r\n                batchBody.push(\"\\n\");\r\n                if (reqInfo.options.body) {\r\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\r\n                }\r\n            }\r\n            if (currentChangeSetId.length > 0) {\r\n                // Close the changeset\r\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\r\n                currentChangeSetId = \"\";\r\n            }\r\n            batchBody.push(\"--batch_\" + _this.batchId + \"--\\n\");\r\n            var batchOptions = {\r\n                \"body\": batchBody.join(\"\"),\r\n                \"headers\": {\r\n                    \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this.batchId,\r\n                },\r\n                \"method\": \"POST\",\r\n            };\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n            return client.fetch(combine(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\r\n                .then(function (r) { return r.text(); })\r\n                .then(SPBatch.ParseResponse)\r\n                .then(function (responses) {\r\n                if (responses.length !== _this.requests.length) {\r\n                    throw Error(\"Could not properly parse responses to match requests in batch.\");\r\n                }\r\n                Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n                return responses.reduce(function (chain, response, index) {\r\n                    var request = _this.requests[index];\r\n                    Logger.write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\r\n                }, Promise.resolve());\r\n            });\r\n        });\r\n    };\r\n    return SPBatch;\r\n}(ODataBatch));\n\n/**\r\n * Page promotion state\r\n */\r\nvar PromotedState;\r\n(function (PromotedState) {\r\n    /**\r\n     * Regular client side page\r\n     */\r\n    PromotedState[PromotedState[\"NotPromoted\"] = 0] = \"NotPromoted\";\r\n    /**\r\n     * Page that will be promoted as news article after publishing\r\n     */\r\n    PromotedState[PromotedState[\"PromoteOnPublish\"] = 1] = \"PromoteOnPublish\";\r\n    /**\r\n     * Page that is promoted as news article\r\n     */\r\n    PromotedState[PromotedState[\"Promoted\"] = 2] = \"Promoted\";\r\n})(PromotedState || (PromotedState = {}));\r\n/**\r\n * Gets the next order value 1 based for the provided collection\r\n *\r\n * @param collection Collection of orderable things\r\n */\r\nfunction getNextOrder(collection) {\r\n    if (collection.length < 1) {\r\n        return 1;\r\n    }\r\n    return Math.max.apply(null, collection.map(function (i) { return i.order; })) + 1;\r\n}\r\n/**\r\n * After https://stackoverflow.com/questions/273789/is-there-a-version-of-javascripts-string-indexof-that-allows-for-regular-expr/274094#274094\r\n *\r\n * @param this Types the called context this to a string in which the search will be conducted\r\n * @param regex A regex or string to match\r\n * @param startpos A starting position from which the search will begin\r\n */\r\nfunction regexIndexOf(regex, startpos) {\r\n    if (startpos === void 0) { startpos = 0; }\r\n    var indexOf = this.substring(startpos).search(regex);\r\n    return (indexOf >= 0) ? (indexOf + (startpos)) : indexOf;\r\n}\r\n/**\r\n * Finds bounded blocks of markup bounded by divs, ensuring to match the ending div even with nested divs in the interstitial markup\r\n *\r\n * @param html HTML to search\r\n * @param boundaryStartPattern The starting pattern to find, typically a div with attribute\r\n * @param collector A func to take the found block and provide a way to form it into a useful return that is added into the return array\r\n */\r\nfunction getBoundedDivMarkup(html, boundaryStartPattern, collector) {\r\n    var blocks = [];\r\n    if (html === undefined || html === null) {\r\n        return blocks;\r\n    }\r\n    // remove some extra whitespace if present\r\n    var cleanedHtml = html.replace(/[\\t\\r\\n]/g, \"\");\r\n    // find the first div\r\n    var startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern);\r\n    if (startIndex < 0) {\r\n        // we found no blocks in the supplied html\r\n        return blocks;\r\n    }\r\n    // this loop finds each of the blocks\r\n    while (startIndex > -1) {\r\n        // we have one open div counting from the one found above using boundaryStartPattern so we need to ensure we find it's close\r\n        var openCounter = 1;\r\n        var searchIndex = startIndex + 1;\r\n        var nextDivOpen = -1;\r\n        var nextCloseDiv = -1;\r\n        // this loop finds the </div> tag that matches the opening of the control\r\n        while (true) {\r\n            // find both the next opening and closing div tags from our current searching index\r\n            nextDivOpen = regexIndexOf.call(cleanedHtml, /<div[^>]*>/i, searchIndex);\r\n            nextCloseDiv = regexIndexOf.call(cleanedHtml, /<\\/div>/i, searchIndex);\r\n            if (nextDivOpen < 0) {\r\n                // we have no more opening divs, just set this to simplify checks below\r\n                nextDivOpen = cleanedHtml.length + 1;\r\n            }\r\n            // determine which we found first, then increment or decrement our counter\r\n            // and set the location to begin searching again\r\n            if (nextDivOpen < nextCloseDiv) {\r\n                openCounter++;\r\n                searchIndex = nextDivOpen + 1;\r\n            }\r\n            else if (nextCloseDiv < nextDivOpen) {\r\n                openCounter--;\r\n                searchIndex = nextCloseDiv + 1;\r\n            }\r\n            // once we have no open divs back to the level of the opening control div\r\n            // meaning we have all of the markup we intended to find\r\n            if (openCounter === 0) {\r\n                // get the bounded markup, +6 is the size of the ending </div> tag\r\n                var markup = cleanedHtml.substring(startIndex, nextCloseDiv + 6).trim();\r\n                // save the control data we found to the array\r\n                blocks.push(collector(markup));\r\n                // get out of our while loop\r\n                break;\r\n            }\r\n            if (openCounter > 1000 || openCounter < 0) {\r\n                // this is an arbitrary cut-off but likely we will not have 1000 nested divs\r\n                // something has gone wrong above and we are probably stuck in our while loop\r\n                // let's get out of our while loop and not hang everything\r\n                throw Error(\"getBoundedDivMarkup exceeded depth parameters.\");\r\n            }\r\n        }\r\n        // get the start of the next control\r\n        startIndex = regexIndexOf.call(cleanedHtml, boundaryStartPattern, nextCloseDiv);\r\n    }\r\n    return blocks;\r\n}\r\n/**\r\n * Normalizes the order value for all the sections, columns, and controls to be 1 based and stepped (1, 2, 3...)\r\n *\r\n * @param collection The collection to normalize\r\n */\r\nfunction reindex(collection) {\r\n    for (var i = 0; i < collection.length; i++) {\r\n        collection[i].order = i + 1;\r\n        if (hOP(collection[i], \"columns\")) {\r\n            reindex(collection[i].columns);\r\n        }\r\n        else if (hOP(collection[i], \"controls\")) {\r\n            reindex(collection[i].controls);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents the data and methods associated with client side \"modern\" pages\r\n */\r\nvar ClientSidePage = /** @class */ (function (_super) {\r\n    __extends(ClientSidePage, _super);\r\n    /**\r\n     * Creates a new instance of the ClientSidePage class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this web collection\r\n     * @param commentsDisabled Indicates if comments are disabled, not valid until load is called\r\n     */\r\n    function ClientSidePage(file, sections, commentsDisabled) {\r\n        if (sections === void 0) { sections = []; }\r\n        if (commentsDisabled === void 0) { commentsDisabled = false; }\r\n        var _this = _super.call(this, file) || this;\r\n        _this.sections = sections;\r\n        _this.commentsDisabled = commentsDisabled;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a new blank page within the supplied library\r\n     *\r\n     * @param library The library in which to create the page\r\n     * @param pageName Filename of the page, such as \"page.aspx\"\r\n     * @param title The display title of the page\r\n     * @param pageLayoutType Layout type of the page to use\r\n     */\r\n    ClientSidePage.create = function (library, pageName, title, pageLayoutType) {\r\n        if (pageLayoutType === void 0) { pageLayoutType = \"Article\"; }\r\n        // see if file exists, if not create it\r\n        return library.rootFolder.files.select(\"Name\").filter(\"Name eq '\" + pageName + \"'\").get().then(function (fs) {\r\n            if (fs.length > 0) {\r\n                throw Error(\"A file with the name '\" + pageName + \"' already exists in the library '\" + library.toUrl() + \"'.\");\r\n            }\r\n            // get our server relative path\r\n            return library.rootFolder.select(\"ServerRelativePath\").get().then(function (path) {\r\n                var pageServerRelPath = combine(\"/\", path.ServerRelativePath.DecodedUrl, pageName);\r\n                // add the template file\r\n                return library.rootFolder.files.addTemplateFile(pageServerRelPath, TemplateFileType.ClientSidePage).then(function (far) {\r\n                    // get the item associated with the file\r\n                    return far.file.getItem().then(function (i) {\r\n                        // update the item to have the correct values to create the client side page\r\n                        return i.update({\r\n                            BannerImageUrl: {\r\n                                Url: \"/_layouts/15/images/sitepagethumbnail.png\",\r\n                            },\r\n                            CanvasContent1: \"\",\r\n                            ClientSideApplicationId: \"b6917cb1-93a0-4b97-a84d-7cf49975d4ec\",\r\n                            ContentTypeId: \"0x0101009D1CB255DA76424F860D91F20E6C4118\",\r\n                            PageLayoutType: pageLayoutType,\r\n                            PromotedState: 0 /* NotPromoted */,\r\n                            Title: title,\r\n                        }).then(function (iar) { return new ClientSidePage(iar.item.file, iar.item.CommentsDisabled); });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new ClientSidePage instance from the provided html content string\r\n     *\r\n     * @param html HTML markup representing the page\r\n     */\r\n    ClientSidePage.fromFile = function (file) {\r\n        var page = new ClientSidePage(file);\r\n        return page.load().then(function (_) { return page; });\r\n    };\r\n    /**\r\n     * Converts a json object to an escaped string appropriate for use in attributes when storing client-side controls\r\n     *\r\n     * @param json The json object to encode into a string\r\n     */\r\n    ClientSidePage.jsonToEscapedString = function (json) {\r\n        return jsS(json)\r\n            .replace(/\"/g, \"&quot;\")\r\n            .replace(/:/g, \"&#58;\")\r\n            .replace(/{/g, \"&#123;\")\r\n            .replace(/}/g, \"&#125;\")\r\n            .replace(/\\[/g, \"\\[\")\r\n            .replace(/\\]/g, \"\\]\")\r\n            .replace(/\\./g, \"\\.\");\r\n    };\r\n    /**\r\n     * Converts an escaped string from a client-side control attribute to a json object\r\n     *\r\n     * @param escapedString\r\n     */\r\n    ClientSidePage.escapedStringToJson = function (escapedString) {\r\n        var unespace = function (escaped) {\r\n            var mapDict = [\r\n                [/&quot;/g, \"\\\"\"], [/&#58;/g, \":\"], [/&#123;/g, \"{\"], [/&#125;/g, \"}\"],\r\n                [/\\\\\\\\/g, \"\\\\\"], [/\\\\\\?/g, \"?\"], [/\\\\\\./g, \".\"], [/\\\\\\[/g, \"[\"], [/\\\\\\]/g, \"]\"],\r\n                [/\\\\\\(/g, \"(\"], [/\\\\\\)/g, \")\"], [/\\\\\\|/g, \"|\"], [/\\\\\\+/g, \"+\"],\r\n            ];\r\n            return mapDict.reduce(function (r, m) { return r.replace(m[0], m[1]); }, escaped);\r\n        };\r\n        return JSON.parse(unespace(escapedString));\r\n    };\r\n    /**\r\n     * Add a section to this page\r\n     */\r\n    ClientSidePage.prototype.addSection = function () {\r\n        var section = new CanvasSection(this, getNextOrder(this.sections));\r\n        this.sections.push(section);\r\n        return section;\r\n    };\r\n    /**\r\n     * Converts this page's content to html markup\r\n     */\r\n    ClientSidePage.prototype.toHtml = function () {\r\n        // trigger reindex of the entire tree\r\n        reindex(this.sections);\r\n        var html = [];\r\n        html.push(\"<div>\");\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            html.push(this.sections[i].toHtml());\r\n        }\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Loads this page instance's content from the supplied html\r\n     *\r\n     * @param html html string representing the page's content\r\n     */\r\n    ClientSidePage.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        // reset sections\r\n        this.sections = [];\r\n        // gather our controls from the supplied html\r\n        getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-canvascontrol[^>]*?>/i, function (markup) {\r\n            // get the control type\r\n            var ct = /controlType&quot;&#58;(\\d*?),/i.exec(markup);\r\n            // if no control type is present this is a column which we give type 0 to let us process it\r\n            var controlType = ct == null || ct.length < 2 ? 0 : parseInt(ct[1], 10);\r\n            var control = null;\r\n            switch (controlType) {\r\n                case 0:\r\n                    // empty canvas column\r\n                    control = new CanvasColumn(null, 0);\r\n                    control.fromHtml(markup);\r\n                    _this.mergeColumnToTree(control);\r\n                    break;\r\n                case 3:\r\n                    // client side webpart\r\n                    control = new ClientSideWebpart(\"\");\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n                case 4:\r\n                    // client side text\r\n                    control = new ClientSideText();\r\n                    control.fromHtml(markup);\r\n                    _this.mergePartToTree(control);\r\n                    break;\r\n            }\r\n        });\r\n        // refresh all the orders within the tree\r\n        reindex(this.sections);\r\n        return this;\r\n    };\r\n    /**\r\n     * Loads this page's content from the server\r\n     */\r\n    ClientSidePage.prototype.load = function () {\r\n        var _this = this;\r\n        return this.getItem(\"CanvasContent1\", \"CommentsDisabled\").then(function (item) {\r\n            _this.fromHtml(item.CanvasContent1);\r\n            _this.commentsDisabled = item.CommentsDisabled;\r\n        });\r\n    };\r\n    /**\r\n     * Persists the content changes (sections, columns, and controls)\r\n     */\r\n    ClientSidePage.prototype.save = function () {\r\n        return this.updateProperties({ CanvasContent1: this.toHtml() });\r\n    };\r\n    /**\r\n     * Enables comments on this page\r\n     */\r\n    ClientSidePage.prototype.enableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(true).then(function (r) {\r\n            _this.commentsDisabled = false;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Disables comments on this page\r\n     */\r\n    ClientSidePage.prototype.disableComments = function () {\r\n        var _this = this;\r\n        return this.setCommentsOn(false).then(function (r) {\r\n            _this.commentsDisabled = true;\r\n            return r;\r\n        });\r\n    };\r\n    /**\r\n     * Finds a control by the specified instance id\r\n     *\r\n     * @param id Instance id of the control to find\r\n     */\r\n    ClientSidePage.prototype.findControlById = function (id) {\r\n        return this.findControl(function (c) { return c.id === id; });\r\n    };\r\n    /**\r\n     * Finds a control within this page's control tree using the supplied predicate\r\n     *\r\n     * @param predicate Takes a control and returns true or false, if true that control is returned by findControl\r\n     */\r\n    ClientSidePage.prototype.findControl = function (predicate) {\r\n        // check all sections\r\n        for (var i = 0; i < this.sections.length; i++) {\r\n            // check all columns\r\n            for (var j = 0; j < this.sections[i].columns.length; j++) {\r\n                // check all controls\r\n                for (var k = 0; k < this.sections[i].columns[j].controls.length; k++) {\r\n                    // check to see if the predicate likes this control\r\n                    if (predicate(this.sections[i].columns[j].controls[k])) {\r\n                        return this.sections[i].columns[j].controls[k];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // we found nothing so give nothing back\r\n        return null;\r\n    };\r\n    /**\r\n     * Like the modern site page\r\n     */\r\n    ClientSidePage.prototype.like = function () {\r\n        return this.getItem().then(function (i) {\r\n            return i.like();\r\n        });\r\n    };\r\n    /**\r\n     * Unlike the modern site page\r\n     */\r\n    ClientSidePage.prototype.unlike = function () {\r\n        return this.getItem().then(function (i) {\r\n            return i.unlike();\r\n        });\r\n    };\r\n    /**\r\n     * Get the liked by information for a modern site page\r\n     */\r\n    ClientSidePage.prototype.getLikedByInformation = function () {\r\n        return this.getItem().then(function (i) {\r\n            return i.getLikedByInformation();\r\n        });\r\n    };\r\n    /**\r\n     * Sets the comments flag for a page\r\n     *\r\n     * @param on If true comments are enabled, false they are disabled\r\n     */\r\n    ClientSidePage.prototype.setCommentsOn = function (on) {\r\n        return this.getItem().then(function (i) {\r\n            var updater = new Item(i, \"SetCommentsDisabled(\" + !on + \")\");\r\n            return updater.update({});\r\n        });\r\n    };\r\n    /**\r\n     * Merges the control into the tree of sections and columns for this page\r\n     *\r\n     * @param control The control to merge\r\n     */\r\n    ClientSidePage.prototype.mergePartToTree = function (control) {\r\n        var section = null;\r\n        var column = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === control.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, control.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        var columns = section.columns.filter(function (c) { return c.order === control.controlData.position.sectionIndex; });\r\n        if (columns.length < 1) {\r\n            column = new CanvasColumn(section, control.controlData.position.sectionIndex, control.controlData.position.sectionFactor);\r\n            section.columns.push(column);\r\n        }\r\n        else {\r\n            column = columns[0];\r\n        }\r\n        control.column = column;\r\n        column.addControl(control);\r\n    };\r\n    /**\r\n     * Merges the supplied column into the tree\r\n     *\r\n     * @param column Column to merge\r\n     * @param position The position data for the column\r\n     */\r\n    ClientSidePage.prototype.mergeColumnToTree = function (column) {\r\n        var section = null;\r\n        var sections = this.sections.filter(function (s) { return s.order === column.controlData.position.zoneIndex; });\r\n        if (sections.length < 1) {\r\n            section = new CanvasSection(this, column.controlData.position.zoneIndex);\r\n            this.sections.push(section);\r\n        }\r\n        else {\r\n            section = sections[0];\r\n        }\r\n        column.section = section;\r\n        section.columns.push(column);\r\n    };\r\n    /**\r\n     * Updates the properties of the underlying ListItem associated with this ClientSidePage\r\n     *\r\n     * @param properties Set of properties to update\r\n     * @param eTag Value used in the IF-Match header, by default \"*\"\r\n     */\r\n    ClientSidePage.prototype.updateProperties = function (properties, eTag) {\r\n        if (eTag === void 0) { eTag = \"*\"; }\r\n        return this.getItem().then(function (i) { return i.update(properties, eTag); });\r\n    };\r\n    return ClientSidePage;\r\n}(File));\r\nvar CanvasSection = /** @class */ (function () {\r\n    function CanvasSection(page, order, columns) {\r\n        if (columns === void 0) { columns = []; }\r\n        this.page = page;\r\n        this.order = order;\r\n        this.columns = columns;\r\n        this._memId = getGUID();\r\n    }\r\n    Object.defineProperty(CanvasSection.prototype, \"defaultColumn\", {\r\n        /**\r\n         * Default column (this.columns[0]) for this section\r\n         */\r\n        get: function () {\r\n            if (this.columns.length < 1) {\r\n                this.addColumn(12);\r\n            }\r\n            return this.columns[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a new column to this section\r\n     */\r\n    CanvasSection.prototype.addColumn = function (factor) {\r\n        var column = new CanvasColumn(this, getNextOrder(this.columns), factor);\r\n        this.columns.push(column);\r\n        return column;\r\n    };\r\n    /**\r\n     * Adds a control to the default column for this section\r\n     *\r\n     * @param control Control to add to the default column\r\n     */\r\n    CanvasSection.prototype.addControl = function (control) {\r\n        this.defaultColumn.addControl(control);\r\n        return this;\r\n    };\r\n    CanvasSection.prototype.toHtml = function () {\r\n        var html = [];\r\n        for (var i = 0; i < this.columns.length; i++) {\r\n            html.push(this.columns[i].toHtml());\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    /**\r\n     * Removes this section and all contained columns and controls from the collection\r\n     */\r\n    CanvasSection.prototype.remove = function () {\r\n        var _this = this;\r\n        this.page.sections = this.page.sections.filter(function (section) { return section._memId !== _this._memId; });\r\n        reindex(this.page.sections);\r\n    };\r\n    return CanvasSection;\r\n}());\r\nvar CanvasControl = /** @class */ (function () {\r\n    function CanvasControl(controlType, dataVersion, column, order, id, controlData) {\r\n        if (column === void 0) { column = null; }\r\n        if (order === void 0) { order = 1; }\r\n        if (id === void 0) { id = getGUID(); }\r\n        if (controlData === void 0) { controlData = null; }\r\n        this.controlType = controlType;\r\n        this.dataVersion = dataVersion;\r\n        this.column = column;\r\n        this.order = order;\r\n        this.id = id;\r\n        this.controlData = controlData;\r\n    }\r\n    Object.defineProperty(CanvasControl.prototype, \"jsonData\", {\r\n        /**\r\n         * Value of the control's \"data-sp-controldata\" attribute\r\n         */\r\n        get: function () {\r\n            return ClientSidePage.jsonToEscapedString(this.getControlData());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CanvasControl.prototype.fromHtml = function (html) {\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\");\r\n        this.controlType = this.controlData.controlType;\r\n        this.id = this.controlData.id;\r\n    };\r\n    return CanvasControl;\r\n}());\r\nvar CanvasColumn = /** @class */ (function (_super) {\r\n    __extends(CanvasColumn, _super);\r\n    function CanvasColumn(section, order, factor, controls, dataVersion) {\r\n        if (factor === void 0) { factor = 12; }\r\n        if (controls === void 0) { controls = []; }\r\n        if (dataVersion === void 0) { dataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 0, dataVersion) || this;\r\n        _this.section = section;\r\n        _this.order = order;\r\n        _this.factor = factor;\r\n        _this.controls = controls;\r\n        return _this;\r\n    }\r\n    CanvasColumn.prototype.addControl = function (control) {\r\n        control.column = this;\r\n        this.controls.push(control);\r\n        return this;\r\n    };\r\n    CanvasColumn.prototype.getControl = function (index) {\r\n        return this.controls[index];\r\n    };\r\n    CanvasColumn.prototype.toHtml = function () {\r\n        var html = [];\r\n        if (this.controls.length < 1) {\r\n            html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\"></div>\");\r\n        }\r\n        else {\r\n            for (var i = 0; i < this.controls.length; i++) {\r\n                html.push(this.controls[i].toHtml(i + 1));\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    CanvasColumn.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.controlData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-controldata\"));\r\n        this.factor = this.controlData.position.sectionFactor;\r\n        this.order = this.controlData.position.sectionIndex;\r\n    };\r\n    CanvasColumn.prototype.getControlData = function () {\r\n        return {\r\n            displayMode: 2,\r\n            position: {\r\n                sectionFactor: this.factor,\r\n                sectionIndex: this.order,\r\n                zoneIndex: this.section.order,\r\n            },\r\n        };\r\n    };\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    CanvasColumn.prototype.remove = function () {\r\n        var _this = this;\r\n        this.section.columns = this.section.columns.filter(function (column) { return column.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return CanvasColumn;\r\n}(CanvasControl));\r\n/**\r\n * Abstract class with shared functionality for parts\r\n */\r\nvar ClientSidePart = /** @class */ (function (_super) {\r\n    __extends(ClientSidePart, _super);\r\n    function ClientSidePart() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes this column and all contained controls from the collection\r\n     */\r\n    ClientSidePart.prototype.remove = function () {\r\n        var _this = this;\r\n        this.column.controls = this.column.controls.filter(function (control) { return control.id !== _this.id; });\r\n        reindex(this.column.controls);\r\n    };\r\n    return ClientSidePart;\r\n}(CanvasControl));\r\nvar ClientSideText = /** @class */ (function (_super) {\r\n    __extends(ClientSideText, _super);\r\n    function ClientSideText(text) {\r\n        if (text === void 0) { text = \"\"; }\r\n        var _this = _super.call(this, 4, \"1.0\") || this;\r\n        _this.text = text;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ClientSideText.prototype, \"text\", {\r\n        /**\r\n         * The text markup of this control\r\n         */\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        set: function (text) {\r\n            if (!text.startsWith(\"<p>\")) {\r\n                text = \"<p>\" + text + \"</p>\";\r\n            }\r\n            this._text = text;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ClientSideText.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            editorType: \"CKEditor\",\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n        };\r\n    };\r\n    ClientSideText.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-rte=\\\"\\\">\");\r\n        html.push(\"\" + this.text);\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideText.prototype.fromHtml = function (html) {\r\n        var _this = this;\r\n        _super.prototype.fromHtml.call(this, html);\r\n        this.text = \"\";\r\n        getBoundedDivMarkup(html, /<div[^>]*data-sp-rte[^>]*>/i, function (s) {\r\n            // now we need to grab the inner text between the divs\r\n            var match = /<div[^>]*data-sp-rte[^>]*>(.*?)<\\/div>$/i.exec(s);\r\n            _this.text = match.length > 1 ? match[1] : \"\";\r\n        });\r\n    };\r\n    return ClientSideText;\r\n}(ClientSidePart));\r\nvar ClientSideWebpart = /** @class */ (function (_super) {\r\n    __extends(ClientSideWebpart, _super);\r\n    function ClientSideWebpart(title, description, propertieJson, webPartId, htmlProperties, serverProcessedContent, canvasDataVersion) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (propertieJson === void 0) { propertieJson = {}; }\r\n        if (webPartId === void 0) { webPartId = \"\"; }\r\n        if (htmlProperties === void 0) { htmlProperties = \"\"; }\r\n        if (serverProcessedContent === void 0) { serverProcessedContent = null; }\r\n        if (canvasDataVersion === void 0) { canvasDataVersion = \"1.0\"; }\r\n        var _this = _super.call(this, 3, \"1.0\") || this;\r\n        _this.title = title;\r\n        _this.description = description;\r\n        _this.propertieJson = propertieJson;\r\n        _this.webPartId = webPartId;\r\n        _this.htmlProperties = htmlProperties;\r\n        _this.serverProcessedContent = serverProcessedContent;\r\n        _this.canvasDataVersion = canvasDataVersion;\r\n        return _this;\r\n    }\r\n    ClientSideWebpart.fromComponentDef = function (definition) {\r\n        var part = new ClientSideWebpart(\"\");\r\n        part.import(definition);\r\n        return part;\r\n    };\r\n    ClientSideWebpart.prototype.import = function (component) {\r\n        this.webPartId = component.Id.replace(/^\\{|\\}$/g, \"\").toLowerCase();\r\n        var manifest = JSON.parse(component.Manifest);\r\n        this.title = manifest.preconfiguredEntries[0].title.default;\r\n        this.description = manifest.preconfiguredEntries[0].description.default;\r\n        this.dataVersion = \"1.0\";\r\n        this.propertieJson = this.parseJsonProperties(manifest.preconfiguredEntries[0].properties);\r\n    };\r\n    ClientSideWebpart.prototype.setProperties = function (properties) {\r\n        this.propertieJson = extend(this.propertieJson, properties);\r\n        return this;\r\n    };\r\n    ClientSideWebpart.prototype.getProperties = function () {\r\n        return this.propertieJson;\r\n    };\r\n    ClientSideWebpart.prototype.toHtml = function (index) {\r\n        // set our order to the value passed in\r\n        this.order = index;\r\n        // will form the value of the data-sp-webpartdata attribute\r\n        var data = {\r\n            dataVersion: this.dataVersion,\r\n            description: this.description,\r\n            id: this.webPartId,\r\n            instanceId: this.id,\r\n            properties: this.propertieJson,\r\n            serverProcessedContent: this.serverProcessedContent,\r\n            title: this.title,\r\n        };\r\n        var html = [];\r\n        html.push(\"<div data-sp-canvascontrol=\\\"\\\" data-sp-canvasdataversion=\\\"\" + this.canvasDataVersion + \"\\\" data-sp-controldata=\\\"\" + this.jsonData + \"\\\">\");\r\n        html.push(\"<div data-sp-webpart=\\\"\\\" data-sp-webpartdataversion=\\\"\" + this.dataVersion + \"\\\" data-sp-webpartdata=\\\"\" + ClientSidePage.jsonToEscapedString(data) + \"\\\">\");\r\n        html.push(\"<div data-sp-componentid>\");\r\n        html.push(this.webPartId);\r\n        html.push(\"</div>\");\r\n        html.push(\"<div data-sp-htmlproperties=\\\"\\\">\");\r\n        html.push(this.renderHtmlProperties());\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        html.push(\"</div>\");\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.fromHtml = function (html) {\r\n        _super.prototype.fromHtml.call(this, html);\r\n        var webPartData = ClientSidePage.escapedStringToJson(getAttrValueFromString(html, \"data-sp-webpartdata\"));\r\n        this.title = webPartData.title;\r\n        this.description = webPartData.description;\r\n        this.webPartId = webPartData.id;\r\n        this.canvasDataVersion = getAttrValueFromString(html, \"data-sp-canvasdataversion\").replace(/\\\\\\./, \".\");\r\n        this.dataVersion = getAttrValueFromString(html, \"data-sp-webpartdataversion\").replace(/\\\\\\./, \".\");\r\n        this.setProperties(webPartData.properties);\r\n        if (webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = webPartData.serverProcessedContent;\r\n        }\r\n        // get our html properties\r\n        var htmlProps = getBoundedDivMarkup(html, /<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, function (markup) {\r\n            return markup.replace(/^<div\\b[^>]*data-sp-htmlproperties[^>]*?>/i, \"\").replace(/<\\/div>$/i, \"\");\r\n        });\r\n        this.htmlProperties = htmlProps.length > 0 ? htmlProps[0] : \"\";\r\n    };\r\n    ClientSideWebpart.prototype.getControlData = function () {\r\n        return {\r\n            controlType: this.controlType,\r\n            id: this.id,\r\n            position: {\r\n                controlIndex: this.order,\r\n                sectionFactor: this.column.factor,\r\n                sectionIndex: this.column.order,\r\n                zoneIndex: this.column.section.order,\r\n            },\r\n            webPartId: this.webPartId,\r\n        };\r\n    };\r\n    ClientSideWebpart.prototype.renderHtmlProperties = function () {\r\n        var html = [];\r\n        if (this.serverProcessedContent === undefined || this.serverProcessedContent === null) {\r\n            html.push(this.htmlProperties);\r\n        }\r\n        else if (this.serverProcessedContent !== undefined) {\r\n            if (this.serverProcessedContent.searchablePlainTexts !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.searchablePlainTexts);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<div data-sp-prop-name=\\\"\" + keys[i] + \"\\\" data-sp-searchableplaintext=\\\"true\\\">\");\r\n                    html.push(this.serverProcessedContent.searchablePlainTexts[keys[i]]);\r\n                    html.push(\"</div>\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.imageSources !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.imageSources);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<img data-sp-prop-name=\\\"\" + keys[i] + \"\\\" src=\\\"\" + this.serverProcessedContent.imageSources[keys[i]] + \"\\\" />\");\r\n                }\r\n            }\r\n            if (this.serverProcessedContent.links !== undefined) {\r\n                var keys = Object.keys(this.serverProcessedContent.links);\r\n                for (var i = 0; i < keys.length; i++) {\r\n                    html.push(\"<a data-sp-prop-name=\\\"\" + keys[i] + \"\\\" href=\\\"\" + this.serverProcessedContent.links[keys[i]] + \"\\\"></a>\");\r\n                }\r\n            }\r\n        }\r\n        return html.join(\"\");\r\n    };\r\n    ClientSideWebpart.prototype.parseJsonProperties = function (props) {\r\n        // If the web part has the serverProcessedContent property then keep this one as it might be needed as input to render the web part HTML later on\r\n        if (props.webPartData !== undefined && props.webPartData.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.webPartData.serverProcessedContent;\r\n        }\r\n        else if (props.serverProcessedContent !== undefined) {\r\n            this.serverProcessedContent = props.serverProcessedContent;\r\n        }\r\n        else {\r\n            this.serverProcessedContent = null;\r\n        }\r\n        if (props.webPartData !== undefined && props.webPartData.properties !== undefined) {\r\n            return props.webPartData.properties;\r\n        }\r\n        else if (props.properties !== undefined) {\r\n            return props.properties;\r\n        }\r\n        else {\r\n            return props;\r\n        }\r\n    };\r\n    return ClientSideWebpart;\r\n}(ClientSidePart));\n\n/**\r\n * Represents a collection of navigation nodes\r\n *\r\n */\r\nvar NavigationNodes = /** @class */ (function (_super) {\r\n    __extends(NavigationNodes, _super);\r\n    function NavigationNodes() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets a navigation node by id\r\n     *\r\n     * @param id The id of the node\r\n     */\r\n    NavigationNodes.prototype.getById = function (id) {\r\n        var node = new NavigationNode(this);\r\n        node.concat(\"(\" + id + \")\");\r\n        return node;\r\n    };\r\n    /**\r\n     * Adds a new node to the collection\r\n     *\r\n     * @param title Display name of the node\r\n     * @param url The url of the node\r\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\r\n     */\r\n    NavigationNodes.prototype.add = function (title, url, visible) {\r\n        var _this = this;\r\n        if (visible === void 0) { visible = true; }\r\n        var postBody = jsS(extend(metadata(\"SP.NavigationNode\"), {\r\n            IsVisible: visible,\r\n            Title: title,\r\n            Url: url,\r\n        }));\r\n        return this.clone(NavigationNodes, null).postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this.getById(data.Id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Moves a node to be after another node in the navigation\r\n     *\r\n     * @param nodeId Id of the node to move\r\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\r\n     */\r\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\r\n        var postBody = jsS({\r\n            nodeId: nodeId,\r\n            previousNodeId: previousNodeId,\r\n        });\r\n        return this.clone(NavigationNodes, \"MoveAfter\").postCore({ body: postBody });\r\n    };\r\n    return NavigationNodes;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Represents an instance of a navigation node\r\n *\r\n */\r\nvar NavigationNode = /** @class */ (function (_super) {\r\n    __extends(NavigationNode, _super);\r\n    function NavigationNode() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\r\n        /**\r\n         * Represents the child nodes of this node\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"Children\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deletes this node and any child nodes\r\n     */\r\n    NavigationNode.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Updates this node\r\n     *\r\n     * @param properties Properties used to update this node\r\n     */\r\n    NavigationNode.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                node: _this,\r\n            };\r\n        });\r\n    };\r\n    return NavigationNode;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Exposes the navigation components\r\n *\r\n */\r\nvar Navigation = /** @class */ (function (_super) {\r\n    __extends(Navigation, _super);\r\n    function Navigation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\r\n        /**\r\n         * Gets the quicklaunch navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"quicklaunch\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\r\n        /**\r\n         * Gets the top bar navigation nodes for the current context\r\n         *\r\n         */\r\n        get: function () {\r\n            return new NavigationNodes(this, \"topnavigationbar\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Navigation = __decorate([\r\n        defaultPath(\"navigation\")\r\n    ], Navigation);\r\n    return Navigation;\r\n}(SharePointQueryable));\r\n/**\r\n * Represents the top level navigation service\r\n */\r\nvar NavigationService = /** @class */ (function (_super) {\r\n    __extends(NavigationService, _super);\r\n    function NavigationService(path) {\r\n        if (path === void 0) { path = null; }\r\n        return _super.call(this, \"_api/navigation\", path) || this;\r\n    }\r\n    /**\r\n     * The MenuState service operation returns a Menu-State (dump) of a SiteMapProvider on a site.\r\n     *\r\n     * @param menuNodeKey MenuNode.Key of the start node within the SiteMapProvider If no key is provided the SiteMapProvider.RootNode will be the root of the menu state.\r\n     * @param depth Depth of the dump. If no value is provided a dump with the depth of 10 is returned\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     * @param customProperties comma seperated list of custom properties to be returned.\r\n     */\r\n    NavigationService.prototype.getMenuState = function (menuNodeKey, depth, mapProviderName, customProperties) {\r\n        if (menuNodeKey === void 0) { menuNodeKey = null; }\r\n        if (depth === void 0) { depth = 10; }\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        if (customProperties === void 0) { customProperties = null; }\r\n        return (new NavigationService(\"MenuState\")).postCore({\r\n            body: jsS({\r\n                customProperties: customProperties,\r\n                depth: depth,\r\n                mapProviderName: mapProviderName,\r\n                menuNodeKey: menuNodeKey,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Tries to get a SiteMapNode.Key for a given URL within a site collection.\r\n     *\r\n     * @param currentUrl A url representing the SiteMapNode\r\n     * @param mapProviderName The name identifying the SiteMapProvider to be used\r\n     */\r\n    NavigationService.prototype.getMenuNodeKey = function (currentUrl, mapProviderName) {\r\n        if (mapProviderName === void 0) { mapProviderName = null; }\r\n        return (new NavigationService(\"MenuNodeKey\")).postCore({\r\n            body: jsS({\r\n                currentUrl: currentUrl,\r\n                mapProviderName: mapProviderName,\r\n            }),\r\n        });\r\n    };\r\n    return NavigationService;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes regional settings ODada object\r\n */\r\nvar RegionalSettings = /** @class */ (function (_super) {\r\n    __extends(RegionalSettings, _super);\r\n    function RegionalSettings() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(RegionalSettings.prototype, \"installedLanguages\", {\r\n        /**\r\n         * Gets the collection of languages used in a server farm.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"globalInstalledLanguages\", {\r\n        /**\r\n         * Gets the collection of language packs that are installed on the server.\r\n         */\r\n        get: function () {\r\n            return new InstalledLanguages(this, \"globalinstalledlanguages\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZone\", {\r\n        /**\r\n         * Gets time zone\r\n         */\r\n        get: function () {\r\n            return new TimeZone(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RegionalSettings.prototype, \"timeZones\", {\r\n        /**\r\n         * Gets time zones\r\n         */\r\n        get: function () {\r\n            return new TimeZones(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RegionalSettings = __decorate([\r\n        defaultPath(\"regionalsettings\")\r\n    ], RegionalSettings);\r\n    return RegionalSettings;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes installed languages ODada queriable collection\r\n */\r\nvar InstalledLanguages = /** @class */ (function (_super) {\r\n    __extends(InstalledLanguages, _super);\r\n    function InstalledLanguages() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    InstalledLanguages = __decorate([\r\n        defaultPath(\"installedlanguages\")\r\n    ], InstalledLanguages);\r\n    return InstalledLanguages;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes TimeZone ODada object\r\n */\r\nvar TimeZone = /** @class */ (function (_super) {\r\n    __extends(TimeZone, _super);\r\n    function TimeZone() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZone_1 = TimeZone;\r\n    /**\r\n     * Gets an Local Time by UTC Time\r\n     *\r\n     * @param utcTime UTC Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.utcToLocalTime = function (utcTime) {\r\n        var dateIsoString;\r\n        if (typeof utcTime === \"string\") {\r\n            dateIsoString = utcTime;\r\n        }\r\n        else {\r\n            dateIsoString = utcTime.toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"utctolocaltime('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"UTCToLocalTime\") ? res.UTCToLocalTime : res; });\r\n    };\r\n    /**\r\n     * Gets an UTC Time by Local Time\r\n     *\r\n     * @param localTime Local Time as Date or ISO String\r\n     */\r\n    TimeZone.prototype.localTimeToUTC = function (localTime) {\r\n        var dateIsoString;\r\n        if (typeof localTime === \"string\") {\r\n            dateIsoString = localTime;\r\n        }\r\n        else {\r\n            dateIsoString = dateAdd(localTime, \"minute\", localTime.getTimezoneOffset() * -1).toISOString();\r\n        }\r\n        return this.clone(TimeZone_1, \"localtimetoutc('\" + dateIsoString + \"')\")\r\n            .postCore()\r\n            .then(function (res) { return hOP(res, \"LocalTimeToUTC\") ? res.LocalTimeToUTC : res; });\r\n    };\r\n    var TimeZone_1;\r\n    TimeZone = TimeZone_1 = __decorate([\r\n        defaultPath(\"timezone\")\r\n    ], TimeZone);\r\n    return TimeZone;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes time zones queriable collection\r\n */\r\nvar TimeZones = /** @class */ (function (_super) {\r\n    __extends(TimeZones, _super);\r\n    function TimeZones() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeZones_1 = TimeZones;\r\n    // https://msdn.microsoft.com/en-us/library/office/jj247008.aspx - timezones ids\r\n    /**\r\n     * Gets an TimeZone by id\r\n     *\r\n     * @param id The integer id of the timezone to retrieve\r\n     */\r\n    TimeZones.prototype.getById = function (id) {\r\n        // do the post and merge the result into a TimeZone instance so the data and methods are available\r\n        return this.clone(TimeZones_1, \"GetById(\" + id + \")\").postCore({}, spODataEntity(TimeZone));\r\n    };\r\n    var TimeZones_1;\r\n    TimeZones = TimeZones_1 = __decorate([\r\n        defaultPath(\"timezones\")\r\n    ], TimeZones);\r\n    return TimeZones;\r\n}(SharePointQueryableCollection));\n\nvar funcs = new Map([\r\n    [\"text\", \"Querytext\"],\r\n    [\"template\", \"QueryTemplate\"],\r\n    [\"sourceId\", \"SourceId\"],\r\n    [\"trimDuplicatesIncludeId\", \"\"],\r\n    [\"startRow\", \"\"],\r\n    [\"rowLimit\", \"\"],\r\n    [\"rankingModelId\", \"\"],\r\n    [\"rowsPerPage\", \"\"],\r\n    [\"selectProperties\", \"\"],\r\n    [\"culture\", \"\"],\r\n    [\"timeZoneId\", \"\"],\r\n    [\"refinementFilters\", \"\"],\r\n    [\"refiners\", \"\"],\r\n    [\"hiddenConstraints\", \"\"],\r\n    [\"sortList\", \"\"],\r\n    [\"timeout\", \"\"],\r\n    [\"hithighlightedProperties\", \"\"],\r\n    [\"clientType\", \"\"],\r\n    [\"personalizationData\", \"\"],\r\n    [\"resultsURL\", \"\"],\r\n    [\"queryTag\", \"\"],\r\n    [\"properties\", \"\"],\r\n    [\"queryTemplatePropertiesUrl\", \"\"],\r\n    [\"reorderingRules\", \"\"],\r\n    [\"hitHighlightedMultivaluePropertyLimit\", \"\"],\r\n    [\"collapseSpecification\", \"\"],\r\n    [\"uiLanguage\", \"\"],\r\n    [\"desiredSnippetLength\", \"\"],\r\n    [\"maxSnippetLength\", \"\"],\r\n    [\"summaryLength\", \"\"],\r\n]);\r\nvar props = new Map([]);\r\nfunction toPropCase(str) {\r\n    return str.replace(/^(.)/, function ($1) { return $1.toUpperCase(); });\r\n}\r\n/**\r\n * Creates a new instance of the SearchQueryBuilder\r\n *\r\n * @param queryText Initial query text\r\n * @param _query Any initial query configuration\r\n */\r\nfunction SearchQueryBuilder(queryText, _query) {\r\n    if (queryText === void 0) { queryText = \"\"; }\r\n    if (_query === void 0) { _query = {}; }\r\n    return new Proxy({\r\n        query: Object.assign({\r\n            Querytext: queryText,\r\n        }, _query),\r\n    }, {\r\n        get: function (self, propertyKey, proxy) {\r\n            var pk = propertyKey.toString();\r\n            if (pk === \"toSearchQuery\") {\r\n                return function () { return self.query; };\r\n            }\r\n            if (funcs.has(pk)) {\r\n                return function () {\r\n                    var value = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        value[_i] = arguments[_i];\r\n                    }\r\n                    var mappedPk = funcs.get(pk);\r\n                    self.query[mappedPk.length > 0 ? mappedPk : toPropCase(pk)] = value.length > 1 ? value : value[0];\r\n                    return proxy;\r\n                };\r\n            }\r\n            var propKey = props.has(pk) ? props.get(pk) : toPropCase(pk);\r\n            self.query[propKey] = true;\r\n            return proxy;\r\n        },\r\n    });\r\n}\r\n/**\r\n * Describes the search API\r\n *\r\n */\r\nvar Search = /** @class */ (function (_super) {\r\n    __extends(Search, _super);\r\n    function Search() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @returns Promise\r\n     */\r\n    Search.prototype.execute = function (queryInit) {\r\n        var _this = this;\r\n        var query = this.parseQuery(queryInit);\r\n        var postBody = jsS({\r\n            request: extend(metadata(\"Microsoft.Office.Server.Search.REST.SearchRequest\"), Object.assign({}, query, {\r\n                HitHighlightedProperties: this.fixArrProp(query.HitHighlightedProperties),\r\n                Properties: this.fixArrProp(query.Properties),\r\n                RefinementFilters: this.fixArrProp(query.RefinementFilters),\r\n                ReorderingRules: this.fixArrProp(query.ReorderingRules),\r\n                SelectProperties: this.fixArrProp(query.SelectProperties),\r\n                SortList: this.fixArrProp(query.SortList),\r\n            })),\r\n        });\r\n        // if we are using caching with this search request, then we need to handle some work upfront to enable that\r\n        if (this._useCaching) {\r\n            // force use of the cache for this request if .usingCaching was called\r\n            this._forceCaching = true;\r\n            // because all the requests use the same url they would collide in the cache we use a special key\r\n            var cacheKey = \"PnPjs.SearchWithCaching(\" + getHashCode(postBody) + \")\";\r\n            if (objectDefinedNotNull(this._cachingOptions)) {\r\n                // if our key ends in the postquery url we overwrite it\r\n                if (/\\/_api\\/search\\/postquery$/i.test(this._cachingOptions.key)) {\r\n                    this._cachingOptions.key = cacheKey;\r\n                }\r\n            }\r\n            else {\r\n                this._cachingOptions = new CachingOptions(cacheKey);\r\n            }\r\n        }\r\n        return this.postCore({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\r\n    };\r\n    /**\r\n     * Fix array property\r\n     *\r\n     * @param prop property to fix for container struct\r\n     */\r\n    Search.prototype.fixArrProp = function (prop) {\r\n        if (typeof prop === \"undefined\") {\r\n            return ({ results: [] });\r\n        }\r\n        prop = isArray(prop) ? prop : [prop];\r\n        return hOP(prop, \"results\") ? prop : { results: prop };\r\n    };\r\n    /**\r\n     * Translates one of the query initializers into a SearchQuery instance\r\n     *\r\n     * @param query\r\n     */\r\n    Search.prototype.parseQuery = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { Querytext: query };\r\n        }\r\n        else if (query.toSearchQuery) {\r\n            finalQuery = query.toSearchQuery();\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return finalQuery;\r\n    };\r\n    Search = __decorate([\r\n        defaultPath(\"_api/search/postquery\")\r\n    ], Search);\r\n    return Search;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\r\n */\r\nvar SearchResults = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SearchResult class\r\n     *\r\n     */\r\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\r\n        if (_raw === void 0) { _raw = null; }\r\n        if (_primary === void 0) { _primary = null; }\r\n        this._url = _url;\r\n        this._query = _query;\r\n        this._raw = _raw;\r\n        this._primary = _primary;\r\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\r\n    }\r\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\r\n        get: function () {\r\n            return this.RawSearchResults.ElapsedTime;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\r\n        get: function () {\r\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\r\n        get: function () {\r\n            return this._raw;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\r\n        get: function () {\r\n            if (this._primary === null) {\r\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\r\n            }\r\n            return this._primary;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a page of results\r\n     *\r\n     * @param pageNumber Index of the page to return. Used to determine StartRow\r\n     * @param pageSize Optional, items per page (default = 10)\r\n     */\r\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\r\n        // if we got all the available rows we don't have another page\r\n        if (this.TotalRows < this.RowCount) {\r\n            return Promise.resolve(null);\r\n        }\r\n        // if pageSize is supplied, then we use that regardless of any previous values\r\n        // otherwise get the previous RowLimit or default to 10\r\n        var rows = pageSize !== undefined ? pageSize : hOP(this._query, \"RowLimit\") ? this._query.RowLimit : 10;\r\n        var query = extend(this._query, {\r\n            RowLimit: rows,\r\n            StartRow: rows * (pageNumber - 1),\r\n        });\r\n        // we have reached the end\r\n        if (query.StartRow > this.TotalRows) {\r\n            return Promise.resolve(null);\r\n        }\r\n        var search = new Search(this._url, null);\r\n        return search.execute(query);\r\n    };\r\n    /**\r\n     * Formats a search results array\r\n     *\r\n     * @param rawResults The array to process\r\n     */\r\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\r\n        var results = new Array();\r\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\r\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\r\n            var tempResult = tempResults_1[_i];\r\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\r\n            results.push(cells.reduce(function (res, cell) {\r\n                Object.defineProperty(res, cell.Key, {\r\n                    configurable: false,\r\n                    enumerable: true,\r\n                    value: cell.Value,\r\n                    writable: false,\r\n                });\r\n                return res;\r\n            }, {}));\r\n        }\r\n        return results;\r\n    };\r\n    return SearchResults;\r\n}());\r\n/**\r\n * defines the SortDirection enum\r\n */\r\nvar SortDirection;\r\n(function (SortDirection) {\r\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\r\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\r\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\r\n})(SortDirection || (SortDirection = {}));\r\n/**\r\n * defines the ReorderingRuleMatchType  enum\r\n */\r\nvar ReorderingRuleMatchType;\r\n(function (ReorderingRuleMatchType) {\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\r\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\r\n})(ReorderingRuleMatchType || (ReorderingRuleMatchType = {}));\r\n/**\r\n * Specifies the type value for the property\r\n */\r\nvar QueryPropertyValueType;\r\n(function (QueryPropertyValueType) {\r\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32Type\"] = 2] = \"Int32Type\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\r\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\r\n})(QueryPropertyValueType || (QueryPropertyValueType = {}));\r\nvar SearchBuiltInSourceId = /** @class */ (function () {\r\n    function SearchBuiltInSourceId() {\r\n    }\r\n    SearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\r\n    SearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\r\n    SearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\r\n    SearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\r\n    SearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\r\n    SearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\r\n    SearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\r\n    SearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\r\n    SearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\r\n    SearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\r\n    SearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\r\n    SearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\r\n    SearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\r\n    SearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\r\n    SearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\r\n    return SearchBuiltInSourceId;\r\n}());\n\nvar SearchSuggest = /** @class */ (function (_super) {\r\n    __extends(SearchSuggest, _super);\r\n    function SearchSuggest() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SearchSuggest.prototype.execute = function (query) {\r\n        this.mapQueryToQueryString(query);\r\n        return this.get().then(function (response) {\r\n            var mapper = hOP(response, \"suggest\") ? function (s) { return response.suggest[s].results; } : function (s) { return response[s]; };\r\n            return {\r\n                PeopleNames: mapper(\"PeopleNames\"),\r\n                PersonalResults: mapper(\"PersonalResults\"),\r\n                Queries: mapper(\"Queries\"),\r\n            };\r\n        });\r\n    };\r\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\r\n        var _this = this;\r\n        var setProp = function (q) { return function (checkProp) { return function (sp) {\r\n            if (hOP(q, checkProp)) {\r\n                _this.query.set(sp, q[checkProp].toString());\r\n            }\r\n        }; }; };\r\n        this.query.set(\"querytext\", \"'\" + query.querytext + \"'\");\r\n        var querySetter = setProp(query);\r\n        querySetter(\"count\")(\"inumberofquerysuggestions\");\r\n        querySetter(\"personalCount\")(\"inumberofresultsuggestions\");\r\n        querySetter(\"preQuery\")(\"fprequerysuggestions\");\r\n        querySetter(\"hitHighlighting\")(\"fhithighlighting\");\r\n        querySetter(\"capitalize\")(\"fcapitalizefirstletters\");\r\n        querySetter(\"culture\")(\"culture\");\r\n        querySetter(\"stemming\")(\"enablestemming\");\r\n        querySetter(\"includePeople\")(\"showpeoplenamesuggestions\");\r\n        querySetter(\"queryRules\")(\"enablequeryrules\");\r\n        querySetter(\"prefixMatch\")(\"fprefixmatchallterms\");\r\n    };\r\n    SearchSuggest = __decorate([\r\n        defaultPath(\"_api/search/suggest\")\r\n    ], SearchSuggest);\r\n    return SearchSuggest;\r\n}(SharePointQueryableInstance));\n\n/**\r\n * Describes a collection of List objects\r\n *\r\n */\r\nvar Features = /** @class */ (function (_super) {\r\n    __extends(Features, _super);\r\n    function Features() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Features_1 = Features;\r\n    /**\r\n     * Adds a new list to the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature activation will be forced\r\n     */\r\n    Features.prototype.add = function (id, force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"add\").postCore({\r\n            body: jsS({\r\n                featdefScope: 0,\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                feature: _this.getById(id),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list from the collection by guid id\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     */\r\n    Features.prototype.getById = function (id) {\r\n        var feature = new Feature(this);\r\n        feature.concat(\"('\" + id + \"')\");\r\n        return feature;\r\n    };\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param id The Id of the feature (GUID)\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Features.prototype.remove = function (id, force) {\r\n        if (force === void 0) { force = false; }\r\n        return this.clone(Features_1, \"remove\").postCore({\r\n            body: jsS({\r\n                featureId: id,\r\n                force: force,\r\n            }),\r\n        });\r\n    };\r\n    var Features_1;\r\n    Features = Features_1 = __decorate([\r\n        defaultPath(\"features\")\r\n    ], Features);\r\n    return Features;\r\n}(SharePointQueryableCollection));\r\nvar Feature = /** @class */ (function (_super) {\r\n    __extends(Feature, _super);\r\n    function Feature() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Removes (deactivates) a feature from the collection\r\n     *\r\n     * @param force If true the feature deactivation will be forced\r\n     */\r\n    Feature.prototype.deactivate = function (force) {\r\n        var _this = this;\r\n        if (force === void 0) { force = false; }\r\n        var removeDependency = this.addBatchDependency();\r\n        var idGet = new Feature(this).select(\"DefinitionId\");\r\n        return idGet.get().then(function (feature) {\r\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\r\n            removeDependency();\r\n            return promise;\r\n        });\r\n    };\r\n    return Feature;\r\n}(SharePointQueryableInstance));\n\nvar RelatedItemManagerImpl = /** @class */ (function (_super) {\r\n    __extends(RelatedItemManagerImpl, _super);\r\n    function RelatedItemManagerImpl() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    RelatedItemManagerImpl_1 = RelatedItemManagerImpl;\r\n    RelatedItemManagerImpl.FromUrl = function (url) {\r\n        if (url === null) {\r\n            return new RelatedItemManagerImpl_1(\"\");\r\n        }\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index > -1) {\r\n            return new RelatedItemManagerImpl_1(url.substr(0, index));\r\n        }\r\n        return new RelatedItemManagerImpl_1(url);\r\n    };\r\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".GetPageOneRelatedItems\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemID,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\r\n     *\r\n     * @param sourceListName The source list name or list id\r\n     * @param sourceItemId The source item id\r\n     * @param targetItemUrl The target item url\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkToUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                TargetItemUrl: targetItemUrl,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\r\n     *\r\n     * @param sourceItemUrl The source item url\r\n     * @param targetListName The target list name or list id\r\n     * @param targetItemId The target item id\r\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\r\n     */\r\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\r\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".AddSingleLinkFromUrl\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemUrl: sourceItemUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TryAddReverseLink: tryAddReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\r\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\r\n        var query = this.clone(RelatedItemManagerImpl_1, null);\r\n        query.concat(\".DeleteSingleLink\");\r\n        return query.postCore({\r\n            body: jsS({\r\n                SourceItemID: sourceItemId,\r\n                SourceListName: sourceListName,\r\n                SourceWebUrl: sourceWebUrl,\r\n                TargetItemID: targetItemId,\r\n                TargetListName: targetListName,\r\n                TargetWebUrl: targetWebUrl,\r\n                TryDeleteReverseLink: tryDeleteReverseLink,\r\n            }),\r\n        });\r\n    };\r\n    var RelatedItemManagerImpl_1;\r\n    RelatedItemManagerImpl = RelatedItemManagerImpl_1 = __decorate([\r\n        defaultPath(\"_api/SP.RelatedItemManager\")\r\n    ], RelatedItemManagerImpl);\r\n    return RelatedItemManagerImpl;\r\n}(SharePointQueryable));\n\n/**\r\n * Describes a collection of webs\r\n *\r\n */\r\nvar Webs = /** @class */ (function (_super) {\r\n    __extends(Webs, _super);\r\n    function Webs() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Webs_1 = Webs;\r\n    /**\r\n     * Adds a new web to the collection\r\n     *\r\n     * @param title The new web's title\r\n     * @param url The new web's relative url\r\n     * @param description The new web's description\r\n     * @param template The new web's template internal name (default = STS)\r\n     * @param language The locale id that specifies the new web's language (default = 1033 [English, US])\r\n     * @param inheritPermissions When true, permissions will be inherited from the new web's parent (default = true)\r\n     */\r\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (template === void 0) { template = \"STS\"; }\r\n        if (language === void 0) { language = 1033; }\r\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\r\n        var props = {\r\n            Description: description,\r\n            Language: language,\r\n            Title: title,\r\n            Url: url,\r\n            UseSamePermissionsAsParentSite: inheritPermissions,\r\n            WebTemplate: template,\r\n        };\r\n        var postBody = jsS({\r\n            \"parameters\": extend({\r\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\r\n            }, props),\r\n        });\r\n        return this.clone(Webs_1, \"add\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: new Web(odataUrlFrom(data).replace(/_api\\/web\\/?/i, \"\")),\r\n            };\r\n        });\r\n    };\r\n    var Webs_1;\r\n    Webs = Webs_1 = __decorate([\r\n        defaultPath(\"webs\")\r\n    ], Webs);\r\n    return Webs;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a collection of web infos\r\n *\r\n */\r\nvar WebInfos = /** @class */ (function (_super) {\r\n    __extends(WebInfos, _super);\r\n    function WebInfos() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    WebInfos = __decorate([\r\n        defaultPath(\"webinfos\")\r\n    ], WebInfos);\r\n    return WebInfos;\r\n}(SharePointQueryableCollection));\r\n/**\r\n * Describes a web\r\n *\r\n */\r\nvar Web = /** @class */ (function (_super) {\r\n    __extends(Web, _super);\r\n    function Web() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Web_1 = Web;\r\n    /**\r\n     * Creates a new web instance from the given url by indexing the location of the /_api/\r\n     * segment. If this is not found the method creates a new web with the entire string as\r\n     * supplied.\r\n     *\r\n     * @param url\r\n     */\r\n    Web.fromUrl = function (url, path) {\r\n        return new Web_1(extractWebUrl(url), path);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"webs\", {\r\n        /**\r\n         * Gets this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Webs(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets this web's parent web and data\r\n     *\r\n     */\r\n    Web.prototype.getParentWeb = function () {\r\n        var _this = this;\r\n        return this.select(\"ParentWeb/Id\").expand(\"ParentWeb\").get()\r\n            .then(function (_a) {\r\n            var ParentWeb = _a.ParentWeb;\r\n            return new Site(_this.toUrlAndQuery().split(\"/_api\")[0]).openWebById(ParentWeb.Id);\r\n        });\r\n    };\r\n    /**\r\n    * Returns a collection of objects that contain metadata about subsites of the current site in which the current user is a member.\r\n    *\r\n    * @param nWebTemplateFilter Specifies the site definition (default = -1)\r\n    * @param nConfigurationFilter A 16-bit integer that specifies the identifier of a configuration (default = -1)\r\n    */\r\n    Web.prototype.getSubwebsFilteredForCurrentUser = function (nWebTemplateFilter, nConfigurationFilter) {\r\n        if (nWebTemplateFilter === void 0) { nWebTemplateFilter = -1; }\r\n        if (nConfigurationFilter === void 0) { nConfigurationFilter = -1; }\r\n        return this.clone(Webs, \"getSubwebsFilteredForCurrentUser(nWebTemplateFilter=\" + nWebTemplateFilter + \",nConfigurationFilter=\" + nConfigurationFilter + \")\");\r\n    };\r\n    Object.defineProperty(Web.prototype, \"allProperties\", {\r\n        /**\r\n         * Allows access to the web's all properties collection\r\n         */\r\n        get: function () {\r\n            return this.clone(SharePointQueryableCollection, \"allproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"webinfos\", {\r\n        /**\r\n         * Gets a collection of WebInfos for this web's subwebs\r\n         *\r\n         */\r\n        get: function () {\r\n            return new WebInfos(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\r\n        /**\r\n         * Gets the content types available in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new ContentTypes(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"lists\", {\r\n        /**\r\n         * Gets the lists in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Lists(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"fields\", {\r\n        /**\r\n         * Gets the fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"availablefields\", {\r\n        /**\r\n         * Gets the available fields in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Fields(this, \"availablefields\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"navigation\", {\r\n        /**\r\n         * Gets the navigation options in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Navigation(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\r\n        /**\r\n         * Gets the site users\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteUsers(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\r\n        /**\r\n         * Gets the site groups\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroups(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"siteUserInfoList\", {\r\n        /**\r\n         * Gets site user info list\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"siteuserinfolist\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"regionalSettings\", {\r\n        /**\r\n         * Gets regional settings\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RegionalSettings(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"currentUser\", {\r\n        /**\r\n         * Gets the current user\r\n         */\r\n        get: function () {\r\n            return new CurrentUser(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"folders\", {\r\n        /**\r\n         * Gets the top-level folders in this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folders(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all user custom actions for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\r\n        /**\r\n         * Gets the collection of RoleDefinition resources\r\n         *\r\n         */\r\n        get: function () {\r\n            return new RoleDefinitions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\r\n        /**\r\n         * Provides an interface to manage related items\r\n         *\r\n         */\r\n        get: function () {\r\n            return RelatedItemManagerImpl.FromUrl(this.toUrl());\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch for requests within the context of this web\r\n     *\r\n     */\r\n    Web.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\r\n        /**\r\n         * Gets the root folder of this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Folder(this, \"rootFolder\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\r\n        /**\r\n         * Gets the associated owner group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedownergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\r\n        /**\r\n         * Gets the associated member group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedmembergroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\r\n        /**\r\n         * Gets the associated visitor group for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SiteGroup(this, \"associatedvisitorgroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Web.prototype, \"defaultDocumentLibrary\", {\r\n        /**\r\n         * Gets the default document library for this web\r\n         *\r\n         */\r\n        get: function () {\r\n            return new List(this, \"DefaultDocumentLibrary\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a folder by server relative url\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a folder by server relative relative path if your folder name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123\");\r\n     * This works only in SharePoint online.\r\n     *\r\n     * @param folderRelativeUrl The server relative path to the folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFolderByServerRelativePath = function (folderRelativeUrl) {\r\n        return new Folder(this, \"getFolderByServerRelativePath(decodedUrl='\" + folderRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a file by server relative url if your file name contains # and % characters\r\n     * you need to first encode the file name using encodeURIComponent() and then pass the url\r\n     * let url = \"/sites/test/Shared Documents/\" + encodeURIComponent(\"%123.docx\");\r\n     *\r\n     * @param fileRelativeUrl The server relative path to the file (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getFileByServerRelativePath = function (fileRelativeUrl) {\r\n        return new File(this, \"getFileByServerRelativePath(decodedUrl='\" + fileRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Gets a list by server relative url (list's root folder)\r\n     *\r\n     * @param listRelativeUrl The server relative path to the list's root folder (including /sites/ if applicable)\r\n     */\r\n    Web.prototype.getList = function (listRelativeUrl) {\r\n        return new List(this, \"getList('\" + listRelativeUrl + \"')\");\r\n    };\r\n    /**\r\n     * Updates this web instance with the supplied properties\r\n     *\r\n     * @param properties A plain object hash of values to update for the web\r\n     */\r\n    Web.prototype.update = function (properties) {\r\n        var _this = this;\r\n        var postBody = jsS(extend({\r\n            \"__metadata\": { \"type\": \"SP.Web\" },\r\n        }, properties));\r\n        return this.postCore({\r\n            body: postBody,\r\n            headers: {\r\n                \"X-HTTP-Method\": \"MERGE\",\r\n            },\r\n        }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                web: _this,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Deletes this web\r\n     *\r\n     */\r\n    Web.prototype.delete = function () {\r\n        return _super.prototype.deleteCore.call(this);\r\n    };\r\n    /**\r\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site\r\n     *\r\n     * @param colorPaletteUrl The server-relative URL of the color palette file\r\n     * @param fontSchemeUrl The server-relative URL of the font scheme\r\n     * @param backgroundImageUrl The server-relative URL of the background image\r\n     * @param shareGenerated When true, the generated theme files are stored in the root site. When false, they are stored in this web\r\n     */\r\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\r\n        var postBody = jsS({\r\n            backgroundImageUrl: backgroundImageUrl,\r\n            colorPaletteUrl: colorPaletteUrl,\r\n            fontSchemeUrl: fontSchemeUrl,\r\n            shareGenerated: shareGenerated,\r\n        });\r\n        return this.clone(Web_1, \"applytheme\").postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Applies the specified site definition or site template to the Web site that has no template applied to it\r\n     *\r\n     * @param template Name of the site definition or the name of the site template\r\n     */\r\n    Web.prototype.applyWebTemplate = function (template) {\r\n        var q = this.clone(Web_1, \"applywebtemplate\");\r\n        q.concat(\"(@t)\");\r\n        q.query.set(\"@t\", template);\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Checks whether the specified login name belongs to a valid user in the web. If the user doesn't exist, adds the user to the web.\r\n     *\r\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\r\n     */\r\n    Web.prototype.ensureUser = function (loginName) {\r\n        var postBody = jsS({\r\n            logonName: loginName,\r\n        });\r\n        return this.clone(Web_1, \"ensureuser\").postCore({ body: postBody }).then(function (data) {\r\n            return {\r\n                data: data,\r\n                user: new SiteUser(odataUrlFrom(data)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Returns a collection of site templates available for the site\r\n     *\r\n     * @param language The locale id of the site templates to retrieve (default = 1033 [English, US])\r\n     * @param includeCrossLanguage When true, includes language-neutral site templates; otherwise false (default = true)\r\n     */\r\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\r\n        if (language === void 0) { language = 1033; }\r\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\r\n        return new SharePointQueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\r\n    };\r\n    /**\r\n     * Returns the list gallery on the site\r\n     *\r\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\r\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\r\n     */\r\n    Web.prototype.getCatalog = function (type) {\r\n        return this.clone(Web_1, \"getcatalog(\" + type + \")\").select(\"Id\").get().then(function (data) {\r\n            return new List(odataUrlFrom(data));\r\n        });\r\n    };\r\n    /**\r\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query\r\n     *\r\n     * @param query The change query\r\n     */\r\n    Web.prototype.getChanges = function (query) {\r\n        var postBody = jsS({ \"query\": extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\r\n        return this.clone(Web_1, \"getchanges\").postCore({ body: postBody });\r\n    };\r\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\r\n        /**\r\n         * Gets the custom list templates for the site\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getcustomlisttemplates\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the user corresponding to the specified member identifier for the current site\r\n     *\r\n     * @param id The id of the user\r\n     */\r\n    Web.prototype.getUserById = function (id) {\r\n        return new SiteUser(this, \"getUserById(\" + id + \")\");\r\n    };\r\n    /**\r\n     * Returns the name of the image file for the icon that is used to represent the specified file\r\n     *\r\n     * @param filename The file name. If this parameter is empty, the server returns an empty string\r\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1 (default = 0)\r\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\r\n     */\r\n    Web.prototype.mapToIcon = function (filename, size, progId) {\r\n        if (size === void 0) { size = 0; }\r\n        if (progId === void 0) { progId = \"\"; }\r\n        return this.clone(Web_1, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\").get();\r\n    };\r\n    /**\r\n     * Returns the tenant property corresponding to the specified key in the app catalog site\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     */\r\n    Web.prototype.getStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"getStorageEntity('\" + key + \"')\").get();\r\n    };\r\n    /**\r\n     * This will set the storage entity identified by the given key (MUST be called in the context of the app catalog)\r\n     *\r\n     * @param key Id of storage entity to be set\r\n     * @param value Value of storage entity to be set\r\n     * @param description Description of storage entity to be set\r\n     * @param comments Comments of storage entity to be set\r\n     */\r\n    Web.prototype.setStorageEntity = function (key, value, description, comments) {\r\n        if (description === void 0) { description = \"\"; }\r\n        if (comments === void 0) { comments = \"\"; }\r\n        return this.clone(Web_1, \"setStorageEntity\").postCore({\r\n            body: jsS({\r\n                comments: comments,\r\n                description: description,\r\n                key: key,\r\n                value: value,\r\n            }),\r\n        });\r\n    };\r\n    /**\r\n     * This will remove the storage entity identified by the given key\r\n     *\r\n     * @param key Id of storage entity to be removed\r\n     */\r\n    Web.prototype.removeStorageEntity = function (key) {\r\n        return this.clone(Web_1, \"removeStorageEntity('\" + key + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Gets the app catalog for this web\r\n     *\r\n     * @param url Optional url or web containing the app catalog (default: current web)\r\n     */\r\n    Web.prototype.getAppCatalog = function (url) {\r\n        return new AppCatalog(url || this);\r\n    };\r\n    /**\r\n     * Gets the collection of available client side web parts for this web instance\r\n     */\r\n    Web.prototype.getClientSideWebParts = function () {\r\n        return this.clone(SharePointQueryableCollection, \"GetClientSideWebParts\").get();\r\n    };\r\n    /**\r\n     * Creates a new client side page\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param title Display title of the new page\r\n     * @param libraryTitle Title of the library in which to create the new page. Default: \"Site Pages\"\r\n     */\r\n    Web.prototype.addClientSidePage = function (pageName, title, libraryTitle) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        if (libraryTitle === void 0) { libraryTitle = \"Site Pages\"; }\r\n        return ClientSidePage.create(this.lists.getByTitle(libraryTitle), pageName, title);\r\n    };\r\n    /**\r\n     * Creates a new client side page using the library path\r\n     *\r\n     * @param pageName Name of the new page\r\n     * @param listRelativePath The server relative path to the list's root folder (including /sites/ if applicable)\r\n     * @param title Display title of the new page\r\n     */\r\n    Web.prototype.addClientSidePageByPath = function (pageName, listRelativePath, title) {\r\n        if (title === void 0) { title = pageName.replace(/\\.[^/.]+$/, \"\"); }\r\n        return ClientSidePage.create(this.getList(listRelativePath), pageName, title);\r\n    };\r\n    /**\r\n     * Creates the default associated groups (Members, Owners, Visitors) and gives them the default permissions on the site.\r\n     * The target site must have unique permissions and no associated members / owners / visitors groups\r\n     *\r\n     * @param siteOwner The user login name to be added to the site Owners group. Default is the current user\r\n     * @param siteOwner2 The second user login name to be added to the site Owners group. Default is empty\r\n     * @param groupNameSeed The base group name. E.g. 'TestSite' would produce 'TestSite Members' etc.\r\n     */\r\n    Web.prototype.createDefaultAssociatedGroups = function (siteOwner, siteOwner2, groupNameSeed) {\r\n        var q = this.clone(Web_1, \"createDefaultAssociatedGroups(userLogin=@u,userLogin2=@v,groupNameSeed=@s)\");\r\n        q.query.set(\"@u\", \"'\" + encodeURIComponent(siteOwner || \"\") + \"'\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(siteOwner2 || \"\") + \"'\");\r\n        q.query.set(\"@s\", \"'\" + encodeURIComponent(groupNameSeed || \"\") + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * Gets hub site data for the current web.\r\n     *\r\n     * @param forceRefresh Default value is false. When false, the data is returned from the server's cache.\r\n     * When true, the cache is refreshed with the latest updates and then returned.\r\n     * Use this if you just made changes and need to see those changes right away.\r\n     */\r\n    Web.prototype.hubSiteData = function (forceRefresh) {\r\n        if (forceRefresh === void 0) { forceRefresh = false; }\r\n        return this.clone(Web_1, \"hubSiteData(\" + forceRefresh + \")\").get();\r\n    };\r\n    /**\r\n     * Applies theme updates from the parent hub site collection.\r\n     */\r\n    Web.prototype.syncHubSiteTheme = function () {\r\n        return this.clone(Web_1, \"syncHubSiteTheme\").postCore();\r\n    };\r\n    var Web_1;\r\n    Web = Web_1 = __decorate([\r\n        defaultPath(\"_api/web\")\r\n    ], Web);\r\n    return Web;\r\n}(SharePointQueryableShareableWeb));\n\n/**\r\n * Describes a site collection\r\n *\r\n */\r\nvar Site = /** @class */ (function (_super) {\r\n    __extends(Site, _super);\r\n    function Site() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Site_1 = Site;\r\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\r\n        /**\r\n         * Gets the root web of the site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Web(this, \"rootweb\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"features\", {\r\n        /**\r\n         * Gets the active features for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new Features(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\r\n        /**\r\n         * Gets all custom actions for this site collection\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserCustomActions(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a Web instance representing the root web of the site collection\r\n     * correctly setup for chaining within the library\r\n     */\r\n    Site.prototype.getRootWeb = function () {\r\n        return this.rootWeb.select(\"Url\").get().then(function (web) { return new Web(web.Url); });\r\n    };\r\n    /**\r\n     * Gets the context information for this site collection\r\n     */\r\n    Site.prototype.getContextInfo = function () {\r\n        var q = new Site_1(this.parentUrl, \"_api/contextinfo\");\r\n        return q.postCore().then(function (data) {\r\n            if (hOP(data, \"GetContextWebInformation\")) {\r\n                var info = data.GetContextWebInformation;\r\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\r\n                return info;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\r\n     *\r\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\r\n     */\r\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absoluteWebUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetDocumentLibraries\")) {\r\n                return data.GetDocumentLibraries;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Gets the site url from a page url\r\n     *\r\n     * @param absolutePageUrl The absolute url of the page\r\n     */\r\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\r\n        var q = new SharePointQueryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\r\n        q.query.set(\"@v\", \"'\" + absolutePageUrl + \"'\");\r\n        return q.get().then(function (data) {\r\n            if (hOP(data, \"GetWebUrlFromPageUrl\")) {\r\n                return data.GetWebUrlFromPageUrl;\r\n            }\r\n            else {\r\n                return data;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new batch for requests within the context of this site collection\r\n     *\r\n     */\r\n    Site.prototype.createBatch = function () {\r\n        return new SPBatch(this.parentUrl);\r\n    };\r\n    /**\r\n     * Opens a web by id (using POST)\r\n     *\r\n     * @param webId The GUID id of the web to open\r\n     */\r\n    Site.prototype.openWebById = function (webId) {\r\n        return this.clone(Site_1, \"openWebById('\" + webId + \"')\").postCore().then(function (d) { return ({\r\n            data: d,\r\n            web: Web.fromUrl(d[\"odata.id\"] || d.__metadata.uri),\r\n        }); });\r\n    };\r\n    /**\r\n     * Associates a site collection to a hub site.\r\n     *\r\n     * @param siteId Id of the hub site collection you want to join.\r\n     * If you want to disassociate the site collection from hub site, then\r\n     * pass the siteId as 00000000-0000-0000-0000-000000000000\r\n     */\r\n    Site.prototype.joinHubSite = function (siteId) {\r\n        return this.clone(Site_1, \"joinHubSite('\" + siteId + \"')\").postCore();\r\n    };\r\n    /**\r\n     * Registers the current site collection as hub site collection\r\n     */\r\n    Site.prototype.registerHubSite = function () {\r\n        return this.clone(Site_1, \"registerHubSite\").postCore();\r\n    };\r\n    /**\r\n     * Unregisters the current site collection as hub site collection.\r\n     */\r\n    Site.prototype.unRegisterHubSite = function () {\r\n        return this.clone(Site_1, \"unRegisterHubSite\").postCore();\r\n    };\r\n    /**\r\n     * Creates a Modern communication site.\r\n     *\r\n     * @param title The title of the site to create\r\n     * @param lcid The language to use for the site. If not specified will default to 1033 (English).\r\n     * @param shareByEmailEnabled If set to true, it will enable sharing files via Email. By default it is set to false\r\n     * @param url The fully qualified URL (e.g. https://yourtenant.sharepoint.com/sites/mysitecollection) of the site.\r\n     * @param description The description of the communication site.\r\n     * @param classification The Site classification to use. For instance 'Contoso Classified'. See https://www.youtube.com/watch?v=E-8Z2ggHcS0 for more information\r\n     * @param siteDesignId The Guid of the site design to be used.\r\n     *                     You can use the below default OOTB GUIDs:\r\n     *                     Topic: null\r\n     *                     Showcase: 6142d2a0-63a5-4ba0-aede-d9fefca2c767\r\n     *                     Blank: f6cc5403-0d63-442e-96c0-285923709ffc\r\n     */\r\n    Site.prototype.createCommunicationSite = function (title, lcid, shareByEmailEnabled, url, description, classification, siteDesignId) {\r\n        var _this = this;\r\n        if (lcid === void 0) { lcid = 1033; }\r\n        if (shareByEmailEnabled === void 0) { shareByEmailEnabled = false; }\r\n        var props = {\r\n            Classification: classification,\r\n            Description: description,\r\n            Lcid: lcid,\r\n            ShareByEmailEnabled: shareByEmailEnabled,\r\n            SiteDesignId: siteDesignId,\r\n            Title: title,\r\n            Url: url,\r\n            WebTemplate: \"SITEPAGEPUBLISHING#0\",\r\n            WebTemplateExtensionId: \"00000000-0000-0000-0000-000000000000\",\r\n        };\r\n        var postBody = jsS({\r\n            \"request\": extend({\r\n                \"__metadata\": { \"type\": \"Microsoft.SharePoint.Portal.SPSiteCreationRequest\" },\r\n            }, props),\r\n        });\r\n        return this.getRootWeb().then(function (d) { return __awaiter(_this, void 0, void 0, function () {\r\n            var client, methodUrl;\r\n            return __generator(this, function (_a) {\r\n                client = new SPHttpClient();\r\n                methodUrl = d.parentUrl + \"/_api/SPSiteManager/Create\";\r\n                return [2 /*return*/, client.post(methodUrl, {\r\n                        body: postBody,\r\n                        headers: {\r\n                            \"Accept\": \"application/json;odata=verbose\",\r\n                            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n                        },\r\n                    }).then(function (r) { return r.json(); })];\r\n            });\r\n        }); });\r\n    };\r\n    /**\r\n     * Creates a Modern team site backed by Office 365 group. For use in SP Online only. This will not work with App-only tokens\r\n     *\r\n     * @param displayName The title or display name of the Modern team site to be created\r\n     * @param alias Alias of the underlying Office 365 Group\r\n     * @param isPublic Defines whether the Office 365 Group will be public (default), or private.\r\n     * @param lcid The language to use for the site. If not specified will default to English (1033).\r\n     * @param description The description of the site to be created.\r\n     * @param classification The Site classification to use. For instance 'Contoso Classified'. See https://www.youtube.com/watch?v=E-8Z2ggHcS0 for more information\r\n     * @param owners The Owners of the site to be created\r\n     */\r\n    Site.prototype.createModernTeamSite = function (displayName, alias, isPublic, lcid, description, classification, owners) {\r\n        var _this = this;\r\n        if (isPublic === void 0) { isPublic = true; }\r\n        if (lcid === void 0) { lcid = 1033; }\r\n        if (description === void 0) { description = \"\"; }\r\n        if (classification === void 0) { classification = \"\"; }\r\n        var postBody = jsS({\r\n            alias: alias,\r\n            displayName: displayName,\r\n            isPublic: isPublic,\r\n            optionalParams: {\r\n                Classification: classification,\r\n                CreationOptions: {\r\n                    \"results\": [\"SPSiteLanguage:\" + lcid],\r\n                },\r\n                Description: description,\r\n                Owners: {\r\n                    \"results\": owners ? owners : [],\r\n                },\r\n            },\r\n        });\r\n        return this.getRootWeb().then(function (d) { return __awaiter(_this, void 0, void 0, function () {\r\n            var client, methodUrl;\r\n            return __generator(this, function (_a) {\r\n                client = new SPHttpClient();\r\n                methodUrl = d.parentUrl + \"/_api/GroupSiteManager/CreateGroupEx\";\r\n                return [2 /*return*/, client.post(methodUrl, {\r\n                        body: postBody,\r\n                        headers: {\r\n                            \"Accept\": \"application/json;odata=verbose\",\r\n                            \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\",\r\n                        },\r\n                    }).then(function (r) { return r.json(); })];\r\n            });\r\n        }); });\r\n    };\r\n    var Site_1;\r\n    Site = Site_1 = __decorate([\r\n        defaultPath(\"_api/site\")\r\n    ], Site);\r\n    return Site;\r\n}(SharePointQueryableInstance));\n\nvar UserProfileQuery = /** @class */ (function (_super) {\r\n    __extends(UserProfileQuery, _super);\r\n    /**\r\n     * Creates a new instance of the UserProfileQuery class\r\n     *\r\n     * @param baseUrl The url or SharePointQueryable which forms the parent of this user profile query\r\n     */\r\n    function UserProfileQuery(baseUrl, path) {\r\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\r\n        var _this = _super.call(this, baseUrl, path) || this;\r\n        _this.clientPeoplePickerQuery = (new ClientPeoplePickerQuery(baseUrl)).configureFrom(_this);\r\n        _this.profileLoader = (new ProfileLoader(baseUrl)).configureFrom(_this);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\r\n        /**\r\n         * The url of the edit profile page for the current user\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"EditProfileLink\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\r\n        /**\r\n         * A boolean value that indicates whether the current user's \"People I'm Following\" list is public\r\n         */\r\n        get: function () {\r\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * A boolean value that indicates whether the current user is being followed by the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * A boolean value that indicates whether the current user is following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets tags that the current user is following\r\n     *\r\n     * @param maxCount The maximum number of tags to retrieve (default is 20)\r\n     */\r\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\r\n        if (maxCount === void 0) { maxCount = 20; }\r\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\").get();\r\n    };\r\n    /**\r\n     * Gets the people who are following the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\r\n        /**\r\n         * Gets the people who are following the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new SharePointQueryableCollection(this, \"getmyfollowers\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\r\n        /**\r\n         * Gets user properties for the current user\r\n         *\r\n         */\r\n        get: function () {\r\n            return new UserProfileQuery(this, \"getmyproperties\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the people who the specified user is following\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Gets user properties for the specified user.\r\n     *\r\n     * @param loginName The account name of the user.\r\n     */\r\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\r\n        /**\r\n         * Gets the 20 most popular hash tags over the past week, sorted so that the most popular tag appears first\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.clone(UserProfileQuery, null);\r\n            q.concat(\".gettrendingtags\");\r\n            return q.get();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the specified user profile property for the specified user\r\n     *\r\n     * @param loginName The account name of the user\r\n     * @param propertyName The case-sensitive name of the property to get\r\n     */\r\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\r\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Removes the specified user from the user's list of suggested people to follow\r\n     *\r\n     * @param loginName The account name of the user\r\n     */\r\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\r\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\r\n        return q.postCore();\r\n    };\r\n    /**\r\n     * A boolean values that indicates whether the first user is following the second user\r\n     *\r\n     * @param follower The account name of the user who might be following the followee\r\n     * @param followee The account name of the user who might be followed by the follower\r\n     */\r\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\r\n        var q = this.clone(UserProfileQuery, null);\r\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\r\n        q.query.set(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\r\n        q.query.set(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\r\n        return q.get();\r\n    };\r\n    /**\r\n     * Uploads and sets the user profile picture (Users can upload a picture to their own profile only). Not supported for batching.\r\n     *\r\n     * @param profilePicSource Blob data representing the user's picture in BMP, JPEG, or PNG format of up to 4.76MB\r\n     */\r\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var buffer = null;\r\n            var reader = new FileReader();\r\n            reader.onload = function (e) { return buffer = e.target.result; };\r\n            reader.readAsArrayBuffer(profilePicSource);\r\n            var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\r\n            request.postCore({\r\n                body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\r\n            }).then(function (_) { return resolve(); }).catch(function (e) { return reject(e); });\r\n        });\r\n    };\r\n    /**\r\n     * Sets single value User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValue Property value\r\n     */\r\n    UserProfileQuery.prototype.setSingleValueProfileProperty = function (accountName, propertyName, propertyValue) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValue: propertyValue,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetSingleValueProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Sets multi valued User Profile property\r\n     *\r\n     * @param accountName The account name of the user\r\n     * @param propertyName Property name\r\n     * @param propertyValues Property values\r\n     */\r\n    UserProfileQuery.prototype.setMultiValuedProfileProperty = function (accountName, propertyName, propertyValues) {\r\n        var postBody = jsS({\r\n            accountName: accountName,\r\n            propertyName: propertyName,\r\n            propertyValues: propertyValues,\r\n        });\r\n        return this.clone(UserProfileQuery, \"SetMultiValuedProfileProperty\")\r\n            .postCore({ body: postBody });\r\n    };\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\r\n        var emails = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            emails[_i] = arguments[_i];\r\n        }\r\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\r\n    };\r\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.ownerUserProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile for the current user\r\n         */\r\n        get: function () {\r\n            return this.profileLoader.userProfile;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.profileLoader.createPersonalSite(interactiveRequest);\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private\r\n     */\r\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\r\n        return this.profileLoader.shareAllSocialData(share);\r\n    };\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerResolveUser(queryParams);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    UserProfileQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        return this.clientPeoplePickerQuery.clientPeoplePickerSearchUser(queryParams);\r\n    };\r\n    return UserProfileQuery;\r\n}(SharePointQueryableInstance));\r\nvar ProfileLoader = /** @class */ (function (_super) {\r\n    __extends(ProfileLoader, _super);\r\n    function ProfileLoader() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ProfileLoader_1 = ProfileLoader;\r\n    /**\r\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only) Doesn't support batching\r\n     *\r\n     * @param emails The email addresses of the users to provision sites for\r\n     */\r\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\r\n        return this.clone(ProfileLoader_1, \"createpersonalsiteenqueuebulk\", false).postCore({\r\n            body: jsS({ \"emailIDs\": emails }),\r\n        });\r\n    };\r\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\r\n        /**\r\n         * Gets the user profile of the site owner.\r\n         *\r\n         */\r\n        get: function () {\r\n            var q = this.getParent(ProfileLoader_1, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\r\n            if (this.hasBatch) {\r\n                q = q.inBatch(this.batch);\r\n            }\r\n            return q.postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\r\n        /**\r\n         * Gets the user profile of the current user.\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.clone(ProfileLoader_1, \"getuserprofile\").postCore();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\r\n     *\r\n     * @param interactiveRequest true if interactively (web) initiated request, or false (default) if non-interactively (client) initiated request\r\n     */\r\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\r\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\").postCore();\r\n    };\r\n    /**\r\n     * Sets the privacy settings for this profile\r\n     *\r\n     * @param share true to make all social data public; false to make all social data private.\r\n     */\r\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\r\n        return this.clone(ProfileLoader_1, \"getuserprofile/shareallsocialdata(\" + share + \")\").postCore();\r\n    };\r\n    var ProfileLoader_1;\r\n    ProfileLoader = ProfileLoader_1 = __decorate([\r\n        defaultPath(\"_api/sp.userprofiles.profileloader.getprofileloader\")\r\n    ], ProfileLoader);\r\n    return ProfileLoader;\r\n}(SharePointQueryable));\r\nvar ClientPeoplePickerQuery = /** @class */ (function (_super) {\r\n    __extends(ClientPeoplePickerQuery, _super);\r\n    function ClientPeoplePickerQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ClientPeoplePickerQuery_1 = ClientPeoplePickerQuery;\r\n    /**\r\n     * Resolves user or group using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform resolve\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerResolveUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickerresolveuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerResolveUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Searches for users or groups using specified query parameters\r\n     *\r\n     * @param queryParams The query parameters used to perform search\r\n     */\r\n    ClientPeoplePickerQuery.prototype.clientPeoplePickerSearchUser = function (queryParams) {\r\n        var q = this.clone(ClientPeoplePickerQuery_1, null);\r\n        q.concat(\".clientpeoplepickersearchuser\");\r\n        return q.postCore({\r\n            body: this.createClientPeoplePickerQueryParametersRequestBody(queryParams),\r\n        })\r\n            .then(function (res) {\r\n            if (typeof res === \"object\") {\r\n                return res.ClientPeoplePickerSearchUser;\r\n            }\r\n            return res;\r\n        })\r\n            .then(JSON.parse);\r\n    };\r\n    /**\r\n     * Creates ClientPeoplePickerQueryParameters request body\r\n     *\r\n     * @param queryParams The query parameters to create request body\r\n     */\r\n    ClientPeoplePickerQuery.prototype.createClientPeoplePickerQueryParametersRequestBody = function (queryParams) {\r\n        return jsS({\r\n            \"queryParams\": extend(metadata(\"SP.UI.ApplicationPages.ClientPeoplePickerQueryParameters\"), queryParams),\r\n        });\r\n    };\r\n    var ClientPeoplePickerQuery_1;\r\n    ClientPeoplePickerQuery = ClientPeoplePickerQuery_1 = __decorate([\r\n        defaultPath(\"_api/sp.ui.applicationpages.clientpeoplepickerwebserviceinterface\")\r\n    ], ClientPeoplePickerQuery);\r\n    return ClientPeoplePickerQuery;\r\n}(SharePointQueryable));\n\n/**\r\n * Exposes social following methods\r\n */\r\nvar SocialQuery = /** @class */ (function (_super) {\r\n    __extends(SocialQuery, _super);\r\n    function SocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SocialQuery_1 = SocialQuery;\r\n    Object.defineProperty(SocialQuery.prototype, \"my\", {\r\n        get: function () {\r\n            return new MySocialQuery(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed sites.\r\n     */\r\n    SocialQuery.prototype.getFollowedSitesUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedSitesUri\").get().then(function (r) {\r\n            return r.FollowedSitesUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets a URI to a site that lists the current user's followed documents.\r\n     */\r\n    SocialQuery.prototype.getFollowedDocumentsUri = function () {\r\n        return this.clone(SocialQuery_1, \"FollowedDocumentsUri\").get().then(function (r) {\r\n            return r.FollowedDocumentsUri || r;\r\n        });\r\n    };\r\n    /**\r\n     * Makes the current user start following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to start following\r\n     */\r\n    SocialQuery.prototype.follow = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"follow\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Indicates whether the current user is following a specified user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to find the following status for\r\n     */\r\n    SocialQuery.prototype.isFollowed = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"isfollowed\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Makes the current user stop following a user, document, site, or tag\r\n     *\r\n     * @param actorInfo The actor to stop following\r\n     */\r\n    SocialQuery.prototype.stopFollowing = function (actorInfo) {\r\n        return this.clone(SocialQuery_1, \"stopfollowing\").postCore({ body: this.createSocialActorInfoRequestBody(actorInfo) });\r\n    };\r\n    /**\r\n     * Creates SocialActorInfo request body\r\n     *\r\n     * @param actorInfo The actor to create request body\r\n     */\r\n    SocialQuery.prototype.createSocialActorInfoRequestBody = function (actorInfo) {\r\n        return jsS({\r\n            \"actor\": Object.assign(metadata(\"SP.Social.SocialActorInfo\"), {\r\n                Id: null,\r\n            }, actorInfo),\r\n        });\r\n    };\r\n    var SocialQuery_1;\r\n    SocialQuery = SocialQuery_1 = __decorate([\r\n        defaultPath(\"_api/social.following\")\r\n    ], SocialQuery);\r\n    return SocialQuery;\r\n}(SharePointQueryableInstance));\r\nvar MySocialQuery = /** @class */ (function (_super) {\r\n    __extends(MySocialQuery, _super);\r\n    function MySocialQuery() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MySocialQuery_1 = MySocialQuery;\r\n    /**\r\n     * Gets users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followed = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followed(types=\" + types + \")\").get().then(function (r) {\r\n            return hOP(r, \"Followed\") ? r.Followed.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the count of users, documents, sites, and tags that the current user is following.\r\n     *\r\n     * @param types Bitwise set of SocialActorTypes to retrieve\r\n     */\r\n    MySocialQuery.prototype.followedCount = function (types) {\r\n        return this.clone(MySocialQuery_1, \"followedcount(types=\" + types + \")\").get().then(function (r) {\r\n            return r.FollowedCount || r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets the users who are following the current user.\r\n     */\r\n    MySocialQuery.prototype.followers = function () {\r\n        return this.clone(MySocialQuery_1, \"followers\").get().then(function (r) {\r\n            return hOP(r, \"Followers\") ? r.Followers.results : r;\r\n        });\r\n    };\r\n    /**\r\n     * Gets users who the current user might want to follow.\r\n     */\r\n    MySocialQuery.prototype.suggestions = function () {\r\n        return this.clone(MySocialQuery_1, \"suggestions\").get().then(function (r) {\r\n            return hOP(r, \"Suggestions\") ? r.Suggestions.results : r;\r\n        });\r\n    };\r\n    var MySocialQuery_1;\r\n    MySocialQuery = MySocialQuery_1 = __decorate([\r\n        defaultPath(\"my\")\r\n    ], MySocialQuery);\r\n    return MySocialQuery;\r\n}(SharePointQueryableInstance));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\nvar SocialActorType;\r\n(function (SocialActorType) {\r\n    SocialActorType[SocialActorType[\"User\"] = 0] = \"User\";\r\n    SocialActorType[SocialActorType[\"Document\"] = 1] = \"Document\";\r\n    SocialActorType[SocialActorType[\"Site\"] = 2] = \"Site\";\r\n    SocialActorType[SocialActorType[\"Tag\"] = 3] = \"Tag\";\r\n})(SocialActorType || (SocialActorType = {}));\r\n/**\r\n * Social actor type\r\n *\r\n */\r\n/* tslint:disable:no-bitwise */\r\nvar SocialActorTypes;\r\n(function (SocialActorTypes) {\r\n    SocialActorTypes[SocialActorTypes[\"None\"] = 0] = \"None\";\r\n    SocialActorTypes[SocialActorTypes[\"User\"] = 1] = \"User\";\r\n    SocialActorTypes[SocialActorTypes[\"Document\"] = 2] = \"Document\";\r\n    SocialActorTypes[SocialActorTypes[\"Site\"] = 4] = \"Site\";\r\n    SocialActorTypes[SocialActorTypes[\"Tag\"] = 8] = \"Tag\";\r\n    /**\r\n     * The set excludes documents and sites that do not have feeds.\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"ExcludeContentWithoutFeeds\"] = 268435456] = \"ExcludeContentWithoutFeeds\";\r\n    /**\r\n     * The set includes group sites\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"IncludeGroupsSites\"] = 536870912] = \"IncludeGroupsSites\";\r\n    /**\r\n     * The set includes only items created within the last 24 hours\r\n     */\r\n    SocialActorTypes[SocialActorTypes[\"WithinLast24Hours\"] = 1073741824] = \"WithinLast24Hours\";\r\n})(SocialActorTypes || (SocialActorTypes = {}));\r\n/* tslint:enable */\r\n/**\r\n * Result from following\r\n *\r\n */\r\nvar SocialFollowResult;\r\n(function (SocialFollowResult) {\r\n    SocialFollowResult[SocialFollowResult[\"Ok\"] = 0] = \"Ok\";\r\n    SocialFollowResult[SocialFollowResult[\"AlreadyFollowing\"] = 1] = \"AlreadyFollowing\";\r\n    SocialFollowResult[SocialFollowResult[\"LimitReached\"] = 2] = \"LimitReached\";\r\n    SocialFollowResult[SocialFollowResult[\"InternalError\"] = 3] = \"InternalError\";\r\n})(SocialFollowResult || (SocialFollowResult = {}));\r\n/**\r\n * Specifies an exception or status code.\r\n */\r\nvar SocialStatusCode;\r\n(function (SocialStatusCode) {\r\n    /**\r\n     * The operation completed successfully\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"OK\"] = 0] = \"OK\";\r\n    /**\r\n     * The request is invalid.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidRequest\"] = 1] = \"InvalidRequest\";\r\n    /**\r\n     *  The current user is not authorized to perform the operation.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AccessDenied\"] = 2] = \"AccessDenied\";\r\n    /**\r\n     * The target of the operation was not found.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotFound\"] = 3] = \"ItemNotFound\";\r\n    /**\r\n     * The operation is invalid for the target's current state.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InvalidOperation\"] = 4] = \"InvalidOperation\";\r\n    /**\r\n     * The operation completed without modifying the target.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"ItemNotModified\"] = 5] = \"ItemNotModified\";\r\n    /**\r\n     * The operation failed because an internal error occurred.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"InternalError\"] = 6] = \"InternalError\";\r\n    /**\r\n     * The operation failed because the server could not access the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheReadError\"] = 7] = \"CacheReadError\";\r\n    /**\r\n     * The operation succeeded but the server could not update the distributed cache.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CacheUpdateError\"] = 8] = \"CacheUpdateError\";\r\n    /**\r\n     * No personal site exists for the current user, and no further information is available.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PersonalSiteNotFound\"] = 9] = \"PersonalSiteNotFound\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one failed.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FailedToCreatePersonalSite\"] = 10] = \"FailedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and a previous attempt to create one was not authorized.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"NotAuthorizedToCreatePersonalSite\"] = 11] = \"NotAuthorizedToCreatePersonalSite\";\r\n    /**\r\n     * No personal site exists for the current user, and no attempt should be made to create one.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"CannotCreatePersonalSite\"] = 12] = \"CannotCreatePersonalSite\";\r\n    /**\r\n     * The operation was rejected because an internal limit had been reached.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"LimitReached\"] = 13] = \"LimitReached\";\r\n    /**\r\n     * The operation failed because an error occurred during the processing of the specified attachment.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"AttachmentError\"] = 14] = \"AttachmentError\";\r\n    /**\r\n     * The operation succeeded with recoverable errors; the returned data is incomplete.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"PartialData\"] = 15] = \"PartialData\";\r\n    /**\r\n     * A required SharePoint feature is not enabled.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"FeatureDisabled\"] = 16] = \"FeatureDisabled\";\r\n    /**\r\n     * The site's storage quota has been exceeded.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"StorageQuotaExceeded\"] = 17] = \"StorageQuotaExceeded\";\r\n    /**\r\n     * The operation failed because the server could not access the database.\r\n     */\r\n    SocialStatusCode[SocialStatusCode[\"DatabaseError\"] = 18] = \"DatabaseError\";\r\n})(SocialStatusCode || (SocialStatusCode = {}));\n\n/**\r\n * Implements the site script API REST methods\r\n *\r\n */\r\nvar SiteScripts = /** @class */ (function (_super) {\r\n    __extends(SiteScripts, _super);\r\n    /**\r\n     * Creates a new instance of the SiteScripts method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function SiteScripts(baseUrl, methodName) {\r\n        return _super.call(this, SiteScripts.getBaseUrl(baseUrl), \"_api/Microsoft.Sharepoint.Utilities.WebTemplateExtensions.SiteScriptUtility.\" + methodName) || this;\r\n    }\r\n    SiteScripts.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    SiteScripts.prototype.execute = function (props) {\r\n        return this.postCore({\r\n            body: JSON.stringify(props),\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list of information on all existing site scripts.\r\n     */\r\n    SiteScripts.prototype.getSiteScripts = function () {\r\n        return this.clone(SiteScripts, \"GetSiteScripts\", true).execute({});\r\n    };\r\n    /**\r\n     * Creates a new site script.\r\n     *\r\n     * @param title The display name of the site design.\r\n     * @param content JSON value that describes the script. For more information, see JSON reference.\r\n     */\r\n    SiteScripts.prototype.createSiteScript = function (title, description, content) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"CreateSiteScript(Title=@title,Description=@desc)?@title='\" + encodeURIComponent(title) + \"'&@desc='\" + encodeURIComponent(description) + \"'\")\r\n                            .execute(content)];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets information about a specific site script. It also returns the JSON of the script.\r\n     *\r\n     * @param id The ID of the site script to get information about.\r\n     */\r\n    SiteScripts.prototype.getSiteScriptMetadata = function (id) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"GetSiteScriptMetadata\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a site script.\r\n     *\r\n     * @param id The ID of the site script to delete.\r\n     */\r\n    SiteScripts.prototype.deleteSiteScript = function (id) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteScripts, \"DeleteSiteScript\").execute({ id: id })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Updates a site script with new values. In the REST call, all parameters are optional except the site script Id.\r\n     *\r\n     * @param siteScriptUpdateInfo Object that contains the information to update a site script.\r\n     *                             Make sure you stringify the content object or pass it in the second 'content' parameter\r\n     * @param content (Optional) A new JSON script defining the script actions. For more information, see Site design JSON schema.\r\n     */\r\n    SiteScripts.prototype.updateSiteScript = function (siteScriptUpdateInfo, content) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (content) {\r\n                            siteScriptUpdateInfo.Content = JSON.stringify(content);\r\n                        }\r\n                        return [4 /*yield*/, this.clone(SiteScripts, \"UpdateSiteScript\").execute({ updateInfo: siteScriptUpdateInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SiteScripts;\r\n}(SharePointQueryable));\n\n/**\r\n * Implements the site designs API REST methods\r\n *\r\n */\r\nvar SiteDesigns = /** @class */ (function (_super) {\r\n    __extends(SiteDesigns, _super);\r\n    /**\r\n     * Creates a new instance of the SiteDesigns method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function SiteDesigns(baseUrl, methodName) {\r\n        return _super.call(this, SiteDesigns.getBaseUrl(baseUrl), \"_api/Microsoft.Sharepoint.Utilities.WebTemplateExtensions.SiteScriptUtility.\" + methodName) || this;\r\n    }\r\n    SiteDesigns.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    SiteDesigns.prototype.execute = function (props) {\r\n        return this.postCore({\r\n            body: JSON.stringify(props),\r\n            headers: {\r\n                \"Content-Type\": \"application/json;charset=utf-8\",\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Creates a new site design available to users when they create a new site from the SharePoint home page.\r\n     *\r\n     * @param creationInfo A sitedesign creation information object\r\n     */\r\n    SiteDesigns.prototype.createSiteDesign = function (creationInfo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"CreateSiteDesign\").execute({ info: creationInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Applies a site design to an existing site collection.\r\n     *\r\n     * @param siteDesignId The ID of the site design to apply.\r\n     * @param webUrl The URL of the site collection where you want to apply the site design.\r\n     */\r\n    SiteDesigns.prototype.applySiteDesign = function (siteDesignId, webUrl) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"ApplySiteDesign\").execute({ siteDesignId: siteDesignId, \"webUrl\": webUrl })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list of information about existing site designs.\r\n     */\r\n    SiteDesigns.prototype.getSiteDesigns = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesigns\").execute({})];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets information about a specific site design.\r\n     * @param id The ID of the site design to get information about.\r\n     */\r\n    SiteDesigns.prototype.getSiteDesignMetadata = function (id) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesignMetadata\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Updates a site design with new values. In the REST call, all parameters are optional except the site script Id.\r\n     * If you had previously set the IsDefault parameter to TRUE and wish it to remain true, you must pass in this parameter again (otherwise it will be reset to FALSE).\r\n     * @param updateInfo A sitedesign update information object\r\n     */\r\n    SiteDesigns.prototype.updateSiteDesign = function (updateInfo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"UpdateSiteDesign\").execute({ updateInfo: updateInfo })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Deletes a site design.\r\n     * @param id The ID of the site design to delete.\r\n     */\r\n    SiteDesigns.prototype.deleteSiteDesign = function (id) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"DeleteSiteDesign\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a list of principals that have access to a site design.\r\n     * @param id The ID of the site design to get rights information from.\r\n     */\r\n    SiteDesigns.prototype.getSiteDesignRights = function (id) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GetSiteDesignRights\").execute({ id: id })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Grants access to a site design for one or more principals.\r\n     * @param id The ID of the site design to grant rights on.\r\n     * @param principalNames An array of one or more principals to grant view rights.\r\n     *                       Principals can be users or mail-enabled security groups in the form of \"alias\" or \"alias@<domain name>.com\"\r\n     * @param grantedRights Always set to 1. This represents the View right.\r\n     */\r\n    SiteDesigns.prototype.grantSiteDesignRights = function (id, principalNames, grantedRights) {\r\n        if (grantedRights === void 0) { grantedRights = 1; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"GrantSiteDesignRights\")\r\n                            .execute({\r\n                            \"grantedRights\": grantedRights.toString(),\r\n                            \"id\": id,\r\n                            \"principalNames\": principalNames,\r\n                        })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Revokes access from a site design for one or more principals.\r\n     * @param id The ID of the site design to revoke rights from.\r\n     * @param principalNames An array of one or more principals to revoke view rights from.\r\n     *                       If all principals have rights revoked on the site design, the site design becomes viewable to everyone.\r\n     */\r\n    SiteDesigns.prototype.revokeSiteDesignRights = function (id, principalNames) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.clone(SiteDesigns, \"RevokeSiteDesignRights\")\r\n                            .execute({\r\n                            \"id\": id,\r\n                            \"principalNames\": principalNames,\r\n                        })];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SiteDesigns;\r\n}(SharePointQueryable));\n\n/**\r\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\r\n */\r\nvar UtilityMethod = /** @class */ (function (_super) {\r\n    __extends(UtilityMethod, _super);\r\n    /**\r\n     * Creates a new instance of the Utility method class\r\n     *\r\n     * @param baseUrl The parent url provider\r\n     * @param methodName The static method name to call on the utility class\r\n     */\r\n    function UtilityMethod(baseUrl, methodName) {\r\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\r\n    }\r\n    UtilityMethod.getBaseUrl = function (candidate) {\r\n        if (typeof candidate === \"string\") {\r\n            return candidate;\r\n        }\r\n        var c = candidate;\r\n        var url = c.toUrl();\r\n        var index = url.indexOf(\"_api/\");\r\n        if (index < 0) {\r\n            return url;\r\n        }\r\n        return url.substr(0, index);\r\n    };\r\n    UtilityMethod.prototype.excute = function (props) {\r\n        return this.postCore({\r\n            body: jsS(props),\r\n        });\r\n    };\r\n    /**\r\n     * Sends an email based on the supplied properties\r\n     *\r\n     * @param props The properties of the email to send\r\n     */\r\n    UtilityMethod.prototype.sendEmail = function (props) {\r\n        var params = {\r\n            properties: extend(metadata(\"SP.Utilities.EmailProperties\"), {\r\n                Body: props.Body,\r\n                From: props.From,\r\n                Subject: props.Subject,\r\n            }),\r\n        };\r\n        if (props.To && props.To.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                To: { results: props.To },\r\n            });\r\n        }\r\n        if (props.CC && props.CC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                CC: { results: props.CC },\r\n            });\r\n        }\r\n        if (props.BCC && props.BCC.length > 0) {\r\n            params.properties = extend(params.properties, {\r\n                BCC: { results: props.BCC },\r\n            });\r\n        }\r\n        if (props.AdditionalHeaders) {\r\n            params.properties = extend(params.properties, {\r\n                AdditionalHeaders: props.AdditionalHeaders,\r\n            });\r\n        }\r\n        return this.clone(UtilityMethod, \"SendEmail\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\r\n        return this.clone(UtilityMethod, \"GetCurrentUserEmailAddresses\", true).excute({});\r\n    };\r\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\r\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\r\n        var params = {\r\n            addToUserInfoList: addToUserInfoList,\r\n            input: input,\r\n            inputIsEmailOnly: inputIsEmailOnly,\r\n            matchUserInfoList: matchUserInfoList,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"ResolvePrincipalInCurrentContext\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\r\n        var params = {\r\n            groupName: groupName,\r\n            input: input,\r\n            maxCount: maxCount,\r\n            scopes: scopes,\r\n            sources: sources,\r\n        };\r\n        return this.clone(UtilityMethod, \"SearchPrincipalsUsingContextWeb\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\r\n        var params = {\r\n            pageAddress: pageAddress,\r\n        };\r\n        return this.clone(UtilityMethod, \"CreateEmailBodyForInvitation\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\r\n        if (maxCount === void 0) { maxCount = 30; }\r\n        var params = {\r\n            inputs: inputs,\r\n            maxCount: maxCount,\r\n        };\r\n        return this.clone(UtilityMethod, \"ExpandGroupsToPrincipals\", true).excute(params);\r\n    };\r\n    UtilityMethod.prototype.createWikiPage = function (info) {\r\n        return this.clone(UtilityMethod, \"CreateWikiPageInContextWeb\", true).excute({\r\n            parameters: info,\r\n        }).then(function (r) {\r\n            return {\r\n                data: r,\r\n                file: new File(odataUrlFrom(r)),\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Checks if file or folder name contains invalid characters\r\n     *\r\n     * @param input File or folder name to check\r\n     * @param onPremise Set to true for SharePoint On-Premise\r\n     * @returns True if contains invalid chars, false otherwise\r\n     */\r\n    UtilityMethod.prototype.containsInvalidFileFolderChars = function (input, onPremise) {\r\n        if (onPremise === void 0) { onPremise = false; }\r\n        if (onPremise) {\r\n            return UtilityMethod.InvalidFileFolderNameCharsOnPremiseRegex.test(input);\r\n        }\r\n        else {\r\n            return UtilityMethod.InvalidFileFolderNameCharsOnlineRegex.test(input);\r\n        }\r\n    };\r\n    /**\r\n     * Removes invalid characters from file or folder name\r\n     *\r\n     * @param input File or folder name\r\n     * @param replacer Value that will replace invalid characters\r\n     * @param onPremise Set to true for SharePoint On-Premise\r\n     * @returns File or folder name with replaced invalid characters\r\n     */\r\n    UtilityMethod.prototype.stripInvalidFileFolderChars = function (input, replacer, onPremise) {\r\n        if (replacer === void 0) { replacer = \"\"; }\r\n        if (onPremise === void 0) { onPremise = false; }\r\n        if (onPremise) {\r\n            return input.replace(UtilityMethod.InvalidFileFolderNameCharsOnPremiseRegex, replacer);\r\n        }\r\n        else {\r\n            return input.replace(UtilityMethod.InvalidFileFolderNameCharsOnlineRegex, replacer);\r\n        }\r\n    };\r\n    UtilityMethod.InvalidFileFolderNameCharsOnlineRegex = /[\"*:<>?/\\\\|\\x00-\\x1f\\x7f-\\x9f]/g;\r\n    UtilityMethod.InvalidFileFolderNameCharsOnPremiseRegex = /[\"#%*:<>?/\\\\|\\x00-\\x1f\\x7f-\\x9f]/g;\r\n    return UtilityMethod;\r\n}(SharePointQueryable));\n\n/**\r\n * Root of the SharePoint REST module\r\n */\r\nvar SPRest = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of the SPRest class\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    function SPRest(_options, _baseUrl) {\r\n        if (_options === void 0) { _options = {}; }\r\n        if (_baseUrl === void 0) { _baseUrl = \"\"; }\r\n        this._options = _options;\r\n        this._baseUrl = _baseUrl;\r\n    }\r\n    /**\r\n     * Configures instance with additional options and baseUrl.\r\n     * Provided configuration used by other objects in a chain\r\n     *\r\n     * @param options Additional options\r\n     * @param baseUrl A string that should form the base part of the url\r\n     */\r\n    SPRest.prototype.configure = function (options, baseUrl) {\r\n        if (baseUrl === void 0) { baseUrl = \"\"; }\r\n        return new SPRest(options, baseUrl);\r\n    };\r\n    /**\r\n     * Global SharePoint configuration options\r\n     *\r\n     * @param config The SharePoint configuration to apply\r\n     */\r\n    SPRest.prototype.setup = function (config) {\r\n        setup(config);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.searchSuggest = function (query) {\r\n        var finalQuery;\r\n        if (typeof query === \"string\") {\r\n            finalQuery = { querytext: query };\r\n        }\r\n        else {\r\n            finalQuery = query;\r\n        }\r\n        return this.create(SearchSuggest).execute(finalQuery);\r\n    };\r\n    /**\r\n     * Executes a search against this web context\r\n     *\r\n     * @param query The SearchQuery definition\r\n     */\r\n    SPRest.prototype.search = function (query) {\r\n        return this.create(Search).execute(query);\r\n    };\r\n    /**\r\n     * Executes the provided search query, caching the results\r\n     *\r\n     * @param query The SearchQuery definition\r\n     * @param options The set of caching options used to store the results\r\n     */\r\n    SPRest.prototype.searchWithCaching = function (query, options) {\r\n        return this.create(Search).usingCaching(options).execute(query);\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"site\", {\r\n        /**\r\n         * Begins a site collection scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Site);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"web\", {\r\n        /**\r\n         * Begins a web scoped REST request\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(Web);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\r\n        /**\r\n         * Access to user profile methods\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.create(UserProfileQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"social\", {\r\n        /**\r\n         * Access to social methods\r\n         */\r\n        get: function () {\r\n            return this.create(SocialQuery);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"navigation\", {\r\n        /**\r\n         * Access to the site collection level navigation service\r\n         */\r\n        get: function () {\r\n            return new NavigationService();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new batch object for use with the SharePointQueryable.addToBatch method\r\n     *\r\n     */\r\n    SPRest.prototype.createBatch = function () {\r\n        return this.web.createBatch();\r\n    };\r\n    Object.defineProperty(SPRest.prototype, \"utility\", {\r\n        /**\r\n         * Static utilities methods from SP.Utilities.Utility\r\n         */\r\n        get: function () {\r\n            return this.create(UtilityMethod, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"siteScripts\", {\r\n        /**\r\n         * Access to sitescripts methods\r\n         */\r\n        get: function () {\r\n            return this.create(SiteScripts, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SPRest.prototype, \"siteDesigns\", {\r\n        /**\r\n         * Access to sitedesigns methods\r\n         */\r\n        get: function () {\r\n            return this.create(SiteDesigns, \"\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles creating and configuring the objects returned from this class\r\n     *\r\n     * @param fm The factory method used to create the instance\r\n     * @param path Optional additional path information to pass to the factory method\r\n     */\r\n    SPRest.prototype.create = function (fm, path) {\r\n        return new fm(this._baseUrl, path).configure(this._options);\r\n    };\r\n    return SPRest;\r\n}());\r\nvar sp = new SPRest();\n\nexport { odataUrlFrom, spODataEntity, spODataEntityArray, SharePointQueryable, SharePointQueryableInstance, SharePointQueryableCollection, SharePointQueryableSecurable, FileFolderShared, SharePointQueryableShareable, SharePointQueryableShareableFile, SharePointQueryableShareableFolder, SharePointQueryableShareableItem, SharePointQueryableShareableWeb, AppCatalog, App, SPBatch, ContentType, ContentTypes, FieldLink, FieldLinks, Field, Fields, CheckinType, WebPartsPersonalizationScope, MoveOperations, TemplateFileType, File, Files, Folder, Folders, SPHttpClient, Item, Items, ItemVersion, ItemVersions, PagedItemCollection, NavigationNodes, NavigationNode, NavigationService, List, Lists, RegionalSettings, InstalledLanguages, TimeZone, TimeZones, sp, SPRest, RoleDefinitionBindings, Search, SearchQueryBuilder, SearchResults, SortDirection, ReorderingRuleMatchType, QueryPropertyValueType, SearchBuiltInSourceId, SearchSuggest, Site, UserProfileQuery, toAbsoluteUrl, extractWebUrl, UtilityMethod, View, Views, ViewFields, WebPartDefinitions, WebPartDefinition, WebPart, Web, SiteScripts, SiteDesigns, PromotedState, ClientSidePage, CanvasSection, CanvasControl, CanvasColumn, ClientSidePart, ClientSideText, ClientSideWebpart, Comments, Comment, Replies, SocialQuery, MySocialQuery, SocialActorType, SocialActorTypes, SocialFollowResult, SocialStatusCode, ControlMode, FieldTypes, DateTimeFieldFormatType, AddFieldOptions, CalendarType, UrlFieldFormatType, PermissionKind, PrincipalType$1 as PrincipalType, PrincipalSource, RoleType, PageType, SharingLinkKind, SharingRole, SharingOperationStatusCode, SPSharedObjectType, SharingDomainRestrictionMode, RenderListDataOptions, FieldUserSelectionMode, ChoiceFieldFormatType, UrlZone };\n//# sourceMappingURL=sp.es5.js.map\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","export namespace Constants {\r\n    export namespace ColumnNames {\r\n        export const ID: string = \"ID\";\r\n        export const TITLE: string = \"Title\";\r\n        export const NAME: string = \"Name\";\r\n        export const ENCODED_ABS_URL: string = \"EncodedAbsUrl\";\r\n        export const CANVAS_CONTENT_1: string = \"CanvasContent1\";\r\n        export const CONTENT_TYPE_ID: string = \"ContentTypeId\";\r\n        export const AUTHOR: string = \"Author\";\r\n        export const CREATED: string = \"Created\";\r\n        export const BANNERIMAGEURL:string = \"BannerImageUrl\";\r\n        export const LAYOUTWEBPARTSCONTENT:string = \"LayoutWebpartsContent\";\r\n        export const SHARE_ORGANIZATIONS: string = \"ShareOrganizations\";\r\n\r\n        export namespace Campaigns {\r\n            export const CAMPAIGN_URL: string = \"ShareUrlText\";\r\n            export const ARCHIVED: string = \"ShareArchived\";\r\n        }\r\n        export namespace MyLinks {\r\n            export const MYLINK_URL: string = \"ShareUrlText\";\r\n            export const MYLINK_ORDER: string = \"ShareMyLinkOrder\";\r\n        }\r\n        export namespace CollaborationSites {\r\n            export const URL: string = \"ShareSiteURL\";\r\n            export const ACCESS_LEVEL: string = \"ShareAccessLevel\";\r\n        }\r\n        export namespace TaxonomyList {\r\n            export const ID_FOR_TERM: string = \"IdForTerm\";\r\n        }\r\n    }\r\n\r\n    export namespace ListInternalNames {\r\n        export const CAMPAIGNS: string = \"ShareCampaigns\";\r\n        export const SITE_PAGES: string = \"SitePages\";\r\n        export const MYLINKS: string = \"ShareMyLinks\";\r\n        export const SITE_ASSETS: string = \"SiteAssets\";\r\n        export const COLLABORATION_SITES: string = \"Sites\";\r\n        export const TAXONOMY_LIST: string = \"TaxonomyHiddenList\";\r\n        export const LOCALSITES_SITECATALOG_LISTITLE: string = \"Local Site Requests\";\r\n    }\r\n\r\n    export namespace CacheKeys {\r\n        export const STARTPAGE_CAMPAIGNS: string = \"ShareStartpageCampaigns\";\r\n        export const STARTPAGE_NEWS_CORPORATENEWS: string = \"ShareStartpageNewsWebPartCorporateNews\";\r\n        export const STARTPAGE_NEWS_MYNEWS: string = \"ShareStartpageNewsWebPartMyNews\";\r\n        export const STARTPAGE_NEWS_LOCATION_TERMS: string = \"ShareStartpageNewsWebPartLocationTerms\";\r\n        export const STARTPAGE_NEWS_ORGANIZATION_TERMS: string = \"ShareStartpageNewsWebPartOrganizationTerms\";\r\n        export const STARTPAGE_MYLINKS: string = \"ShareStartpageMyLinks\";\r\n        export const STARTPAGE_MYLINKSLOCKCACHE: string = \"ShareStartpageMyLinksLockCache\";\r\n        export const STARTPAGE_MYLINKS_VIEWS_VIEW: string = \"ShareStartpageMyLinksViewsView\";\r\n        export const STARTPAGE_MYLINKS_VIEWS_MANAGE: string = \"ShareStartpageMyLinksViewsManage\";\r\n        export const USER_PROPERTIES: string = \"ShareUserProperties\";\r\n        export const NEWSPORTAL_NEWS_TOPSTORIES: string = \"ShareNewsPortalNewsWebPartTopStories\";\r\n        export const NEWSPORTAL_ALLNEWS_LIST: string = \"ShareNewsPortalNewsWebPartAllNewsList\";\r\n        export const NEWSPORTAL_MYNEWS_LIST: string = \"ShareNewsPortalNewsWebPartMyNewsList\";\r\n        export const NEWSPORTAL_NEWS_PUBLISHED: string = \"ShareNewsPortalNewsWebPartPublishedNews\";\r\n        export const TERM_ID_SITE_COLLECTION: string = \"ShareTermIDSiteCollection\";\r\n        export const COLLABORATION_MY_ORGANIZATION_COLLABORATION_SITES: string = \"ShareCollaborationMyOrganizationCollaborationSites\";\r\n        export const PORTABLE_NEWS_LOCAL: string = \"SharePortableNewsWebPart\";\r\n        // U.S 78343\r\n        export const STARTPAGEQA_INSTRUMENTATIONKEY: string = \"ShareStartPageWebpartsQA_InstrumentationKey\";\r\n        export const STARTPAGEUAT_INSTRUMENTATIONKEY: string = \"ShareStartPageWebpartsUAT_InstrumentationKey\";\r\n        export const STARTPAGE_INSTRUMENTATIONKEY: string = \"ShareStartPageWebparts_InstrumentationKey\";\r\n        //Guru: Related to CDN\r\n        export const SHARE_NAME = \"Share\";\r\n        export const PUBLIC_CDN_STANDARD_URL : string = \"https://publiccdn.sharepointonline.com\";\r\n        export const CDN_SITE_URL = \"sites/cdn\";\r\n\r\n        //Guru: Alters Cache keys\r\n        export const ALERTS: string = \"ShareAlerts\";\r\n    }\r\n\r\n    export namespace ManagedProperties {\r\n        export const SHARE_LOCATIONS: string = \"owstaxIdShareLocations\";\r\n        export const SHARE_ORGANIZATIONS: string = \"owstaxIdShareOrganizations\";\r\n        export const SHARE_CATEGORIES: string = \"owstaxIdShareCategories\";\r\n        export const TITLE: string = \"Title\";\r\n        export const PATH: string = \"Path\";\r\n        export const LAST_MODIFIED_TIME: string = \"LastModifiedTime\";\r\n        export const PICTURE_THUMBNAIL_URL: string = \"PictureThumbnailURL\";\r\n        export const VIEWS_LIFE_TIME: string = \"ViewsLifeTime\";\r\n        export const DESCRIPTION: string = \"Description\";\r\n        export const CONTENT_TYPE_ID: string = \"ContentTypeId\";\r\n        export const PUBLISHING_START: string = \"RefinableDateSingle00\";\r\n        export const PUBLISHING_END: string = \"RefinableDateSingle01\";\r\n        export const LIST_ITEM_ID: string = \"ListItemID\";\r\n        export const CREATED_BY: string = \"CreatedBy\";\r\n        export const WEB_URL: string = \"SPWebUrl\";\r\n    }\r\n    export namespace ResultSources {\r\n        export const SHARE_CORPORATE_NEWS: string = \"Share Corporate News\";\r\n        export const SHARE_NEWS: string = \"Share News\";\r\n        export const SHARE_ALL_NEWS: string = \"Share All News\";\r\n        export const SHARE_SCHEDULED_NEWS: string = \"Share Scheduled News\";\r\n    }\r\n\r\n    export namespace Terms {\r\n        export namespace TermSetGUIDs {\r\n            export const ORGANIZATIONS: string = \"3fe02a12-17b0-4ff8-88e0-b407eadc6fdd\";\r\n            export const LOCATIONS: string = \"039fc1a5-7f07-40fe-87d8-5685169d16f0\";\r\n            export const CATEGORIES: string = \"a04735e8-4973-4469-a8c8-5e6fa81594ac\";\r\n            export const CHANNELS: string = \"39f04728-d576-4a10-bf58-6bee422f92ff\";\r\n        }\r\n        export namespace TermSetName {\r\n            export const ORGANIZATIONS: string = \"Organizations\";\r\n            export const LOCATIONS: string = \"Locations\";\r\n            export const TOPICS: string = \"Categories\";\r\n        }\r\n        export namespace TermProperties {\r\n            export const ID: string = \"Id\";\r\n            export const NAME: string = \"Name\";\r\n            export const PATH_OF_TERM: string = \"PathOfTerm\";\r\n        }\r\n        export namespace TermsGeneral {\r\n            export const QUERY_EXACT_TERM_PREFIX: string = \"GP0|#0\";\r\n        }\r\n\r\n    }\r\n\r\n    export namespace UserProfileProperties {\r\n        export const SHARE_ORGANIZATION: string = \"ShareOrganization\";\r\n        export const SHARE_ORGANIZATION_ID: string = \"ShareOrganizationID\";\r\n        export const SHARE_LOCATION: string = \"ShareLocation\";\r\n        export const SHARE_LOCATION_ID: string = \"ShareLocationID\";\r\n        export const SHARE_TOPICS: string = \"ShareTopics\";\r\n        export const SHARE_TOPICS_IDS: string = \"ShareTopicsIDs\";\r\n        export const SHARE_MYLINKS_LOCATION: string = \"ShareMyLinksLocation\";\r\n    }\r\n\r\n    export namespace FolderNames {\r\n        export namespace NewsSitePages {\r\n            export const CORPORATE_NEWS: string = \"Corporate News\";\r\n            export const NEWS: string = \"News\";\r\n            export const CORPORATE_NEWS_TEMPLATES: string = \"Corporate News Templates\";\r\n            export const NEWS_TEMPLATES: string = \"News Templates\";\r\n            //US 83180 - Including default template folder\r\n            export const NEWS_TEMPLATES_ALL: string = \"Templates\";\r\n        }\r\n        export namespace NewsSiteAssets {\r\n            export const NEWS_TEMPLATES: string = \"News Template\";\r\n        }\r\n    }\r\n    export namespace NewsFields {\r\n        export const SHARE_NEWS_TITLE: string = \"Title\";\r\n        export const SHARE_PUBLISHING_START_DATE: string = \"SharePublishingStartDate\";\r\n        export const SHARE_PUBLISHING_END_DATE: string = \"SharePublishingEndDate\";\r\n        export const SHARE_ORGANIZATIONS: string = \"ac4ca612b48c45b899985d601cd7e7e8\";\r\n        export const SHARE_LOCATIONS: string = \"b3eebddcc52c44a1806bfaf5e975dc3b\";\r\n        export const SHARE_CATEGORIES: string = \"d1da478974a1451395ba47f5d994f760\";\r\n        export const SHARE_CONTENTTYPEID: string = \"ContentTypeId\";\r\n        //US 6689 - Including Out of box Page scheudling internal field - _PublishStartDate\r\n        //export const SHARE_OOTB_PUBLISH_START_DATE_ODATA: string = \"OData__PublishStartDate\";\r\n        //US 83180 - Including News Template Type internal field - ShareNewsTemplateType\r\n        export const SHARE_NEWS_TEMPLATE_TYPE: string = \"ShareNewsTemplateType\";\r\n    }\r\n\r\n    export namespace General {\r\n        export const ACCOUNT_NAME_PREFIX: string = \"i:0#.f|membership|\";\r\n\r\n        //US 83180 - Including dropdown values \r\n        export const DD_GENERAL: string = \"General\";\r\n        export const DD_ORGNIZATION_NEWS: string = \"Organization News\";\r\n        \r\n        //US 83180 - Including Template Name\r\n        export const NEWS_TEMPLATE: string = \"NewsTemplate.aspx\";\r\n        export const CORPORATE_NEWS_TEMPLATE: string = \"CorporateNewsTemplate.aspx\";\r\n        export const ORGANIZATION_NEWS_TEMPLATE: string = \"OrganizationNewsTemplate.aspx\";        \r\n    }\r\n    export namespace FileNames {\r\n        export namespace NewsSiteAssets {\r\n            export const NEWS_DEFAULT_IMAGE: string = \"AL_News_Empty.PNG\";\r\n        }\r\n        export namespace SitePages {\r\n            export const NewsPortalPage: string = \"NewsPortal.aspx\";\r\n            export const StartPage: string = \"Home.aspx\";\r\n        }\r\n\r\n\r\n    }\r\n    export namespace ContentTypes {\r\n        export const CT_CorporateNews: string = \"0x0101009D1CB255DA76424F860D91F20E6C411800DB0A9B958B76B247A41A42489872F79D\";\r\n        export const CT_News: string = \"0x0101009D1CB255DA76424F860D91F20E6C4118001D97D517C2F6D844A59632814F3E9EA3\";\r\n        export const CT_ToolSite: string = '0x01001D62806226164646A58494222AC4A93F';\r\n        export const CT_ToolLink: string = '0x01001D62806226164646A58494222AC4A94F';\r\n    }\r\n\r\n    export namespace Collaboration {\r\n        export const TEAMS_SITE_COLLECTION_URL_PREFIX: string = \"CollTeams\";\r\n        export const PROJECTS_SITE_COLLECTION_URL_PREFIX: string = \"CollProjects\";\r\n    }\r\n    export namespace ToolSites {\r\n        export const TOOLSITE_HUBSITE = \"toolsitelanding\";\r\n    }\r\n\r\n}\r\n","export namespace models {\r\n\r\n    export class Term {\r\n        public ID: string;\r\n        public Name: string;\r\n        public PathOfTerm?: string;\r\n    }\r\n    export class UserProperties {\r\n        public LocationGUID: string;\r\n        public Location: string;\r\n        public OrganizationGUID: string;\r\n        public Organization: string;\r\n        public TopicsGUIDs: string[];\r\n        public Topics: string[];\r\n        public MyLinksLocation: string;\r\n        public IsDataLoaded: boolean;\r\n    }\r\n\r\n    export class CorpNewsItem {\r\n        public url: string;\r\n        public title: string;\r\n        public pictureUrl: string;\r\n        public publishingDate: string;\r\n        public viewsLifeTime: number;\r\n    }\r\n    export class NewsItem {\r\n        public url: string;\r\n        public title: string;\r\n        public pictureUrl: string;\r\n        public publishingDate: string;\r\n        public viewsLifeTime: number;\r\n        public organizationTerms: Term[];\r\n        public locationTerms: Term[];\r\n        public categoryTerms: Term[];\r\n        public termToDisplay: string;\r\n        public termToDisplayId: string;\r\n        public description: string;\r\n        public contentypeId: string;\r\n        public publishingStartDate: Date;\r\n        public publishingEndDate: Date;\r\n        public contentTypeId: string;\r\n        public webUrl: string;\r\n        //public publishStartDate : Date;\r\n        public sharenewstemplatetype : string;\r\n    }\r\n\r\n    export class TermGuidWithParentLevelsToRetrieve {\r\n        public TermGUID: string;\r\n        public ParentLevelsToRetrieve: number;\r\n    }\r\n\r\n    export class FollowedSPObject {\r\n        public Name: string;\r\n        public Uri: string;\r\n        public ActorType: number;\r\n    }\r\n\r\n    export class SiteInfo {\r\n        public Title: string;\r\n        public Url: string;\r\n    }\r\n\r\n}\r\n","\r\nimport { PnPClientStorage } from '@pnp/common';\r\nexport class storage {\r\n\r\n    // Function to cache a Promise object in Global Variable (can be used by different components during the page load).\r\n    // The benefit of the function is that as we are storing Promise, then all calls to the cache key will execute the same Promise object - if it is not yet resolved, then would wait until it resolves and return the value.\r\n    // Input parameters:\r\n    //   1) key - cache key\r\n    //   2) promise - reference to the Promise\r\n    public static async getOrPutPromiseAsGlobalVariable(key: string, promise: any): Promise<any> {\r\n        try {\r\n            if (window[key] == null) {\r\n                window[key] = promise();\r\n            }\r\n            return window[key];\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    // Function to cache a value from Promise object in Local or Session Storage.\r\n    // This function should be used if we need to cache value that is returned from a Promise (asynchronously). And the same Promise (value) should be used in different components of the same page.\r\n    // The benefit of the function is that as we are storing Promise temporarily as Global Variable. So all calls to the cache key will execute the same Promise object - if it is not yet resolved, then would wait until it resolves and return the value.\r\n    // Using PnP \"getOrPut\" as basis for the approach - its getter function to wrap provided Promise reference into the function \"getOrPutPromiseAsGlobalVariable\".\r\n    // Note that had to use Global Variable as temporary storage for Promise object as Local or Session Storages can only contain string values.\r\n    // Input parameters:\r\n    //   1) key - cache key\r\n    //   2) storeName - Local or Session storage\r\n    //   3) promise - reference to the Promise\r\n    //   4) expire - expiry date / time\r\n    public static async getOrPutPromiseValueInStorage(key: string, storeName: \"session\" | \"local\", promise: any, expire?: Date): Promise<any> {\r\n        try {\r\n            // Using PnP \"getOrPut\" as basis for the approach\r\n            const pnpStorage = new PnPClientStorage();\r\n            switch (storeName) {\r\n                case \"local\":\r\n                    return pnpStorage.local.getOrPut(key, () => this.getOrPutPromiseAsGlobalVariable(key, promise), expire);\r\n                case \"session\":\r\n                    return pnpStorage.session.getOrPut(key, () => this.getOrPutPromiseAsGlobalVariable(key, promise), expire);                 \r\n                default:\r\n                    return null;\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public static async clearKeyFromLocalStorage(key: string){\r\n\r\n        const pnpStorage = new PnPClientStorage();\r\n        try\r\n        {\r\n            pnpStorage.local.delete(key);\r\n        }\r\n        catch(error){\r\n            console.error(\"clearKeyFromLocalStorage: \" + error);\r\n        }\r\n\r\n    }\r\n}\r\n","// import pnp from \"sp-pnp-js\";\r\nimport * as Util from \"@pnp/common\";\r\n\r\nimport { Constants } from \"./constants\";\r\n\r\nexport class util {\r\n\r\n    public static randomNoRepeats(array: any[]): any {\r\n        let copy: any[] = array.slice(0);\r\n        return () => {\r\n            if (copy.length < 1) { copy = array.slice(0); }\r\n            const index: number = Math.floor(Math.random() * copy.length);\r\n            const item: any = copy[index];\r\n            copy.splice(index, 1);\r\n            return item;\r\n        };\r\n    }\r\n    public static formatShortDate(date: Date): string {\r\n        const day: string = this.dateAddLeadZero(date.getDate());\r\n        const month: string = this.dateAddLeadZero(date.getMonth() + 1);\r\n        const year: number = date.getFullYear();\r\n\r\n        return year + \"-\" + month + \"-\" + day;\r\n    }\r\n    public static getLocaleDateString(lng: string){\r\n\r\n        const formats = {\r\n            \"af-ZA\" : \"yyyy/MM/dd\",\r\n            \"sq-AL\" : \"dd.M.yyyy\",\r\n            \"gsw-FR\" : \"dd/MM/yyyy\",\r\n            \"am-ET\" : \"dd/M/yyyy\",\r\n            \"ar-DZ\" : \"yyyy-MM-dd\",\r\n            \"ar-BH\" : \"dd/MM/yyyy\",\r\n            \"ar-EG\" : \"dd/MM/yyyy\",\r\n            \"ar-IQ\" : \"dd/MM/yyyy\",\r\n            \"ar-JO\" : \"dd/MM/yyyy\",\r\n            \"ar-KW\" : \"dd/MM/yyyy\",\r\n            \"ar-LB\" : \"dd/MM/yyyy\",\r\n            \"ar-LY\" : \"dd/MM/yyyy\",\r\n            \"ar-MA\" : \"dd/MM/yyyy\",\r\n            \"ar-OM\" : \"dd/MM/yyyy\",\r\n            \"ar-QA\" : \"dd/MM/yyyy\",\r\n            \"ar-SA\" : \"dd/MM/yy\",\r\n            \"ar-SY\" : \"dd/MM/yyyy\",\r\n            \"ar-TN\" : \"dd/MM/yyyy\",\r\n            \"ar-AE\" : \"dd/MM/yyyy\",\r\n            \"ar-YE\" : \"dd/MM/yyyy\",\r\n            \"hy-AM\" : \"dd.MM.yyyy\",\r\n            \"as-IN\" : \"dd-MM-yyyy\",\r\n            \"az-Cyrl-AZ\" : \"dd.MM.yyyy\",\r\n            \"az-Latn-AZ\" : \"dd.MM.yyyy\",\r\n            \"ba-RU\" : \"dd.MM.yy\",\r\n            \"eu-ES\" : \"yyyy/MM/dd\",\r\n            \"be-BY\" : \"dd.MM.yy\",\r\n            \"bn-BD\" : \"dd-MM-yy\",\r\n            \"bn-IN\" : \"dd-MM-yy\",\r\n            \"bs-Cyrl-BA\" : \"d.M.yyyy\",\r\n            \"bs-Latn-BA\" : \"d.M.yyyy\",\r\n            \"br-FR\" : \"dd/MM/yyyy\",\r\n            \"bg-BG\" : \"d.M.yyyy г.\",\r\n            \"ca-ES\" : \"dd/MM/yyyy\",\r\n            \"zh-HK\" : \"d/M/yyyy\",\r\n            \"zh-MO\" : \"d/M/yyyy\",\r\n            \"zh-CN\" : \"yyyy.M.d\",\r\n            \"zh-SG\" : \"d/M/yyyy\",\r\n            \"zh-TW\" : \"yyyy/M/d\",\r\n            \"co-FR\" : \"dd/MM/yyyy\",\r\n            \"hr-BA\" : \"d.M.yyyy\",\r\n            \"hr-HR\" : \"d.M.yyyy\",\r\n            \"cs-CZ\" : \"d.M.yyyy\",\r\n            \"da-DK\" : \"dd-MM-yyyy\",\r\n            \"prs-AF\" : \"yyyy/M/d\",\r\n            \"dv-MV\" : \"dd/MM/yy\",\r\n            \"nl-BE\" : \"d/MM/yyyy\",\r\n            \"nl-NL\" : \"d-M-yyyy\",\r\n            \"en-AU\" : \"d/MM/yyyy\",\r\n            \"en-BZ\" : \"dd/MM/yyyy\",\r\n            \"en-CA\" : \"yyyy-MM-dd\",\r\n            \"en-029\" : \"dd/MM/yyyy\",\r\n            \"en-IN\" : \"dd-MM-yyyy\",\r\n            \"en-IE\" : \"dd/MM/yyyy\",\r\n            \"en-JM\" : \"dd/MM/yyyy\",\r\n            \"en-MY\" : \"d/M/yyyy\",\r\n            \"en-NZ\" : \"d/MM/yyyy\",\r\n            \"en-PH\" : \"d/M/yyyy\",\r\n            \"en-SG\" : \"d/M/yyyy\",\r\n            \"en-ZA\" : \"yyyy-MM-dd\",\r\n            \"en-TT\" : \"dd/MM/yyyy\",\r\n            \"en-GB\" : \"dd/MM/yyyy\",\r\n            \"en-US\" : \"M/d/yyyy\",\r\n            \"en-ZW\" : \"dd/MM/yyyy\",\r\n            \"et-EE\" : \"d.MM.yyyy\",\r\n            \"fo-FO\" : \"dd-MM-yyyy\",\r\n            \"fil-PH\" : \"M/d/yyyy\",\r\n            \"fi-FI\" : \"d.M.yyyy\",\r\n            \"fr-BE\" : \"dd-MM-yy\",\r\n            \"fr-CA\" : \"yyyy-MM-dd\",\r\n            \"fr-FR\" : \"dd/MM/yyyy\",\r\n            \"fr-LU\" : \"dd/MM/yyyy\",\r\n            \"fr-MC\" : \"dd/MM/yyyy\",\r\n            \"fr-CH\" : \"dd.MM.yyyy\",\r\n            \"fy-NL\" : \"d-M-yyyy\",\r\n            \"gl-ES\" : \"dd/MM/yyyy\",\r\n            \"ka-GE\" : \"dd.MM.yyyy\",\r\n            \"de-AT\" : \"dd.MM.yyyy\",\r\n            \"de-DE\" : \"dd.MM.yyyy\",\r\n            \"de-LI\" : \"dd.MM.yyyy\",\r\n            \"de-LU\" : \"dd.MM.yyyy\",\r\n            \"de-CH\" : \"dd.MM.yyyy\",\r\n            \"el-GR\" : \"d/M/yyyy\",\r\n            \"kl-GL\" : \"dd-MM-yyyy\",\r\n            \"gu-IN\" : \"dd-MM-yy\",\r\n            \"ha-Latn-NG\" : \"d/M/yyyy\",\r\n            \"he-IL\" : \"dd/MM/yyyy\",\r\n            \"hi-IN\" : \"dd-MM-yyyy\",\r\n            \"hu-HU\" : \"yyyy.MM.dd\",\r\n            \"is-IS\" : \"d.M.yyyy\",\r\n            \"ig-NG\" : \"d/M/yyyy\",\r\n            \"smn-FI\" : \"d.M.yyyy\",\r\n            \"id-ID\" : \"dd/MM/yyyy\",\r\n            \"iu-Latn-CA\" : \"d/MM/yyyy\",\r\n            \"iu-Cans-CA\" : \"d/M/yyyy\",\r\n            \"ga-IE\" : \"dd/MM/yyyy\",\r\n            \"xh-ZA\" : \"yyyy/MM/dd\",\r\n            \"zu-ZA\" : \"dd-MM-yyyy\",\r\n            \"it-IT\" : \"dd/MM/yyyy\",\r\n            \"it-CH\" : \"dd.MM.yyyy\",\r\n            \"ja-JP\" : \"yyyy/MM/dd\",\r\n            \"kn-IN\" : \"dd-MM-yy\",\r\n            \"kk-KZ\" : \"d-MM-yy\",\r\n            \"km-KH\" : \"dd/MM/yy\",\r\n            \"qut-GT\" : \"dd/MM/yyyy\",\r\n            \"rw-RW\" : \"d/MM/yyyy\",\r\n            \"sw-KE\" : \"M/d/yyyy\",\r\n            \"kok-IN\" : \"dd-MM-yyyy\",\r\n            \"ko-KR\" : \"yyyy-MM-dd\",\r\n            \"ky-KG\" : \"d-MM yy\",\r\n            \"lo-LA\" : \"dd/MM/yyyy\",\r\n            \"lv-LV\" : \"dd.MM.yyyy\",\r\n            \"lt-LT\" : \"yyyy-MM-dd\",\r\n            \"dsb-DE\" : \"d.M.yyyy\",\r\n            \"smj-NO\" : \"dd.MM.yyyy\",\r\n            \"smj-SE\" : \"yyyy-MM-dd\",\r\n            \"lb-LU\" : \"dd.MM.yy\",\r\n            \"mk-MK\" : \"dd.MM.yyyy\",\r\n            \"ms-MY\" : \"dd/MM/yyyy\",\r\n            \"ms-BN\" : \"dd/MM/yyyy\",\r\n            \"ml-IN\" : \"dd-MM-yy\",\r\n            \"mt-MT\" : \"dd/MM/yyyy\",\r\n            \"mi-NZ\" : \"dd/MM/yyyy\",\r\n            \"arn-CL\" : \"dd-MM-yyyy\",\r\n            \"mr-IN\" : \"dd-MM-yyyy\",\r\n            \"moh-CA\" : \"M/d/yyyy\",\r\n            \"mn-MN\" : \"yyyy-MM-dd\",\r\n            \"mn-Mong-CN\" : \"yyyy/M/d\",\r\n            \"ne-NP\" : \"M/d/yyyy\",\r\n            \"se-FI\" : \"d.M.yyyy\",\r\n            \"se-NO\" : \"dd.MM.yyyy\",\r\n            \"se-SE\" : \"yyyy-MM-dd\",\r\n            \"nb-NO\" : \"dd.MM.yyyy\",\r\n            \"nn-NO\" : \"dd.MM.yyyy\",\r\n            \"oc-FR\" : \"dd/MM/yyyy\",\r\n            \"or-IN\" : \"dd-MM-yy\",\r\n            \"ps-AF\" : \"dd/MM/yy\",\r\n            \"fa-IR\" : \"dd/MM/yyyy\",\r\n            \"pl-PL\" : \"yyyy-MM-dd\",\r\n            \"pt-BR\" : \"dd/MM/yyyy\",\r\n            \"pt-PT\" : \"dd/MM/yyyy\",\r\n            \"pa-IN\" : \"dd-MM-yy\",\r\n            \"quz-BO\" : \"dd/MM/yyyy\",\r\n            \"quz-EC\" : \"dd/MM/yyyy\",\r\n            \"quz-PE\" : \"dd/MM/yyyy\",\r\n            \"ro-RO\" : \"dd.MM.yyyy\",\r\n            \"rm-CH\" : \"dd-MM-yyyy\",\r\n            \"ru-RU\" : \"dd.MM.yyyy\",\r\n            \"sah-RU\" : \"dd.MM.yyyy\",\r\n            \"sa-IN\" : \"dd-MM-yyyy\",\r\n            \"sr-Cyrl-BA\" : \"d.M.yyyy\",\r\n            \"sr-Cyrl-ME\" : \"d.M.yyyy\",\r\n            \"sr-Cyrl-RS\" : \"d.M.yyyy\",\r\n            \"sr-Latn-BA\" : \"d.M.yyyy\",\r\n            \"sr-Latn-ME\" : \"d.M.yyyy\",\r\n            \"sr-Latn-RS\" : \"d.M.yyyy\",\r\n            \"nso-ZA\" : \"dd/MM/yy\",\r\n            \"tn-ZA\" : \"dd/MM/yy\",\r\n            \"gd-GB\" : \"dd/MM/yyyy\",\r\n            \"si-LK\" : \"yyyy-MM-dd\",\r\n            \"sms-FI\" : \"d.M.yyyy\",\r\n            \"sk-SK\" : \"d.M.yyyy\",\r\n            \"sl-SI\" : \"d.M.yyyy\",\r\n            \"sma-NO\" : \"dd.MM.yyyy\",\r\n            \"sma-SE\" : \"yyyy-MM-dd\",\r\n            \"es-AR\" : \"dd/MM/yyyy\",\r\n            \"es-BO\" : \"dd/MM/yyyy\",\r\n            \"es-CL\" : \"dd-MM-yyyy\",\r\n            \"es-CO\" : \"dd/MM/yyyy\",\r\n            \"es-CR\" : \"dd/MM/yyyy\",\r\n            \"es-DO\" : \"d/M/yy\",\r\n            \"es-EC\" : \"dd/MM/yyyy\",\r\n            \"es-SV\" : \"dd/MM/yyyy\",\r\n            \"es-GT\" : \"dd/MM/yyyy\",\r\n            \"es-HN\" : \"dd/MM/yyyy\",\r\n            \"es-MX\" : \"dd/MM/yyyy\",\r\n            \"es-NI\" : \"dd/MM/yyyy\",\r\n            \"es-PA\" : \"d/M/yy\",\r\n            \"es-PY\" : \"dd/MM/yyyy\",\r\n            \"es-PE\" : \"dd/MM/yyyy\",\r\n            \"es-PR\" : \"dd/MM/yyyy\",\r\n            \"es-ES_tradnl\" : \"dd/MM/yyyy\",\r\n            \"es-ES\" : \"dd/MM/yyyy\",\r\n            \"es-US\" : \"M/d/yyyy\",\r\n            \"es-UY\" : \"dd/MM/yyyy\",\r\n            \"es-VE\" : \"dd-MM-yyyy\",\r\n            \"sv-SE\" : \"yyyy-MM-dd\",\r\n            \"sv-FI\" : \"d.M.yyyy\",\r\n            \"syr-SY\" : \"dd/MM/yyyy\",\r\n            \"tg-Cyrl-TJ\" : \"dd.MM.yyyy\",\r\n            \"tzm-Latn-DZ\" : \"dd/MM/yyyy\",\r\n            \"ta-IN\" : \"dd-MM-yyyy\",\r\n            \"tt-RU\" : \"dd.MM.yyyy\",\r\n            \"te-IN\" : \"dd-MM-yy\",\r\n            \"th-TH\" : \"d/M/yyyy\",\r\n            \"bo-CN\" : \"yyyy/M/d\",\r\n            \"tr-TR\" : \"d.M.yyyy\",\r\n            \"tk-TM\" : \"dd.MM.yy ý.\",\r\n            \"uk-UA\" : \"dd.MM.yyyy\",\r\n            \"hsb-DE\" : \"d.M.yyyy\",\r\n            \"ur-PK\" : \"dd/MM/yyyy\",\r\n            \"ug-CN\" : \"yyyy-M-d\",\r\n            \"uz-Cyrl-UZ\" : \"dd.MM.yyyy\",\r\n            \"uz-Latn-UZ\" : \"dd.MM.yyyy\",\r\n            \"vi-VN\" : \"dd/MM/yyyy\",\r\n            \"cy-GB\" : \"dd/MM/yy\",\r\n            \"wo-SN\" : \"dd/MM/yyyy\",\r\n            \"ii-CN\" : \"yyyy/M/d\",\r\n            \"yo-NG\" : \"d/M/yyyy\"\r\n        };\r\n\r\n       return Util.stringIsNullOrEmpty(formats[lng]) ? 'dd/MM/yyyy' :  formats[lng];\r\n        \r\n    } \r\n\r\n    public static dateAddLeadZero(n: number): string {\r\n        return n < 10 ? \"0\" + n : n.toString();\r\n    }\r\n    public static formatDate(date: Date, format: string): string {\r\n        const _monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n        const _dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n        const _year = date.getFullYear();\r\n        const _month = date.getMonth();\r\n        const _day = date.getDay();\r\n        const _date = date.getDate();\r\n        const _hours = date.getHours();\r\n        const _minutes = date.getMinutes();\r\n        const _seconds = date.getSeconds();\r\n    \r\n        if (Util.stringIsNullOrEmpty(format))\r\n            {format = \"M/dd/yyyy\";}\r\n\r\n        format = format.replace(\"yyyy\", \"{0}\").replace(\"yy\", \"{1}\").replace(\"y\", \"{2}\")\r\n                .replace(\"MMMM\", \"{3}\").replace(\"MMM\", \"{4}\").replace(\"MM\", \"{5}\").replace(\"M\", \"{6}\")\r\n                .replace(\"dddd\", \"{7}\").replace(\"ddd\", \"{8}\").replace(\"dd\", \"{9}\").replace(\"d\", \"{10}\")\r\n                .replace(\"hh\", \"{11}\").replace(\"h\", \"{12}\").replace(\"HH\", \"{13}\").replace(\"H\", \"{14}\")\r\n                .replace(\"mm\", \"{15}\").replace(\"m\", \"{16}\")\r\n                .replace(\"ss\", \"{17}\").replace(\"s\", \"{18}\")\r\n                .replace(\"tt\", \"{19}\").replace(\"t\", \"{20}\");\r\n    \r\n        if (format.indexOf(\"{0}\") > -1)\r\n            {format = format.replace(\"{0}\", _year.toString());}\r\n        if (format.indexOf(\"{1}\") > -1)\r\n            {format = format.replace(\"{1}\", _year.toString().substr(2, 2));}\r\n        if (format.indexOf(\"{2}\") > -1)\r\n            {format = format.replace(\"{2}\", parseInt(_year.toString().substr(2, 2)).toString());}\r\n    \r\n        if (format.indexOf(\"{3}\") > -1)\r\n            {format = format.replace(\"{3}\", _monthNames[_month]);}\r\n        if (format.indexOf(\"{4}\") > -1)\r\n            {format = format.replace(\"{4}\", _monthNames[_month].substr(0, 3));}\r\n        if (format.indexOf(\"{5}\") > -1)\r\n            {format = format.replace(\"{5}\", this.dateAddLeadZero((_month + 1)));}\r\n        if (format.indexOf(\"{6}\") > -1)\r\n            {format = format.replace(\"{6}\", (_month + 1).toString());}\r\n    \r\n        if (format.indexOf(\"{7}\") > -1)\r\n            {format = format.replace(\"{7}\", _dayNames[_day]);}\r\n        if (format.indexOf(\"{8}\") > -1)\r\n            {format = format.replace(\"{8}\", _dayNames[_day].substr(0, 3));}\r\n        if (format.indexOf(\"{9}\") > -1)\r\n            {format = format.replace(\"{9}\", this.dateAddLeadZero(_date));}\r\n        if (format.indexOf(\"{10}\") > -1)\r\n           {format = format.replace(\"{10}\", _date.toString());}\r\n    \r\n        let _h = 0;\r\n        if (format.indexOf(\"{11}\") > -1) {\r\n            _h = _hours;\r\n            if (_hours > 12) {_h -= 12;}\r\n            if (_hours == 0) {_h = 12;}\r\n            format = format.replace(\"{11}\", this.dateAddLeadZero(_h));\r\n        }\r\n        if (format.indexOf(\"{12}\") > -1) {\r\n            _h = _hours;\r\n            if (_hours > 12) {_h -= 12;}\r\n            if (_hours == 0) {_h = 12;}\r\n            format = format.replace(\"{12}\", _h.toString());\r\n        }\r\n        if (format.indexOf(\"{13}\") > -1)\r\n            {format = format.replace(\"{13}\", this.dateAddLeadZero(_hours));}\r\n        if (format.indexOf(\"{14}\") > -1)\r\n            {format = format.replace(\"{14}\", _hours.toString());}\r\n    \r\n        if (format.indexOf(\"{15}\") > -1)\r\n            {format = format.replace(\"{15}\", this.dateAddLeadZero(_minutes));}\r\n        if (format.indexOf(\"{16}\") > -1)\r\n            {format = format.replace(\"{16}\", _minutes.toString());}\r\n    \r\n        if (format.indexOf(\"{17}\") > -1)\r\n            {format = format.replace(\"{17}\", this.dateAddLeadZero(_seconds));}\r\n        if (format.indexOf(\"{18}\") > -1)\r\n            {format = format.replace(\"{18}\", _seconds.toString());}\r\n    \r\n        if (format.indexOf(\"{19}\") > -1) {\r\n            format = (_hours > 11) ? format.replace(\"{19}\", \"PM\") :  format.replace(\"{19}\", \"AM\");\r\n        }\r\n\r\n        if (format.indexOf(\"{20}\") > -1) {\r\n            format = (_hours > 11) ? format.replace(\"{20}\", \"P\") : format = format.replace(\"{20}\", \"A\");\r\n        }\r\n    \r\n        return format;\r\n    }\r\n\r\n    public static getShortUserName(userName: string) {\r\n        let result: string = userName;\r\n        try {\r\n            result = userName.substring(userName.lastIndexOf(\"|\") + 1);\r\n        } catch (err) {\r\n            console.error(\"Can't get clear login name for user \" + userName + \"!\");\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public static getClaimsUserName(userName: string): string {\r\n        return this.startsWith(userName, Constants.General.ACCOUNT_NAME_PREFIX) ? userName : Constants.General.ACCOUNT_NAME_PREFIX + userName;\r\n    }\r\n\r\n    // Expected input: URL to SharePoint's \"getpreview.ashx\" without resolution specified. Output - URL with SharePoint's pre-defined resolution (from 0 to 6).\r\n    //\r\n    // [Martins Grube, 2019-11-05]: This function has undergone several changes since its original implementation - it has added logic to process standard image\r\n    // SharePoint sometimes uses (\"_layouts/15/images/sitepagethumbnail.png\") if no custom image is specified for Page. Plus it has logic to process new Microsoft approach\r\n    // (since Nov 2019) to return image not by using \"getpreview.aspx\", but by using specific API (see condition with \"/_api/\"; sample:\r\n    // \"https://alfalavalonline.sharepoint.com/_api/v2.1/sites/alfalavalonline.sharepoint.com,4162e4c4-1422-4584-ae36-cf6b2662484b,36730c21-cd53-42f5-bb09-f67c44fe0a41/items/241c97e1-0e77-4405-9772-1ad267d617f8/driveItem/thumbnails/0/c400x99999/content?preferNoRedirect=true\").\r\n    // This function and its calls could be reviewed and improved. It has not been done so far to reduce risk (only this function was changed to implement new functionality\r\n    // instead of changing all its references in web parts).\r\n    // The current code can have issues in specific cases when Search has been used for data retrieval (Managed Property \"PictureThumbnailURL\") and Page does not image specified for it.\r\n    // \"PictureThumbnailURL\" returns not only Page image (Banner), but, if it is not set, then first found image from content. It may be from Image web part or Link to another Page\r\n    // (if \"linked\" Page has image) or even video thumbnail from Link to external video (e.g., Vimeo). \"PictureThumbnailURL\" can contain external image in case of link to external video.\r\n    // Such case would render error in the current code.\r\n    // Potential solution to improve code:\r\n    //   1) Use Banner image (not \"PictureThumbnailURL\"). It will always return image specified for Page (Banner). It would not do smarter logic to \"calculate\" image based on Page content.\r\n    //   2) Use \"getpreview.ashx, but not for returned image value (which may contain different formatting), but for actual Page URL. It should then calculate the preview image.\r\n    public static addResolutionParamToURL(url: string, resolution: number = 0, webUrl: string = \"\"): string {\r\n        if (!Util.stringIsNullOrEmpty(url)){\r\n            return (\r\n                url.toUpperCase().indexOf(\"/getpreview.ashx?\".toUpperCase()) > 0 ?\r\n                    `${url}&resolution=${resolution.toString()}`\r\n                    :\r\n                    url.toUpperCase().indexOf(\"/_api/\".toUpperCase()) > 0 ?\r\n                        url\r\n                        :\r\n                        url.toUpperCase().indexOf(\"_layouts/15/images/sitepagethumbnail.png\".toUpperCase()) > 0 ?\r\n                            \"\"\r\n                            :\r\n                            `${webUrl}/_layouts/15/getpreview.ashx?resolution=${resolution.toString()}&path=${encodeURI(url)}` \r\n            );\r\n        }\r\n        else{\r\n            return (\"\");\r\n        }\r\n       \r\n    }\r\n\r\n    // Implementation of \"startsWith\". Note that build in \"startsWith\" does not work in IE11.\r\n    public static startsWith(text: string, prefix: string): boolean {\r\n        return text.length >= prefix.length && text.substr(0, prefix.length) === prefix;\r\n    }\r\n\r\n    // Implementation of \"endsWith\". Note that build in \"endsWith\" does not work in IE11.\r\n    public static endsWith(text: string, suffix: string): boolean {\r\n        return text.length >= suffix.length && text.substr(text.length - suffix.length) === suffix;\r\n    }\r\n\r\n    public static ensureURLEndsWithSlash(url: string): string {\r\n        return this.endsWith(url, \"/\") ? url : `${url}/`;\r\n    }\r\n\r\n    // Getting environment from web part alias. If environment is empty, then it is assumed that it is the Production environment.\r\n    // For SharePoint Framework web part within one tenant in the custom solution web part alias is build like this:\r\n    //  - DEV: WebPart-dev\r\n    //  - QA: WebPart-qa\r\n    //  - UAT: WebPart-uat\r\n    //  - PROD: WebPart\r\n    public static getEnvironmentFromWebPartAlias(webPartAlias: string): string {\r\n        let returnValue: string = \"\";\r\n        try {\r\n            if (!Util.stringIsNullOrEmpty(webPartAlias)) {\r\n                const regexWebPartAliasEnvironment: RegExp = /-(dev|qa|uat)$/i;\r\n                const regexWebPartAliasEnvironmentResult: RegExpMatchArray = webPartAlias.match(regexWebPartAliasEnvironment);\r\n                if (regexWebPartAliasEnvironmentResult != null) {\r\n                    returnValue = regexWebPartAliasEnvironmentResult[1];\r\n                }\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(error);\r\n        }\r\n        return returnValue;\r\n    }\r\n\r\n    public static arraysEqual(arr1: string[], arr2: string[]) : boolean {\r\n        if (arr1 == null && arr2 == null) {\r\n          return true;\r\n        }\r\n        if (arr1 == null && arr2 != null) {\r\n          return false;\r\n        }\r\n        if (arr1 != null && arr2 == null) {\r\n          return false;\r\n        }\r\n        if (arr1.length !== arr2.length) {\r\n          return false;\r\n        }\r\n        for (let i: number = arr1.length; i >= 0; i--) {\r\n          if (arr1[i] !== arr2[i]){\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      }\r\n      public static removeDuplicatesFromArray(arr: any, prop: string): any {\r\n        const newArr: any = [];\r\n        const lookup: any = {};\r\n        for (const i in arr) {\r\n            lookup[arr[i][prop]] = arr[i];\r\n        }\r\n        for (const i in lookup) {\r\n            newArr.push(lookup[i]);\r\n        }\r\n        return newArr;\r\n      }\r\n      public static GetEnvironmentPostfix(spCtx: any): string{\r\n\r\n        let envCode = \"prod\";\r\n        \r\n        if (spCtx.manifest.alias.lastIndexOf('-') > 0){\r\n            envCode = spCtx.manifest.alias.substring(spCtx.manifest.alias.lastIndexOf('-')+1);\r\n        }\r\n\r\n        return envCode;\r\n\r\n      }\r\n}\r\n","/*! adal-angular v1.0.17 2018-02-27 */\r\nvar AuthenticationContext=function(){\"use strict\";return AuthenticationContext=function(a){if(this.REQUEST_TYPE={LOGIN:\"LOGIN\",RENEW_TOKEN:\"RENEW_TOKEN\",UNKNOWN:\"UNKNOWN\"},this.RESPONSE_TYPE={ID_TOKEN_TOKEN:\"id_token token\",TOKEN:\"token\"},this.CONSTANTS={ACCESS_TOKEN:\"access_token\",EXPIRES_IN:\"expires_in\",ID_TOKEN:\"id_token\",ERROR_DESCRIPTION:\"error_description\",SESSION_STATE:\"session_state\",ERROR:\"error\",STORAGE:{TOKEN_KEYS:\"adal.token.keys\",ACCESS_TOKEN_KEY:\"adal.access.token.key\",EXPIRATION_KEY:\"adal.expiration.key\",STATE_LOGIN:\"adal.state.login\",STATE_RENEW:\"adal.state.renew\",NONCE_IDTOKEN:\"adal.nonce.idtoken\",SESSION_STATE:\"adal.session.state\",USERNAME:\"adal.username\",IDTOKEN:\"adal.idtoken\",ERROR:\"adal.error\",ERROR_DESCRIPTION:\"adal.error.description\",LOGIN_REQUEST:\"adal.login.request\",LOGIN_ERROR:\"adal.login.error\",RENEW_STATUS:\"adal.token.renew.status\",ANGULAR_LOGIN_REQUEST:\"adal.angular.login.request\"},RESOURCE_DELIMETER:\"|\",CACHE_DELIMETER:\"||\",LOADFRAME_TIMEOUT:6e3,TOKEN_RENEW_STATUS_CANCELED:\"Canceled\",TOKEN_RENEW_STATUS_COMPLETED:\"Completed\",TOKEN_RENEW_STATUS_IN_PROGRESS:\"In Progress\",LOGGING_LEVEL:{ERROR:0,WARN:1,INFO:2,VERBOSE:3},LEVEL_STRING_MAP:{0:\"ERROR:\",1:\"WARNING:\",2:\"INFO:\",3:\"VERBOSE:\"},POPUP_WIDTH:483,POPUP_HEIGHT:600},AuthenticationContext.prototype._singletonInstance)return AuthenticationContext.prototype._singletonInstance;if(AuthenticationContext.prototype._singletonInstance=this,this.instance=\"https://login.microsoftonline.com/\",this.config={},this.callback=null,this.popUp=!1,this.isAngular=!1,this._user=null,this._activeRenewals={},this._loginInProgress=!1,this._acquireTokenInProgress=!1,this._renewStates=[],this._callBackMappedToRenewStates={},this._callBacksMappedToRenewStates={},this._openedWindows=[],this._requestType=this.REQUEST_TYPE.LOGIN,window._adalInstance=this,a.displayCall&&\"function\"!=typeof a.displayCall)throw new Error(\"displayCall is not a function\");if(!a.clientId)throw new Error(\"clientId is required\");this.config=this._cloneConfig(a),void 0===this.config.navigateToLoginRequestUrl&&(this.config.navigateToLoginRequestUrl=!0),this.config.popUp&&(this.popUp=!0),this.config.callback&&\"function\"==typeof this.config.callback&&(this.callback=this.config.callback),this.config.instance&&(this.instance=this.config.instance),this.config.loginResource||(this.config.loginResource=this.config.clientId),this.config.redirectUri||(this.config.redirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.postLogoutRedirectUri||(this.config.postLogoutRedirectUri=window.location.href.split(\"?\")[0].split(\"#\")[0]),this.config.anonymousEndpoints||(this.config.anonymousEndpoints=[]),this.config.isAngular&&(this.isAngular=this.config.isAngular),this.config.loadFrameTimeout&&(this.CONSTANTS.LOADFRAME_TIMEOUT=this.config.loadFrameTimeout)},\"undefined\"!=typeof window&&(window.Logging={piiLoggingEnabled:!1,level:0,log:function(a){}}),AuthenticationContext.prototype.login=function(){if(this._loginInProgress)return void this.info(\"Login in progress\");this._loginInProgress=!0;var a=this._guid();this.config.state=a,this._idTokenNonce=this._guid();var b=this._getItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST);b&&\"\"!==b?this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"):b=window.location.href,this.verbose(\"Expected state: \"+a+\" startPage:\"+b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,b),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,a,!0),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var c=this._getNavigateUrl(\"id_token\",null)+\"&nonce=\"+encodeURIComponent(this._idTokenNonce);this.config.displayCall?this.config.displayCall(c):this.popUp?(this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._renewStates.push(a),this.registerCallback(a,this.config.clientId,this.callback),this._loginPopup(c)):this.promptUser(c)},AuthenticationContext.prototype._openPopup=function(a,b,c,d){try{var e=window.screenLeft?window.screenLeft:window.screenX,f=window.screenTop?window.screenTop:window.screenY,g=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,h=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,i=g/2-c/2+e,j=h/2-d/2+f,k=window.open(a,b,\"width=\"+c+\", height=\"+d+\", top=\"+j+\", left=\"+i);return k.focus&&k.focus(),k}catch(a){return this.warn(\"Error opening popup, \"+a.message),this._loginInProgress=!1,this._acquireTokenInProgress=!1,null}},AuthenticationContext.prototype._handlePopupError=function(a,b,c,d,e){this.warn(d),this._saveItem(this.CONSTANTS.STORAGE.ERROR,c),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,d),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,e),b&&this._activeRenewals[b]&&(this._activeRenewals[b]=null),this._loginInProgress=!1,this._acquireTokenInProgress=!1,a&&a(d,null,c)},AuthenticationContext.prototype._loginPopup=function(a,b,c){var d=this._openPopup(a,\"login\",this.CONSTANTS.POPUP_WIDTH,this.CONSTANTS.POPUP_HEIGHT),e=c||this.callback;if(null==d){var f=\"Popup Window is null. This can happen if you are using IE\";return void this._handlePopupError(e,b,\"Error opening popup\",f,f)}if(this._openedWindows.push(d),-1!=this.config.redirectUri.indexOf(\"#\"))var g=this.config.redirectUri.split(\"#\")[0];else var g=this.config.redirectUri;var h=this,i=window.setInterval(function(){if(!d||d.closed||void 0===d.closed){var a=\"Popup Window closed\",c=\"Popup Window closed by UI action/ Popup Window handle destroyed due to cross zone navigation in IE/Edge\";return h.isAngular&&h._broadcast(\"adal:popUpClosed\",c+h.CONSTANTS.RESOURCE_DELIMETER+a),h._handlePopupError(e,b,a,c,c),void window.clearInterval(i)}try{var f=d.location;if(-1!=encodeURI(f.href).indexOf(encodeURI(g)))return h.isAngular?h._broadcast(\"adal:popUpHashChanged\",f.hash):h.handleWindowCallback(f.hash),window.clearInterval(i),h._loginInProgress=!1,h._acquireTokenInProgress=!1,h.info(\"Closing popup window\"),h._openedWindows=[],void d.close()}catch(a){}},1)},AuthenticationContext.prototype._broadcast=function(a,b){!function(){function a(a,b){b=b||{bubbles:!1,cancelable:!1,detail:void 0};var c=document.createEvent(\"CustomEvent\");return c.initCustomEvent(a,b.bubbles,b.cancelable,b.detail),c}if(\"function\"==typeof window.CustomEvent)return!1;a.prototype=window.Event.prototype,window.CustomEvent=a}();var c=new CustomEvent(a,{detail:b});window.dispatchEvent(c)},AuthenticationContext.prototype.loginInProgress=function(){return this._loginInProgress},AuthenticationContext.prototype._hasResource=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);return b&&!this._isEmpty(b)&&b.indexOf(a+this.CONSTANTS.RESOURCE_DELIMETER)>-1},AuthenticationContext.prototype.getCachedToken=function(a){if(!this._hasResource(a))return null;var b=this._getItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a),c=this._getItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a),d=this.config.expireOffsetSeconds||300;return c&&c>this._now()+d?b:(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0),null)},AuthenticationContext.prototype.getCachedUser=function(){if(this._user)return this._user;var a=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);return this._user=this._createUser(a),this._user},AuthenticationContext.prototype.registerCallback=function(a,b,c){this._activeRenewals[b]=a,this._callBacksMappedToRenewStates[a]||(this._callBacksMappedToRenewStates[a]=[]);var d=this;this._callBacksMappedToRenewStates[a].push(c),this._callBackMappedToRenewStates[a]||(this._callBackMappedToRenewStates[a]=function(c,e,f,g){d._activeRenewals[b]=null;for(var h=0;h<d._callBacksMappedToRenewStates[a].length;++h)try{d._callBacksMappedToRenewStates[a][h](c,e,f,g)}catch(f){d.warn(f)}d._callBacksMappedToRenewStates[a]=null,d._callBackMappedToRenewStates[a]=null})},AuthenticationContext.prototype._renewToken=function(a,b,c){this.info(\"renewToken is called for resource:\"+a);var d=this._addAdalFrame(\"adalRenewFrame\"+a),e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this.verbose(\"Renew token Expected state: \"+e),c=c||\"token\";var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(c,a),\"prompt\");c===this.RESPONSE_TYPE.ID_TOKEN_TOKEN&&(this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce)),f+=\"&prompt=none\",f=this._addHintParameters(f),this.registerCallback(e,a,b),this.verbosePii(\"Navigate to:\"+f),d.src=\"about:blank\",this._loadFrameTimeout(f,\"adalRenewFrame\"+a,a)},AuthenticationContext.prototype._renewIdToken=function(a,b){this.info(\"renewIdToken is called\");var c=this._addAdalFrame(\"adalIdTokenFrame\"),d=this._guid()+\"|\"+this.config.clientId;this._idTokenNonce=this._guid(),this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,this._idTokenNonce,!0),this.config.state=d,this._renewStates.push(d),this.verbose(\"Renew Idtoken Expected state: \"+d);var e=null===b||void 0===b?null:this.config.clientId,b=b||\"id_token\",f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(b,e),\"prompt\");f+=\"&prompt=none\",f=this._addHintParameters(f),f+=\"&nonce=\"+encodeURIComponent(this._idTokenNonce),this.registerCallback(d,this.config.clientId,a),this.verbosePii(\"Navigate to:\"+f),c.src=\"about:blank\",this._loadFrameTimeout(f,\"adalIdTokenFrame\",this.config.clientId)},AuthenticationContext.prototype._urlContainsQueryStringParameter=function(a,b){return new RegExp(\"[\\\\?&]\"+a+\"=\").test(b)},AuthenticationContext.prototype._urlRemoveQueryStringParameter=function(a,b){var c=new RegExp(\"(\\\\&\"+b+\"=)[^&]+\");return a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+&\"),a=a.replace(c,\"\"),c=new RegExp(\"(\"+b+\"=)[^&]+\"),a=a.replace(c,\"\")},AuthenticationContext.prototype._loadFrameTimeout=function(a,b,c){this.verbose(\"Set loading state to pending for: \"+c),this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+c,this.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS),this._loadFrame(a,b);var d=this;setTimeout(function(){if(d._getItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c)===d.CONSTANTS.TOKEN_RENEW_STATUS_IN_PROGRESS){d.verbose(\"Loading frame has timed out after: \"+d.CONSTANTS.LOADFRAME_TIMEOUT/1e3+\" seconds for resource \"+c);var a=d._activeRenewals[c];a&&d._callBackMappedToRenewStates[a]&&d._callBackMappedToRenewStates[a](\"Token renewal operation failed due to timeout\",null,\"Token Renewal Failed\"),d._saveItem(d.CONSTANTS.STORAGE.RENEW_STATUS+c,d.CONSTANTS.TOKEN_RENEW_STATUS_CANCELED)}},d.CONSTANTS.LOADFRAME_TIMEOUT)},AuthenticationContext.prototype._loadFrame=function(a,b){var c=this;c.info(\"LoadFrame: \"+b);var d=b;setTimeout(function(){var b=c._addAdalFrame(d);\"\"!==b.src&&\"about:blank\"!==b.src||(b.src=a,c._loadFrame(a,d))},500)},AuthenticationContext.prototype.acquireToken=function(a,b){if(this._isEmpty(a))return this.warn(\"resource is required\"),void b(\"resource is required\",null,\"resource is required\");var c=this.getCachedToken(a);return c?(this.info(\"Token is already in cache for resource:\"+a),void b(null,c,null)):this._user||this.config.extraQueryParameter&&-1!==this.config.extraQueryParameter.indexOf(\"login_hint\")?void(this._activeRenewals[a]?this.registerCallback(this._activeRenewals[a],a,b):(this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,a===this.config.clientId?this._user?(this.verbose(\"renewing idtoken\"),this._renewIdToken(b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewIdToken(b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)):this._user?(this.verbose(\"renewing access_token\"),this._renewToken(a,b)):(this.verbose(\"renewing idtoken and access_token\"),this._renewToken(a,b,this.RESPONSE_TYPE.ID_TOKEN_TOKEN)))):(this.warn(\"User login is required\"),void b(\"User login is required\",null,\"login required\"))},AuthenticationContext.prototype.acquireTokenPopup=function(a,b,c,d){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this._renewStates.push(e),this._requestType=this.REQUEST_TYPE.RENEW_TOKEN,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this.registerCallback(e,a,d),this._loginPopup(f,a,d)},AuthenticationContext.prototype.acquireTokenRedirect=function(a,b,c){if(this._isEmpty(a))return this.warn(\"resource is required\"),void d(\"resource is required\",null,\"resource is required\");var d=this.callback;if(!this._user)return this.warn(\"User login is required\"),void d(\"User login is required\",null,\"login required\");if(this._acquireTokenInProgress)return this.warn(\"Acquire token interactive is already in progress\"),void d(\"Acquire token interactive is already in progress\",null,\"Acquire token interactive is already in progress\");var e=this._guid()+\"|\"+a;this.config.state=e,this.verbose(\"Renew token Expected state: \"+e);var f=this._urlRemoveQueryStringParameter(this._getNavigateUrl(\"token\",a),\"prompt\");if(f+=\"&prompt=select_account\",b&&(f+=b),c&&-1===f.indexOf(\"&claims\"))f+=\"&claims=\"+encodeURIComponent(c);else if(c&&-1!==f.indexOf(\"&claims\"))throw new Error(\"Claims cannot be passed as an extraQueryParameter\");f=this._addHintParameters(f),this._acquireTokenInProgress=!0,this.info(\"acquireToken interactive is called for the resource \"+a),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,window.location.href),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,e,!0),this.promptUser(f)},AuthenticationContext.prototype.promptUser=function(a){a?(this.infoPii(\"Navigate to:\"+a),window.location.replace(a)):this.info(\"Navigate url is empty\")},AuthenticationContext.prototype.clearCache=function(){this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST,\"\"),this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_LOGIN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._renewStates=[],this._saveItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"\");var a=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS);if(!this._isEmpty(a)){a=a.split(this.CONSTANTS.RESOURCE_DELIMETER);for(var b=0;b<a.length&&\"\"!==a[b];b++)this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a[b],\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a[b],0)}this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,\"\")},AuthenticationContext.prototype.clearCacheForResource=function(a){this._saveItem(this.CONSTANTS.STORAGE.STATE_RENEW,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\"),this._hasResource(a)&&(this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+a,\"\"),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+a,0))},AuthenticationContext.prototype.logOut=function(){this.clearCache(),this._user=null;var a;if(this.config.logOutUri)a=this.config.logOutUri;else{var b=\"common\",c=\"\";this.config.tenant&&(b=this.config.tenant),this.config.postLogoutRedirectUri&&(c=\"post_logout_redirect_uri=\"+encodeURIComponent(this.config.postLogoutRedirectUri)),a=this.instance+b+\"/oauth2/logout?\"+c}this.infoPii(\"Logout navigate to: \"+a),this.promptUser(a)},AuthenticationContext.prototype._isEmpty=function(a){return void 0===a||!a||0===a.length},AuthenticationContext.prototype.getUser=function(a){if(\"function\"!=typeof a)throw new Error(\"callback is not a function\");if(this._user)return void a(null,this._user);var b=this._getItem(this.CONSTANTS.STORAGE.IDTOKEN);this._isEmpty(b)?(this.warn(\"User information is not available\"),a(\"User information is not available\",null)):(this.info(\"User exists in cache: \"),this._user=this._createUser(b),a(null,this._user))},AuthenticationContext.prototype._addHintParameters=function(a){if(this._user&&this._user.profile)if(this._user.profile.sid&&-1!==a.indexOf(\"&prompt=none\"))this._urlContainsQueryStringParameter(\"sid\",a)||(a+=\"&sid=\"+encodeURIComponent(this._user.profile.sid));else if(this._user.profile.upn&&(this._urlContainsQueryStringParameter(\"login_hint\",a)||(a+=\"&login_hint=\"+encodeURIComponent(this._user.profile.upn)),!this._urlContainsQueryStringParameter(\"domain_hint\",a)&&this._user.profile.upn.indexOf(\"@\")>-1)){var b=this._user.profile.upn.split(\"@\");a+=\"&domain_hint=\"+encodeURIComponent(b[b.length-1])}return a},AuthenticationContext.prototype._createUser=function(a){var b=null,c=this._extractIdToken(a);return c&&c.hasOwnProperty(\"aud\")&&(c.aud.toLowerCase()===this.config.clientId.toLowerCase()?(b={userName:\"\",profile:c},c.hasOwnProperty(\"upn\")?b.userName=c.upn:c.hasOwnProperty(\"email\")&&(b.userName=c.email)):this.warn(\"IdToken has invalid aud field\")),b},AuthenticationContext.prototype._getHash=function(a){return a.indexOf(\"#/\")>-1?a=a.substring(a.indexOf(\"#/\")+2):a.indexOf(\"#\")>-1&&(a=a.substring(1)),a},AuthenticationContext.prototype.isCallback=function(a){a=this._getHash(a);var b=this._deserialize(a);return b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN)},AuthenticationContext.prototype.getLoginError=function(){return this._getItem(this.CONSTANTS.STORAGE.LOGIN_ERROR)},AuthenticationContext.prototype.getRequestInfo=function(a){a=this._getHash(a);var b=this._deserialize(a),c={valid:!1,parameters:{},stateMatch:!1,stateResponse:\"\",requestType:this.REQUEST_TYPE.UNKNOWN};if(b&&(c.parameters=b,b.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION)||b.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)||b.hasOwnProperty(this.CONSTANTS.ID_TOKEN))){c.valid=!0;var d=\"\";if(!b.hasOwnProperty(\"state\"))return this.warn(\"No state returned\"),c;if(this.verbose(\"State: \"+b.state),d=b.state,c.stateResponse=d,this._matchState(c))return c;if(!c.stateMatch&&window.parent){c.requestType=this._requestType;for(var e=this._renewStates,f=0;f<e.length;f++)if(e[f]===c.stateResponse){c.stateMatch=!0;break}}}return c},AuthenticationContext.prototype._matchNonce=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.profile.nonce)return!0}return!1},AuthenticationContext.prototype._matchState=function(a){var b=this._getItem(this.CONSTANTS.STORAGE.STATE_LOGIN);if(b){b=b.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<b.length;c++)if(b[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.LOGIN,a.stateMatch=!0,!0}var d=this._getItem(this.CONSTANTS.STORAGE.STATE_RENEW);if(d){d=d.split(this.CONSTANTS.CACHE_DELIMETER);for(var c=0;c<d.length;c++)if(d[c]===a.stateResponse)return a.requestType=this.REQUEST_TYPE.RENEW_TOKEN,a.stateMatch=!0,!0}return!1},AuthenticationContext.prototype._getResourceFromState=function(a){if(a){var b=a.indexOf(\"|\");if(b>-1&&b+1<a.length)return a.substring(b+1)}return\"\"},AuthenticationContext.prototype.saveTokenFromHash=function(a){this.info(\"State status:\"+a.stateMatch+\"; Request type:\"+a.requestType),this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"\");var b=this._getResourceFromState(a.stateResponse);if(a.parameters.hasOwnProperty(this.CONSTANTS.ERROR_DESCRIPTION))this.infoPii(\"Error :\"+a.parameters.error+\"; Error description:\"+a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),this._saveItem(this.CONSTANTS.STORAGE.ERROR,a.parameters.error),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,a.parameters[this.CONSTANTS.ERROR_DESCRIPTION]),a.requestType===this.REQUEST_TYPE.LOGIN&&(this._loginInProgress=!1,this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,a.parameters.error_description));else if(a.stateMatch){this.info(\"State is right\"),a.parameters.hasOwnProperty(this.CONSTANTS.SESSION_STATE)&&this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE,a.parameters[this.CONSTANTS.SESSION_STATE]);var c;a.parameters.hasOwnProperty(this.CONSTANTS.ACCESS_TOKEN)&&(this.info(\"Fragment has access token\"),this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ACCESS_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._expiresIn(a.parameters[this.CONSTANTS.EXPIRES_IN]))),a.parameters.hasOwnProperty(this.CONSTANTS.ID_TOKEN)&&(this.info(\"Fragment has id token\"),this._loginInProgress=!1,this._user=this._createUser(a.parameters[this.CONSTANTS.ID_TOKEN]),this._user&&this._user.profile?this._matchNonce(this._user)?(this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN,a.parameters[this.CONSTANTS.ID_TOKEN]),b=this.config.loginResource?this.config.loginResource:this.config.clientId,this._hasResource(b)||(c=this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS)||\"\",this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS,c+b+this.CONSTANTS.RESOURCE_DELIMETER)),this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY+b,a.parameters[this.CONSTANTS.ID_TOKEN]),this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY+b,this._user.profile.exp)):(this._saveItem(this.CONSTANTS.STORAGE.LOGIN_ERROR,\"Nonce received: \"+this._user.profile.nonce+\" is not same as requested: \"+this._getItem(this.CONSTANTS.STORAGE.NONCE_IDTOKEN)),this._user=null):(a.parameters.error=\"invalid id_token\",a.parameters.error_description=\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN],this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"invalid id_token\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid id_token. id_token: \"+a.parameters[this.CONSTANTS.ID_TOKEN])))}else a.parameters.error=\"Invalid_state\",a.parameters.error_description=\"Invalid_state. state: \"+a.stateResponse,this._saveItem(this.CONSTANTS.STORAGE.ERROR,\"Invalid_state\"),this._saveItem(this.CONSTANTS.STORAGE.ERROR_DESCRIPTION,\"Invalid_state. state: \"+a.stateResponse);this._saveItem(this.CONSTANTS.STORAGE.RENEW_STATUS+b,this.CONSTANTS.TOKEN_RENEW_STATUS_COMPLETED)},AuthenticationContext.prototype.getResourceForEndpoint=function(a){if(this.config&&this.config.anonymousEndpoints)for(var b=0;b<this.config.anonymousEndpoints.length;b++)if(a.indexOf(this.config.anonymousEndpoints[b])>-1)return null;if(this.config&&this.config.endpoints)for(var c in this.config.endpoints)if(a.indexOf(c)>-1)return this.config.endpoints[c];return a.indexOf(\"http://\")>-1||a.indexOf(\"https://\")>-1?this._getHostFromUri(a)===this._getHostFromUri(this.config.redirectUri)?this.config.loginResource:null:this.config.loginResource},AuthenticationContext.prototype._getHostFromUri=function(a){var b=String(a).replace(/^(https?:)\\/\\//,\"\");return b=b.split(\"/\")[0]},AuthenticationContext.prototype.handleWindowCallback=function(a){if(null==a&&(a=window.location.hash),this.isCallback(a)){var b=null,c=!1;this._openedWindows.length>0&&this._openedWindows[this._openedWindows.length-1].opener&&this._openedWindows[this._openedWindows.length-1].opener._adalInstance?(b=this._openedWindows[this._openedWindows.length-1].opener._adalInstance,c=!0):window.parent&&window.parent._adalInstance&&(b=window.parent._adalInstance);var d,e,f=b.getRequestInfo(a),g=null;e=c||window.parent!==window?b._callBackMappedToRenewStates[f.stateResponse]:b.callback,b.info(\"Returned from redirect url\"),b.saveTokenFromHash(f),f.requestType===this.REQUEST_TYPE.RENEW_TOKEN&&window.parent?(window.parent!==window?b.verbose(\"Window is in iframe, acquiring token silently\"):b.verbose(\"acquiring token interactive in progress\"),d=f.parameters[b.CONSTANTS.ACCESS_TOKEN]||f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ACCESS_TOKEN):f.requestType===this.REQUEST_TYPE.LOGIN&&(d=f.parameters[b.CONSTANTS.ID_TOKEN],g=b.CONSTANTS.ID_TOKEN);var h=f.parameters[b.CONSTANTS.ERROR_DESCRIPTION],i=f.parameters[b.CONSTANTS.ERROR];try{e&&e(h,d,i,g)}catch(a){b.error(\"Error occurred in user defined callback function: \"+a)}window.parent!==window||c||(b.config.navigateToLoginRequestUrl?window.location.href=b._getItem(b.CONSTANTS.STORAGE.LOGIN_REQUEST):window.location.hash=\"\")}},AuthenticationContext.prototype._getNavigateUrl=function(a,b){var c=\"common\";this.config.tenant&&(c=this.config.tenant);var d=this.instance+c+\"/oauth2/authorize\"+this._serialize(a,this.config,b)+this._addLibMetadata();return this.info(\"Navigate url:\"+d),d},AuthenticationContext.prototype._extractIdToken=function(a){var b=this._decodeJwt(a);if(!b)return null;try{var c=b.JWSPayload,d=this._base64DecodeStringUrlSafe(c);return d?JSON.parse(d):(this.info(\"The returned id_token could not be base64 url safe decoded.\"),null)}catch(a){this.error(\"The returned id_token could not be decoded\",a)}return null},AuthenticationContext.prototype._base64DecodeStringUrlSafe=function(a){return a=a.replace(/-/g,\"+\").replace(/_/g,\"/\"),window.atob?decodeURIComponent(escape(window.atob(a))):decodeURIComponent(escape(this._decode(a)))},AuthenticationContext.prototype._decode=function(a){var b=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";a=String(a).replace(/=+$/,\"\");var c=a.length;if(c%4==1)throw new Error(\"The token to be decoded is not correctly encoded.\");for(var d,e,f,g,h,i,j,k,l=\"\",m=0;m<c;m+=4){if(d=b.indexOf(a.charAt(m)),e=b.indexOf(a.charAt(m+1)),f=b.indexOf(a.charAt(m+2)),g=b.indexOf(a.charAt(m+3)),m+2===c-1){h=d<<18|e<<12|f<<6,i=h>>16&255,j=h>>8&255,l+=String.fromCharCode(i,j);break}if(m+1===c-1){h=d<<18|e<<12,i=h>>16&255,l+=String.fromCharCode(i);break}h=d<<18|e<<12|f<<6|g,i=h>>16&255,j=h>>8&255,k=255&h,l+=String.fromCharCode(i,j,k)}return l},AuthenticationContext.prototype._decodeJwt=function(a){if(this._isEmpty(a))return null;var b=/^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/,c=b.exec(a);return!c||c.length<4?(this.warn(\"The returned id_token is not parseable.\"),null):{header:c[1],JWSPayload:c[2],JWSSig:c[3]}},AuthenticationContext.prototype._convertUrlSafeToRegularBase64EncodedString=function(a){return a.replace(\"-\",\"+\").replace(\"_\",\"/\")},AuthenticationContext.prototype._serialize=function(a,b,c){var d=[];if(null!==b){d.push(\"?response_type=\"+a),d.push(\"client_id=\"+encodeURIComponent(b.clientId)),c&&d.push(\"resource=\"+encodeURIComponent(c)),d.push(\"redirect_uri=\"+encodeURIComponent(b.redirectUri)),d.push(\"state=\"+encodeURIComponent(b.state)),b.hasOwnProperty(\"slice\")&&d.push(\"slice=\"+encodeURIComponent(b.slice)),b.hasOwnProperty(\"extraQueryParameter\")&&d.push(b.extraQueryParameter);var e=b.correlationId?b.correlationId:this._guid();d.push(\"client-request-id=\"+encodeURIComponent(e))}return d.join(\"&\")},AuthenticationContext.prototype._deserialize=function(a){var b,c=/\\+/g,d=/([^&=]+)=([^&]*)/g,e=function(a){return decodeURIComponent(a.replace(c,\" \"))},f={};for(b=d.exec(a);b;)f[e(b[1])]=e(b[2]),b=d.exec(a);return f},AuthenticationContext.prototype._decimalToHex=function(a){for(var b=a.toString(16);b.length<2;)b=\"0\"+b;return b},AuthenticationContext.prototype._guid=function(){var a=window.crypto||window.msCrypto;if(a&&a.getRandomValues){var b=new Uint8Array(16);return a.getRandomValues(b),b[6]|=64,b[6]&=79,b[8]|=128,b[8]&=191,this._decimalToHex(b[0])+this._decimalToHex(b[1])+this._decimalToHex(b[2])+this._decimalToHex(b[3])+\"-\"+this._decimalToHex(b[4])+this._decimalToHex(b[5])+\"-\"+this._decimalToHex(b[6])+this._decimalToHex(b[7])+\"-\"+this._decimalToHex(b[8])+this._decimalToHex(b[9])+\"-\"+this._decimalToHex(b[10])+this._decimalToHex(b[11])+this._decimalToHex(b[12])+this._decimalToHex(b[13])+this._decimalToHex(b[14])+this._decimalToHex(b[15])}for(var c=\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",d=\"0123456789abcdef\",e=0,f=\"\",g=0;g<36;g++)\"-\"!==c[g]&&\"4\"!==c[g]&&(e=16*Math.random()|0),\"x\"===c[g]?f+=d[e]:\"y\"===c[g]?(e&=3,e|=8,f+=d[e]):f+=c[g];return f},AuthenticationContext.prototype._expiresIn=function(a){return a||(a=3599),this._now()+parseInt(a,10)},AuthenticationContext.prototype._now=function(){return Math.round((new Date).getTime()/1e3)},AuthenticationContext.prototype._addAdalFrame=function(a){if(void 0!==a){this.info(\"Add adal frame to document:\"+a);var b=document.getElementById(a);if(!b){if(document.createElement&&document.documentElement&&(window.opera||-1===window.navigator.userAgent.indexOf(\"MSIE 5.0\"))){var c=document.createElement(\"iframe\");c.setAttribute(\"id\",a),c.setAttribute(\"aria-hidden\",\"true\"),c.style.visibility=\"hidden\",c.style.position=\"absolute\",c.style.width=c.style.height=c.borderWidth=\"0px\",b=document.getElementsByTagName(\"body\")[0].appendChild(c)}else document.body&&document.body.insertAdjacentHTML&&document.body.insertAdjacentHTML(\"beforeEnd\",'<iframe name=\"'+a+'\" id=\"'+a+'\" style=\"display:none\"></iframe>');window.frames&&window.frames[a]&&(b=window.frames[a])}return b}},AuthenticationContext.prototype._saveItem=function(a,b,c){if(this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation){if(!this._supportsLocalStorage())return this.info(\"Local storage is not supported\"),!1;if(c){var d=this._getItem(a)||\"\";localStorage.setItem(a,d+b+this.CONSTANTS.CACHE_DELIMETER)}else localStorage.setItem(a,b);return!0}return this._supportsSessionStorage()?(sessionStorage.setItem(a,b),!0):(this.info(\"Session storage is not supported\"),!1)},AuthenticationContext.prototype._getItem=function(a){return this.config&&this.config.cacheLocation&&\"localStorage\"===this.config.cacheLocation?this._supportsLocalStorage()?localStorage.getItem(a):(this.info(\"Local storage is not supported\"),null):this._supportsSessionStorage()?sessionStorage.getItem(a):(this.info(\"Session storage is not supported\"),null)},AuthenticationContext.prototype._supportsLocalStorage=function(){try{return!!window.localStorage&&(window.localStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.localStorage.getItem(\"storageTest\")&&(window.localStorage.removeItem(\"storageTest\"),!window.localStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._supportsSessionStorage=function(){try{return!!window.sessionStorage&&(window.sessionStorage.setItem(\"storageTest\",\"A\"),\"A\"==window.sessionStorage.getItem(\"storageTest\")&&(window.sessionStorage.removeItem(\"storageTest\"),!window.sessionStorage.getItem(\"storageTest\")))}catch(a){return!1}},AuthenticationContext.prototype._cloneConfig=function(a){if(null===a||\"object\"!=typeof a)return a;var b={};for(var c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b},AuthenticationContext.prototype._addLibMetadata=function(){return\"&x-client-SKU=Js&x-client-Ver=\"+this._libVersion()},AuthenticationContext.prototype.log=function(a,b,c,d){if(a<=Logging.level){if(!Logging.piiLoggingEnabled&&d)return;var e=(new Date).toUTCString(),f=\"\";f=this.config.correlationId?e+\":\"+this.config.correlationId+\"-\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b:e+\":\"+this._libVersion()+\"-\"+this.CONSTANTS.LEVEL_STRING_MAP[a]+\" \"+b,c&&(f+=\"\\nstack:\\n\"+c.stack),Logging.log(f)}},AuthenticationContext.prototype.error=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b)},AuthenticationContext.prototype.warn=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null)},AuthenticationContext.prototype.info=function(a){\r\nthis.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null)},AuthenticationContext.prototype.verbose=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null)},AuthenticationContext.prototype.errorPii=function(a,b){this.log(this.CONSTANTS.LOGGING_LEVEL.ERROR,a,b,!0)},AuthenticationContext.prototype.warnPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.WARN,a,null,!0)},AuthenticationContext.prototype.infoPii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.INFO,a,null,!0)},AuthenticationContext.prototype.verbosePii=function(a){this.log(this.CONSTANTS.LOGGING_LEVEL.VERBOSE,a,null,!0)},AuthenticationContext.prototype._libVersion=function(){return\"1.0.17\"},\"undefined\"!=typeof module&&module.exports&&(module.exports=AuthenticationContext,module.exports.inject=function(a){return new AuthenticationContext(a)}),AuthenticationContext}();","export * from \"./sp\";\r\nexport * from \"./util\";\r\nexport * from \"./constants\";\r\nexport * from \"./storage\";\r\nexport * from \"./models\";\r\nexport * from \"./telemetryServices\";\r\n","//import pnp from \"sp-pnp-js\";\nimport * as Util from \"@pnp/common\";\nimport { sp as pnpSp,StorageEntity} from \"@pnp/sp\";\nimport { models } from \"./models\";\nimport { storage } from \"./storage\";\nimport { Constants } from \"./constants\";\nimport { util } from \"./util\";\nimport { PnPClientStorage} from \"@pnp/common\";\nimport { taxonomy, ITermSet, ITerm, ITermData, ITermSetData } from \"@pnp/sp-taxonomy\";\nimport \"@pnp/polyfill-ie11\";\n\nexport class sp {\n\n    // Retrieves Term object from single Taxonomy field value that is returned from Search\n    public static getTermFromSearchSingleTaxonomyField(taxFieldValue: string): models.Term {\n        let returnValue: models.Term = null;\n        try {\n            // Term is returned as formatted string with GUIDs and Name - extracting term GUID and Name out of it by using Regex.\n            // Example value: \"GP0|#3522f909-7c75-46d0-88bd-05fc4c70e286;L0|#03522f909-7c75-46d0-88bd-05fc4c70e286|Group;GTSet|#5df8141a-67c1-400f-ad0a-ce2e018fc224;GPP|#9a9a87e7-6764-46e2-99be-cf54adda6bff\"\n            // Correct GUID is the one following \"L0|#0\".\n            const regexSingleTaxonomyValue: RegExp = /(;|\\n\\n)L0\\|#0(.*?)\\|(.*?)(;|\\n\\n)GTSet\\|#/i;\n            if (!Util.stringIsNullOrEmpty(taxFieldValue)) {\n                const regexResult: RegExpMatchArray = taxFieldValue.match(regexSingleTaxonomyValue);\n                if (regexResult != null) {\n                    const term: models.Term = new models.Term();\n                    term.ID = regexResult[2];\n                    term.Name = regexResult[3];\n                    returnValue = term;\n                }\n                else {\n                    console.error(`getTermFromSearchSingleTaxonomyField: no regular expression matches found in \"${taxFieldValue}\"`);\n                }\n            }\n            else {\n                console.error(`getTermFromSearchSingleTaxonomyField: \"taxFieldValue\" is empty`);\n            }\n        }\n        catch (error) {\n            console.error(`getTermFromSearchSingleTaxonomyField: error has occured when processing \"${taxFieldValue}\": ${error}`);\n        }\n        return returnValue;\n    }\n\n    // Retrieves Term objects from multi Taxonomy field value that is returned from Search\n    public static getTermsFromSearchMultiTaxonomyField(taxFieldValue: string): models.Term[] {\n        const returnValue: models.Term[] = [];\n        try {\n            // Splitting multi field with terms into individual strings for each term.\n            const regexMultiTaxonomyValue: RegExp = /GP0\\|#.*?(;|\\n\\n).*?(?=(;|\\n\\n)GP0\\|#|$)/ig;\n            if (!Util.stringIsNullOrEmpty(taxFieldValue)) {\n                const regexResult: RegExpMatchArray = taxFieldValue.match(regexMultiTaxonomyValue);\n                if (regexResult != null) {\n                    regexResult.forEach(\n                        (singleTermValue: string) => {\n                            if (!Util.stringIsNullOrEmpty(singleTermValue)) {\n                                // Getting Term object for each term string\n                                const term: models.Term = this.getTermFromSearchSingleTaxonomyField(singleTermValue);\n                                if (term != null) {\n                                    returnValue.push(term);\n                                }\n                            }\n                        }\n                    );\n                }\n                else {\n                    console.error(`getTermsFromSearchMultiTaxonomyField: no regular expression matches found in \"${taxFieldValue}\"`);\n                }\n            }\n            else {\n                console.error(`getTermsFromSearchMultiTaxonomyField: \"taxFieldValue\" is empty`);\n            }\n        }\n        catch (error) {\n            console.error(`getTermsFromSearchMultiTaxonomyField: error has occured when processing \"${taxFieldValue}\": ${error}`);\n        }\n        return returnValue;\n    }\n\n    public static getTermsFromMultiTaxonomyField(taxFieldValue: string): models.Term[]\n    {\n        const returnValue: models.Term[] = [];\n        try {\n            if (!Util.stringIsNullOrEmpty(taxFieldValue)) {\n               const texFieldArray: any[] = taxFieldValue.split(';');\n               if (texFieldArray.length > 0) {\n                texFieldArray.forEach(\n                        (singleTermValue: string) => {\n                            if (!Util.stringIsNullOrEmpty(singleTermValue)) {\n                                // Getting Term object for each term string\n                                const termDetailed: any[] = singleTermValue.split(\"|\");\n                                const tag: models.Term = new models.Term();\n                                tag.ID = termDetailed[1];\n                                tag.Name = termDetailed[0];\n                                tag.PathOfTerm = '';\n                                returnValue.push(tag);\n                            }\n                        }\n                    );\n                }\n                else {\n                    console.error(`getTermsFromMultiTaxonomyField: no regular expression matches found in \"${taxFieldValue}\"`);\n                }\n            }\n            else {\n                console.error(`getTermsFromMultiTaxonomyField: \"taxFieldValue\" is empty`);\n            }\n        }\n        catch (error) {\n            console.error(`getTermsFromMultiTaxonomyField: error has occured when processing \"${taxFieldValue}\": ${error}`);\n        }\n        return returnValue;\n    }\n    public static configurePnP(spCtx: any) {\n        pnpSp.setup(\n            {\n                spfxContext: spCtx,\n                sp: {\n                    headers: {\n                        \"Accept\": \"application/json; odata=nometadata\"\n                    }\n                }\n            }\n        );\n        taxonomy.setup({\n            spfxContext: spCtx\n        });\n    }\n\n    // Retrieves User Profile Properties\n    // Parameters:\n    //   1) userName - Claims or Simple format - it is tranformed to Claims if passed in as Simple\n    //   2) spCtx - SharePoint Framework context\n    public static async getUserProperties(userName: string, spCtx: any): Promise<models.UserProperties> {\n        const returnValue: models.UserProperties = new models.UserProperties();\n        returnValue.LocationGUID = \"\";\n        returnValue.Location = \"\";\n        returnValue.OrganizationGUID = \"\";\n        returnValue.Organization = \"\";\n        returnValue.TopicsGUIDs = [];\n        returnValue.Topics = [];\n        returnValue.MyLinksLocation = \"\";\n        returnValue.IsDataLoaded = false;\n\n        try {\n            this.configurePnP(spCtx);\n\n            const userNameClaimsFormat: string = util.getClaimsUserName(userName);\n            const userProperties: any = await pnpSp.profiles.getPropertiesFor(userNameClaimsFormat);\n\n            const userProfileProperties: any[] = userProperties.UserProfileProperties;\n\n            let bLocationGUIDFound: boolean = false;\n            let bLocationFound: boolean = false;\n            let bOrganizationGUIDFound: boolean = false;\n            let bOrganizationFound: boolean = false;\n            let bTopicsGUIDsFound: boolean = false;\n            let bTopicsFound: boolean = false;\n            let bMyLinksLocationFound: boolean = false;\n\n            for (let i: number = 0; i < userProfileProperties.length; i++) {\n                const userProfileProperty: any = userProfileProperties[i];\n                switch (userProfileProperty.Key) {\n                    case Constants.UserProfileProperties.SHARE_LOCATION_ID:\n                        returnValue.LocationGUID = userProfileProperty.Value;\n                        bLocationGUIDFound = true;\n                        break;\n                    case Constants.UserProfileProperties.SHARE_LOCATION:\n                        returnValue.Location = userProfileProperty.Value;\n                        bLocationFound = true;\n                        break;\n                    case Constants.UserProfileProperties.SHARE_ORGANIZATION_ID:\n                        returnValue.OrganizationGUID = userProfileProperty.Value;\n                        bOrganizationGUIDFound = true;\n                        break;\n                    case Constants.UserProfileProperties.SHARE_ORGANIZATION:\n                        returnValue.Organization = userProfileProperty.Value;\n                        bOrganizationFound = true;\n                        break;\n                    case Constants.UserProfileProperties.SHARE_TOPICS_IDS:\n                        if (!Util.stringIsNullOrEmpty(userProfileProperty.Value)) {\n                            const interestIDs: string[] = userProfileProperty.Value.split(\"|\");\n                            if (interestIDs.length > 0) {\n                                interestIDs.forEach(\n                                    (interestID: string) => {\n                                        if (!Util.stringIsNullOrEmpty(interestID)) {\n                                            returnValue.TopicsGUIDs.push(interestID);\n                                        }\n                                    }\n                                );\n                            }\n                        }\n                        bTopicsGUIDsFound = true;\n                        break;\n                    case Constants.UserProfileProperties.SHARE_TOPICS:\n                        if (!Util.stringIsNullOrEmpty(userProfileProperty.Value)) {\n                            const interestNames: string[] = userProfileProperty.Value.split(\"|\");\n                            if (interestNames.length > 0) {\n                                interestNames.forEach(\n                                    (interestName: string) => {\n                                        if (!Util.stringIsNullOrEmpty(interestName)) {\n                                            returnValue.Topics.push(interestName);\n                                        }\n                                    }\n                                );\n                            }\n                        }\n                        bTopicsFound = true;\n                        break;\n                    case Constants.UserProfileProperties.SHARE_MYLINKS_LOCATION:\n                        returnValue.MyLinksLocation = userProfileProperty.Value;\n                        bMyLinksLocationFound = true;\n                        break;\n                    default:\n                        break;\n                }\n                if (bLocationGUIDFound && bLocationFound && bOrganizationGUIDFound && bOrganizationFound && bTopicsGUIDsFound && bTopicsFound && bMyLinksLocationFound) {\n                    break;\n                }\n            }\n            // set data loaded\n            returnValue.IsDataLoaded = true;\n        }\n        catch (error) {\n            console.error(`getUserProperties: error has occured when processing \"${userName}\": ${error}`);\n        }\n        return returnValue;\n    }\n\n    // Retrieves User Profile Properties and caches them ( via storing Promise in Global Variable to allow reusing the value during the same page load by different components )\n    // Parameters:\n    //   1) userName - Claims or Simple format - it is tranformed to Claims if passed in as Simple\n    //   2) spCtx - SharePoint Framework context\n    // Update(Guru)-08012021 - To improve Page performance and reduce service roundtrips, Also to follow best practice as per Microsoft in below link, increase UPA cache to 1 hour\n    // https://docs.microsoft.com/en-us/microsoft-365/Enterprise/modern-portal-limits?view=o365-worldwide\n    public static async getCachedUserProperties(userName: string, spCtx: any): Promise<models.UserProperties> {\n        let returnValue: Promise<models.UserProperties> = null;\n        try {\n            const userNameClaimsFormat: string = util.getClaimsUserName(userName);\n            returnValue = storage.getOrPutPromiseValueInStorage(\n                `${Constants.CacheKeys.USER_PROPERTIES}_${userNameClaimsFormat}`,\n                \"local\",\n                () => this.getUserProperties(userNameClaimsFormat, spCtx),\n                Util.dateAdd(new Date(), \"minute\", 60)\n            );\n\n            const isDataLoadedCorrectly  = await  returnValue.then((up:models.UserProperties)=>{\n               if(!up.IsDataLoaded){ // Do not store in cache incorrectly loaded data\n                const userNameClaimsFormat: string = util.getClaimsUserName(userName);\n                storage.clearKeyFromLocalStorage(`${Constants.CacheKeys.USER_PROPERTIES}_${userNameClaimsFormat}`);\n               }\n               return up.IsDataLoaded;\n            });\n            if(!isDataLoadedCorrectly){\n                returnValue = null;\n            }\n        }\n        catch (error) {\n            console.error(`getCachedUserProperties: error has occured when processing \"${userName}\": ${error}`);\n        }\n        return returnValue;\n    }\n\n    // Function to clear cached User Properties - it is brough out to common as it is expected to be used in several places\n    public static clearCachedUserProperties(userName: string) {\n        const userNameClaimsFormat: string = util.getClaimsUserName(userName);\n        window[`${Constants.CacheKeys.USER_PROPERTIES}_${userNameClaimsFormat}`] = null;\n        const localStorage = new PnPClientStorage();\n        localStorage.local.delete(`${Constants.CacheKeys.USER_PROPERTIES}_${userNameClaimsFormat}`);\n    }\n\n\n    public static async getTermsByIDs(termIDs: string[], termSetID: string): Promise<models.Term[]> {\n        try{\n\n            const stores = await taxonomy.termStores.get();\n            const store = stores[0];\n            const termSet: ITermSet & ITermSetData  = await store.getTermSetById(termSetID).get();\n            const retArray: models.Term[] = [];\n            for (const termID of termIDs){\n                if (!Util.stringIsNullOrEmpty(termID)) {\n                    const term: ITermData & ITerm =  await termSet.getTermById(termID).get();\n                    const tmpItem: models.Term = new models.Term();\n                    if (term.Id != undefined)\n                    {\n                        tmpItem.ID = term.Id.replace(`/Guid(`, ``).replace(`)/`,``);\n                        tmpItem.Name = term.Name;\n                        tmpItem.PathOfTerm = term.PathOfTerm;\n                        retArray.push(tmpItem);\n                    }\n                    else {\n                        retArray.push(null);\n                    }\n                 }\n                else {\n                    retArray.push(null);\n                }\n            }\n\n            return retArray;\n        }\n        catch (error) {\n            console.error(error);\n            throw error;\n        }\n    }\n\n    // Retrieves terms from the same term set in a single request\n    public static async getChildTerms(termID: string, termSetID: string): Promise<models.Term[]>  {\n\n        let terms: ITermData & ITerm[];\n        const stores = await taxonomy.termStores.get();\n        const store = stores[0];\n        const termSet: ITermSet & ITermSetData  = await store.getTermSetById(termSetID).get();\n        const retArray: models.Term[] = [];\n\n        // If termID is NOT specified then method will return all terms recusively\n        if (Util.stringIsNullOrEmpty(termID)) {\n            terms = await termSet.terms.get();\n        }\n        //If termID IS specified then method will return only term's child\n        else {\n            const currentTerm = await store.getTermSetById(termID).get();\n            terms = await currentTerm.terms.get();\n        }\n\n        await terms.forEach(\n            (term: ITermData & ITerm)=>{\n                const tmpItem: models.Term = new models.Term();\n\n                if (term.IsDeprecated==false)\n                {\n                    tmpItem.ID = term.Id.replace(`/Guid(`, ``).replace(`)/`,``);\n                    tmpItem.Name = term.Name;\n                    tmpItem.PathOfTerm = term.PathOfTerm;\n                    retArray.push(tmpItem);\n                }\n            }\n        );\n\n        return retArray;\n    }\n\n    public static async getParentTermsByID(termIDs: models.TermGuidWithParentLevelsToRetrieve[], termSetID: string): Promise<models.Term[][]> {\n        const stores = await taxonomy.termStores.get();\n        const store = stores[0];\n        const termSet: ITermSet & ITermSetData  = await store.getTermSetById(termSetID).get();\n        let retArray: models.Term[][] = [];\n\n        // Boolean to hold info if query must be executed. It should not be executed if for all terms 0 (that is, none) parent levels must be retrieved.\n        let bNeedToExecuteQuery: boolean = false;\n\n        const tempParents: ITermData & ITerm[][] = await Promise.all(termIDs.map(\n            async (termGuidWithLevel: models.TermGuidWithParentLevelsToRetrieve) => {\n\n                const parentTerms: ITermData & ITerm[] = [];\n                if (termGuidWithLevel != null && termGuidWithLevel.ParentLevelsToRetrieve > 0) {\n                    bNeedToExecuteQuery = true;\n\n                    // Getting term\n                    const term: ITermData & ITerm = await termSet.getTermById(termGuidWithLevel.TermGUID).get();\n\n                    // Loading parent terms\n                    let tmpTerm: ITermData & ITerm = term;\n                    for (let i: number = 0; i < termGuidWithLevel.ParentLevelsToRetrieve; i++) {\n                        tmpTerm = await tmpTerm.parent.get();\n                        parentTerms.push(tmpTerm);\n                    }\n                }\n                return parentTerms;\n            }\n        ));\n\n        if (bNeedToExecuteQuery) {\n                // Preparing output array with arrays of term parents\n                retArray = await tempParents.map(\n                    (termArray: ITermData & ITerm[]) => {\n                        const tmpRetArray: models.Term[] = [];\n                        termArray.forEach(\n                            (term: ITermData & ITerm) => {\n                                const tmpItem: models.Term = new models.Term();\n                                tmpItem.ID = term.Id.replace(`/Guid(`, ``).replace(`)/`,``);\n                                tmpItem.Name = term.Name;\n                                tmpRetArray.push(tmpItem);\n                            }\n                        );\n                        return tmpRetArray;\n                    }\n                );\n                return (retArray);\n            }\n\n        else {\n            retArray = tempParents.map(() => {\n                    return [];\n                }\n            );\n            return (retArray);\n        }\n    }\n\n    public static async getViewIdFromUrl(listRelativeUrl: string, viewUrl: any): Promise<string> {\n        let returnValue: string = null;\n        try {\n            const views: any[] = await pnpSp.site.rootWeb.getList(listRelativeUrl).views\n                .select(\"Id\")\n                .filter(`ServerRelativeUrl eq '${listRelativeUrl}/${viewUrl}'`)\n                .get();\n\n            if (views.length === 1) {\n                returnValue = views[0].Id;\n            }\n        }\n        catch (error) {\n            console.error(`getViewIdFromUrl: error has occured when getting view \"${viewUrl}\" from list \"${listRelativeUrl}\": ${error}`);\n        }\n        return returnValue;\n    }\n\n    public static async updateUserProfileProperty(userName: string, propertyName: string, propertyValue: string, spCtx: any, spConfig: any) {\n        try {\n            const restPath: string = spCtx.pageContext.site.absoluteUrl + \"/_api/SP.UserProfiles.PeopleManager/SetSingleValueProfileProperty\";\n            const httpOptions: any = {\n                headers: {\n                    'Content-Type': 'application/json;odata=nometadata',\n                    'accept': 'application/json; odata=nometadata'\n                },\n                body: JSON.stringify(\n                    {\n                        accountName: util.getClaimsUserName(userName),\n                        propertyName: propertyName,\n                        propertyValue: propertyValue\n                    }\n                )\n            };\n            const response: any = await spCtx.spHttpClient.post(restPath, spConfig, httpOptions);\n            if (!response.ok) {\n                const error: any = await response.json();\n                console.error(`updateUserProfileProperty: error has occured when updating User Profile Property \"${propertyName}\" to \"${propertyValue}\" for the user \"${userName}\": ${error.error.code} - ${error.error.message}`);\n            }\n        }\n        catch (error) {\n            console.error(`updateUserProfileProperty: error has occured when updating User Profile Property \"${propertyName}\" to \"${propertyValue}\" for the user \"${userName}\": ${error}`);\n        }\n    }\n\n\n    public static async updateMultiValueUserProfileProperty(userName: string, propertyName: string, propertyValues: string[], spCtx: any, spConfig: any) {\n        try {\n            const restPath: string = spCtx.pageContext.site.absoluteUrl + \"/_api/SP.UserProfiles.PeopleManager/SetMultiValuedProfileProperty\";\n            const httpOptions: any = {\n                headers: {\n                    'Content-Type': 'application/json;odata=nometadata',\n                    'accept': 'application/json; odata=nometadata'\n                },\n                body: JSON.stringify(\n                    {\n                        accountName: util.getClaimsUserName(userName),\n                        propertyName: propertyName,\n                        propertyValues: propertyValues\n                    }\n                )\n            };\n            const response: any = await spCtx.spHttpClient.post(restPath, spConfig, httpOptions);\n            if (!response.ok) {\n                const error: any = await response.json();\n                console.error(`updateUserProfileProperty: error has occured when updating User Profile Property \"${propertyName}\" to \"${propertyValues}\" for the user \"${userName}\": ${error.error.code} - ${error.error.message}`);\n                return false;\n            }\n        }\n        catch (error) {\n            console.error(`updateUserProfileProperty: error has occured when updating User Profile Property \"${propertyName}\" to \"${propertyValues}\" for the user \"${userName}\": ${error}`);\n            return false;\n        }\n\n        return true;\n    }\n\n    // GET for SharePoint. Pass in \"SPHttpClient.configurations.v1\" as \"spConfig\".\n    public static async get(url: string, spCtx: any, spConfig: any) {\n        const httpOptions = {\n            headers: { accept: \"application/json;odata.metadata=none\" }\n        };\n        const data = await spCtx.spHttpClient.get(url, spConfig, httpOptions);\n        if (data.ok) {\n            return data.json();\n        }\n        else {\n            throw `get: error in response of \"${url}\": ${await data.text()}`;\n        }\n    }\n\n    // POST for SharePoint. Pass in \"SPHttpClient.configurations.v1\" as \"spConfig\".\n    // Note that \"pnp.sp.post\" executes additional query for \"contentinfo\". It is not being executed with standard SharePoint POST method. Use the standard method for better performance.\n    public static async post(url: string, body: any, spCtx: any, spConfig: any, odataVersion?: string) {\n        const httpOptions = {\n            body: JSON.stringify(body)\n        };\n\n        // Configuring Headers as per the specified \"odataVersion\"\n        switch (odataVersion) {\n            case \"3.0\":\n                httpOptions[\"headers\"] = {\n                    'odata-version': odataVersion,\n                    accept: \"application/json;odata=nometadata\"\n                };\n                break;\n            default:\n                httpOptions[\"headers\"] = {\n                    accept: \"application/json;odata.metadata=none\"\n                };\n                break;\n        }\n\n        const data = await spCtx.spHttpClient.post(url, spConfig, httpOptions);\n        if (data.ok) {\n            return data.json();\n        }\n        else {\n            throw `post: error in response of \"${url}\": ${await data.text()}`;\n        }\n    }\n\n    // Gets SharePoint objects that current user is following: http://<siteCollection>/<site>/_api/social.following/my/followed(types=15)\n    // Parameter \"type\" - specify what type of objects to return (https://docs.microsoft.com/en-us/sharepoint/dev/general-development/following-people-and-content-rest-api-reference-for-sharepoint#bk_Followed)\n    public static async getMyFollowedSPObjects(type: number, spCtx: any, spConfig: any): Promise<models.FollowedSPObject[]> {\n        let returnValue: models.FollowedSPObject[] = [];\n        try {\n            if (type != null && type > 0) {\n                returnValue = (await this.get(`${spCtx.pageContext.site.absoluteUrl}/_api/social.following/my/followed(types=${type.toString()})`, spCtx, spConfig)).value;\n            }\n        }\n        catch (error) {\n            console.error(error);\n            throw error;\n        }\n        return returnValue;\n    }\n\n    // Gets Site Collection specific ID for a term by its GUID. The ID is needed if performing CAML query on list and filtering on Taxonomy field by lookup ID.\n    public static async getTermSiteCollectionIdFromGuid(termGUID: string, spCtx: any): Promise<number> {\n        let returnValue: number = null;\n        try {\n            if (!Util.stringIsNullOrEmpty(termGUID)) {\n                this.configurePnP(spCtx);\n\n                const taxonomyResult: any[] = await pnpSp.site.rootWeb.getList(`${util.ensureURLEndsWithSlash(spCtx.pageContext.site.serverRelativeUrl)}Lists/${Constants.ListInternalNames.TAXONOMY_LIST}`).items\n                    .select(Constants.ColumnNames.ID)\n                    .filter(`${Constants.ColumnNames.TaxonomyList.ID_FOR_TERM} eq '${termGUID}'`)\n                    .usingCaching({\n                        key: `${Constants.CacheKeys.TERM_ID_SITE_COLLECTION}_${termGUID}_${spCtx.pageContext.site.id.toString()}`,\n                        storeName: \"local\",\n                        expiration: Util.dateAdd(new Date(), \"day\", 1)\n                    })\n                    .get();\n\n                if (taxonomyResult != null && taxonomyResult.length === 1) {\n                    returnValue = taxonomyResult[0][Constants.ColumnNames.ID];\n                }\n            }\n        }\n        catch (error) {\n            console.error(`getTermSiteCollectionIdFromGuid: error has occured when getting Term ID for \"${termGUID}\" in the site collection \"${spCtx.pageContext.site.serverAbsoluteUrl}\": ${error}`);\n        }\n        return returnValue;\n    }\n\n    public async asyncForEach(array, callback) {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n\n    // Get current logged in user\n    public static async getCurrentUserEmail(spCtx: any):Promise<string>{\n      this.configurePnP(spCtx);\n      let currentUser:any = await pnpSp.web.currentUser.get();\n      return currentUser.Email.toString();\n    }\n\n    // Get Tenant Property\n    public static async getTenantProperty(spCtx:any, newPropertyKey: string):Promise<string> {\n      try{\n        this.configurePnP(spCtx);\n        const prop: StorageEntity = await pnpSp.web.getStorageEntity(newPropertyKey);\n        return prop.Value;\n      }\n      catch(error){\n        return Promise.reject(error.message);\n      }\n\n    }\n\n}\n","!function(t,e){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var r=e();for(var n in r)(\"object\"==typeof exports?exports:t)[n]=r[n]}}(window,function(){return function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,\"a\",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p=\"\",r(r.s=60)}([function(t,e){var r=t.exports=\"undefined\"!=typeof window&&window.Math==Math?window:\"undefined\"!=typeof self&&self.Math==Math?self:Function(\"return this\")();\"number\"==typeof __g&&(__g=r)},function(t,e,r){var n=r(35)(\"wks\"),o=r(22),i=r(0).Symbol,s=\"function\"==typeof i;(t.exports=function(t){return n[t]||(n[t]=s&&i[t]||(s?i:o)(\"Symbol.\"+t))}).store=n},function(t,e,r){\"use strict\";var n=r(7);t.exports=function(t){if(!n(t))throw new TypeError(\"Cannot use null or undefined\");return t}},function(t,e,r){\"use strict\";t.exports=function(t){if(\"function\"!=typeof t)throw new TypeError(t+\" is not a function\");return t}},function(t,e,r){\"use strict\";t.exports=r(108)()?Symbol:r(109)},function(t,e,r){var n=r(12);t.exports=function(t){if(!n(t))throw TypeError(t+\" is not an object!\");return t}},function(t,e,r){\"use strict\";var n=r(31),o=r(57),i=r(104),s=r(58);(t.exports=function(t,e){var r,i,u,c,a;return arguments.length<2||\"string\"!=typeof t?(c=e,e=t,t=null):c=arguments[2],null==t?(r=u=!0,i=!1):(r=s.call(t,\"c\"),i=s.call(t,\"e\"),u=s.call(t,\"w\")),a={value:e,configurable:r,enumerable:i,writable:u},c?n(o(c),a):a}).gs=function(t,e,r){var u,c,a,f;return\"string\"!=typeof t?(a=r,r=e,e=t,t=null):a=arguments[3],null==e?e=void 0:i(e)?null==r?r=void 0:i(r)||(a=r,r=void 0):(a=e,e=r=void 0),null==t?(u=!0,c=!1):(u=s.call(t,\"c\"),c=s.call(t,\"e\")),f={get:e,set:r,configurable:u,enumerable:c},a?n(o(a),f):f}},function(t,e,r){\"use strict\";var n=r(53)();t.exports=function(t){return t!==n&&null!==t}},function(t,e,r){var n=r(14);t.exports=function(t,e,r){if(n(t),void 0===e)return t;switch(r){case 1:return function(r){return t.call(e,r)};case 2:return function(r,n){return t.call(e,r,n)};case 3:return function(r,n,o){return t.call(e,r,n,o)}}return function(){return t.apply(e,arguments)}}},function(t,e){var r=t.exports={version:\"2.5.7\"};\"number\"==typeof __e&&(__e=r)},function(t,e,r){var n=r(11),o=r(25);t.exports=r(13)?function(t,e,r){return n.f(t,e,o(1,r))}:function(t,e,r){return t[e]=r,t}},function(t,e,r){var n=r(5),o=r(61),i=r(62),s=Object.defineProperty;e.f=r(13)?Object.defineProperty:function(t,e,r){if(n(t),e=i(e,!0),n(r),o)try{return s(t,e,r)}catch(t){}if(\"get\"in r||\"set\"in r)throw TypeError(\"Accessors not supported!\");return\"value\"in r&&(t[e]=r.value),t}},function(t,e){t.exports=function(t){return\"object\"==typeof t?null!==t:\"function\"==typeof t}},function(t,e,r){t.exports=!r(36)(function(){return 7!=Object.defineProperty({},\"a\",{get:function(){return 7}}).a})},function(t,e){t.exports=function(t){if(\"function\"!=typeof t)throw TypeError(t+\" is not a function!\");return t}},function(t,e){var r={}.toString;t.exports=function(t){return r.call(t).slice(8,-1)}},function(t,e){var r={}.hasOwnProperty;t.exports=function(t,e){return r.call(t,e)}},function(t,e){t.exports={}},function(t,e,r){\"use strict\";t.exports=r(55)()?Object.setPrototypeOf:r(56)},function(t,e,r){\"use strict\";var n=Object.prototype.toString,o=n.call(function(){return arguments}());t.exports=function(t){return n.call(t)===o}},function(t,e,r){\"use strict\";var n=Object.prototype.toString,o=n.call(\"\");t.exports=function(t){return\"string\"==typeof t||t&&\"object\"==typeof t&&(t instanceof String||n.call(t)===o)||!1}},function(t,e){t.exports=!1},function(t,e){var r=0,n=Math.random();t.exports=function(t){return\"Symbol(\".concat(void 0===t?\"\":t,\")_\",(++r+n).toString(36))}},function(t,e,r){var n=r(0),o=r(9),i=r(10),s=r(26),u=r(8),c=function(t,e,r){var a,f,l,p,h=t&c.F,_=t&c.G,y=t&c.S,d=t&c.P,v=t&c.B,b=_?n:y?n[e]||(n[e]={}):(n[e]||{}).prototype,m=_?o:o[e]||(o[e]={}),x=m.prototype||(m.prototype={});for(a in _&&(r=e),r)l=((f=!h&&b&&void 0!==b[a])?b:r)[a],p=v&&f?u(l,n):d&&\"function\"==typeof l?u(Function.call,l):l,b&&s(b,a,l,t&c.U),m[a]!=l&&i(m,a,p),d&&x[a]!=l&&(x[a]=l)};n.core=o,c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,c.U=64,c.R=128,t.exports=c},function(t,e,r){var n=r(12),o=r(0).document,i=n(o)&&n(o.createElement);t.exports=function(t){return i?o.createElement(t):{}}},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e,r){var n=r(0),o=r(10),i=r(16),s=r(22)(\"src\"),u=Function.toString,c=(\"\"+u).split(\"toString\");r(9).inspectSource=function(t){return u.call(t)},(t.exports=function(t,e,r,u){var a=\"function\"==typeof r;a&&(i(r,\"name\")||o(r,\"name\",e)),t[e]!==r&&(a&&(i(r,s)||o(r,s,t[e]?\"\"+t[e]:c.join(String(e)))),t===n?t[e]=r:u?t[e]?t[e]=r:o(t,e,r):(delete t[e],o(t,e,r)))})(Function.prototype,\"toString\",function(){return\"function\"==typeof this&&this[s]||u.call(this)})},function(t,e,r){var n=r(39),o=Math.min;t.exports=function(t){return t>0?o(n(t),9007199254740991):0}},function(t,e,r){var n=r(11).f,o=r(16),i=r(1)(\"toStringTag\");t.exports=function(t,e,r){t&&!o(t=r?t:t.prototype,i)&&n(t,i,{configurable:!0,value:e})}},function(t,e,r){var n=r(75),o=r(46);t.exports=function(t){return n(o(t))}},function(t,e,r){var n=r(35)(\"keys\"),o=r(22);t.exports=function(t){return n[t]||(n[t]=o(t))}},function(t,e,r){\"use strict\";t.exports=r(99)()?Object.assign:r(100)},function(t,e,r){\"use strict\";var n,o=r(52),i=r(31),s=r(3),u=r(2),c=r(6),a=r(116),f=r(4),l=Object.defineProperty,p=Object.defineProperties;t.exports=n=function(t,e){if(!(this instanceof n))throw new TypeError(\"Constructor requires 'new'\");p(this,{__list__:c(\"w\",u(t)),__context__:c(\"w\",e),__nextIndex__:c(\"w\",0)}),e&&(s(e.on),e.on(\"_add\",this._onAdd),e.on(\"_delete\",this._onDelete),e.on(\"_clear\",this._onClear))},delete n.prototype.constructor,p(n.prototype,i({_next:c(function(){var t;if(this.__list__)return this.__redo__&&void 0!==(t=this.__redo__.shift())?t:this.__nextIndex__<this.__list__.length?this.__nextIndex__++:void this._unBind()}),next:c(function(){return this._createResult(this._next())}),_createResult:c(function(t){return void 0===t?{done:!0,value:void 0}:{done:!1,value:this._resolve(t)}}),_resolve:c(function(t){return this.__list__[t]}),_unBind:c(function(){this.__list__=null,delete this.__redo__,this.__context__&&(this.__context__.off(\"_add\",this._onAdd),this.__context__.off(\"_delete\",this._onDelete),this.__context__.off(\"_clear\",this._onClear),this.__context__=null)}),toString:c(function(){return\"[object \"+(this[f.toStringTag]||\"Object\")+\"]\"})},a({_onAdd:c(function(t){t>=this.__nextIndex__||(++this.__nextIndex__,this.__redo__?(this.__redo__.forEach(function(e,r){e>=t&&(this.__redo__[r]=++e)},this),this.__redo__.push(t)):l(this,\"__redo__\",c(\"c\",[t])))}),_onDelete:c(function(t){var e;t>=this.__nextIndex__||(--this.__nextIndex__,this.__redo__&&(-1!==(e=this.__redo__.indexOf(t))&&this.__redo__.splice(e,1),this.__redo__.forEach(function(e,r){e>t&&(this.__redo__[r]=--e)},this)))}),_onClear:c(function(){this.__redo__&&o.call(this.__redo__),this.__nextIndex__=0})}))),l(n.prototype,f.iterator,c(function(){return this}))},function(t,e,r){\"use strict\";var n,o,i,s,u=r(21),c=r(0),a=r(8),f=r(34),l=r(23),p=r(12),h=r(14),_=r(63),y=r(64),d=r(65),v=r(41).set,b=r(67)(),m=r(43),x=r(68),g=r(69),w=r(70),O=c.TypeError,j=c.process,P=j&&j.versions,S=P&&P.v8||\"\",A=c.Promise,E=\"process\"==f(j),T=function(){},k=o=m.f,M=!!function(){try{var t=A.resolve(1),e=(t.constructor={})[r(1)(\"species\")]=function(t){t(T,T)};return(E||\"function\"==typeof PromiseRejectionEvent)&&t.then(T)instanceof e&&0!==S.indexOf(\"6.6\")&&-1===g.indexOf(\"Chrome/66\")}catch(t){}}(),D=function(t){var e;return!(!p(t)||\"function\"!=typeof(e=t.then))&&e},B=function(t,e){if(!t._n){t._n=!0;var r=t._c;b(function(){for(var n=t._v,o=1==t._s,i=0,s=function(e){var r,i,s,u=o?e.ok:e.fail,c=e.resolve,a=e.reject,f=e.domain;try{u?(o||(2==t._h&&C(t),t._h=1),!0===u?r=n:(f&&f.enter(),r=u(n),f&&(f.exit(),s=!0)),r===e.promise?a(O(\"Promise-chain cycle\")):(i=D(r))?i.call(r,c,a):c(r)):a(n)}catch(t){f&&!s&&f.exit(),a(t)}};r.length>i;)s(r[i++]);t._c=[],t._n=!1,e&&!t._h&&I(t)})}},I=function(t){v.call(c,function(){var e,r,n,o=t._v,i=F(t);if(i&&(e=x(function(){E?j.emit(\"unhandledRejection\",o,t):(r=c.onunhandledrejection)?r({promise:t,reason:o}):(n=c.console)&&n.error&&n.error(\"Unhandled promise rejection\",o)}),t._h=E||F(t)?2:1),t._a=void 0,i&&e.e)throw e.v})},F=function(t){return 1!==t._h&&0===(t._a||t._c).length},C=function(t){v.call(c,function(){var e;E?j.emit(\"rejectionHandled\",t):(e=c.onrejectionhandled)&&e({promise:t,reason:t._v})})},R=function(t){var e=this;e._d||(e._d=!0,(e=e._w||e)._v=t,e._s=2,e._a||(e._a=e._c.slice()),B(e,!0))},U=function(t){var e,r=this;if(!r._d){r._d=!0,r=r._w||r;try{if(r===t)throw O(\"Promise can't be resolved itself\");(e=D(t))?b(function(){var n={_w:r,_d:!1};try{e.call(t,a(U,n,1),a(R,n,1))}catch(t){R.call(n,t)}}):(r._v=t,r._s=1,B(r,!1))}catch(t){R.call({_w:r,_d:!1},t)}}};M||(A=function(t){_(this,A,\"Promise\",\"_h\"),h(t),n.call(this);try{t(a(U,this,1),a(R,this,1))}catch(t){R.call(this,t)}},(n=function(t){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=r(71)(A.prototype,{then:function(t,e){var r=k(d(this,A));return r.ok=\"function\"!=typeof t||t,r.fail=\"function\"==typeof e&&e,r.domain=E?j.domain:void 0,this._c.push(r),this._a&&this._a.push(r),this._s&&B(this,!1),r.promise},catch:function(t){return this.then(void 0,t)}}),i=function(){var t=new n;this.promise=t,this.resolve=a(U,t,1),this.reject=a(R,t,1)},m.f=k=function(t){return t===A||t===s?new i(t):o(t)}),l(l.G+l.W+l.F*!M,{Promise:A}),r(28)(A,\"Promise\"),r(72)(\"Promise\"),s=r(9).Promise,l(l.S+l.F*!M,\"Promise\",{reject:function(t){var e=k(this);return(0,e.reject)(t),e.promise}}),l(l.S+l.F*(u||!M),\"Promise\",{resolve:function(t){return w(u&&this===s?A:this,t)}}),l(l.S+l.F*!(M&&r(44)(function(t){A.all(t).catch(T)})),\"Promise\",{all:function(t){var e=this,r=k(e),n=r.resolve,o=r.reject,i=x(function(){var r=[],i=0,s=1;y(t,!1,function(t){var u=i++,c=!1;r.push(void 0),s++,e.resolve(t).then(function(t){c||(c=!0,r[u]=t,--s||n(r))},o)}),--s||n(r)});return i.e&&o(i.v),r.promise},race:function(t){var e=this,r=k(e),n=r.reject,o=x(function(){y(t,!1,function(t){e.resolve(t).then(r.resolve,n)})});return o.e&&n(o.v),r.promise}})},function(t,e,r){var n=r(15),o=r(1)(\"toStringTag\"),i=\"Arguments\"==n(function(){return arguments}());t.exports=function(t){var e,r,s;return void 0===t?\"Undefined\":null===t?\"Null\":\"string\"==typeof(r=function(t,e){try{return t[e]}catch(t){}}(e=Object(t),o))?r:i?n(e):\"Object\"==(s=n(e))&&\"function\"==typeof e.callee?\"Arguments\":s}},function(t,e,r){var n=r(9),o=r(0),i=o[\"__core-js_shared__\"]||(o[\"__core-js_shared__\"]={});(t.exports=function(t,e){return i[t]||(i[t]=void 0!==e?e:{})})(\"versions\",[]).push({version:n.version,mode:r(21)?\"pure\":\"global\",copyright:\"© 2018 Denis Pushkarev (zloirock.ru)\"})},function(t,e){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,e,r){var n=r(5);t.exports=function(t,e,r,o){try{return o?e(n(r)[0],r[1]):e(r)}catch(e){var i=t.return;throw void 0!==i&&n(i.call(t)),e}}},function(t,e,r){var n=r(17),o=r(1)(\"iterator\"),i=Array.prototype;t.exports=function(t){return void 0!==t&&(n.Array===t||i[o]===t)}},function(t,e){var r=Math.ceil,n=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?n:r)(t)}},function(t,e,r){var n=r(34),o=r(1)(\"iterator\"),i=r(17);t.exports=r(9).getIteratorMethod=function(t){if(void 0!=t)return t[o]||t[\"@@iterator\"]||i[n(t)]}},function(t,e,r){var n,o,i,s=r(8),u=r(66),c=r(42),a=r(24),f=r(0),l=f.process,p=f.setImmediate,h=f.clearImmediate,_=f.MessageChannel,y=f.Dispatch,d=0,v={},b=function(){var t=+this;if(v.hasOwnProperty(t)){var e=v[t];delete v[t],e()}},m=function(t){b.call(t.data)};p&&h||(p=function(t){for(var e=[],r=1;arguments.length>r;)e.push(arguments[r++]);return v[++d]=function(){u(\"function\"==typeof t?t:Function(t),e)},n(d),d},h=function(t){delete v[t]},\"process\"==r(15)(l)?n=function(t){l.nextTick(s(b,t,1))}:y&&y.now?n=function(t){y.now(s(b,t,1))}:_?(i=(o=new _).port2,o.port1.onmessage=m,n=s(i.postMessage,i,1)):f.addEventListener&&\"function\"==typeof postMessage&&!f.importScripts?(n=function(t){f.postMessage(t+\"\",\"*\")},f.addEventListener(\"message\",m,!1)):n=\"onreadystatechange\"in a(\"script\")?function(t){c.appendChild(a(\"script\")).onreadystatechange=function(){c.removeChild(this),b.call(t)}}:function(t){setTimeout(s(b,t,1),0)}),t.exports={set:p,clear:h}},function(t,e,r){var n=r(0).document;t.exports=n&&n.documentElement},function(t,e,r){\"use strict\";var n=r(14);t.exports.f=function(t){return new function(t){var e,r;this.promise=new t(function(t,n){if(void 0!==e||void 0!==r)throw TypeError(\"Bad Promise constructor\");e=t,r=n}),this.resolve=n(e),this.reject=n(r)}(t)}},function(t,e,r){var n=r(1)(\"iterator\"),o=!1;try{var i=[7][n]();i.return=function(){o=!0},Array.from(i,function(){throw 2})}catch(t){}t.exports=function(t,e){if(!e&&!o)return!1;var r=!1;try{var i=[7],s=i[n]();s.next=function(){return{done:r=!0}},i[n]=function(){return s},t(i)}catch(t){}return r}},function(t,e,r){\"use strict\";var n=r(73),o=r(74),i=r(17),s=r(29);t.exports=r(76)(Array,\"Array\",function(t,e){this._t=s(t),this._i=0,this._k=e},function(){var t=this._t,e=this._k,r=this._i++;return!t||r>=t.length?(this._t=void 0,o(1)):o(0,\"keys\"==e?r:\"values\"==e?t[r]:[r,t[r]])},\"values\"),i.Arguments=i.Array,n(\"keys\"),n(\"values\"),n(\"entries\")},function(t,e){t.exports=function(t){if(void 0==t)throw TypeError(\"Can't call method on  \"+t);return t}},function(t,e){t.exports=\"constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf\".split(\",\")},function(t,e,r){var n=r(46);t.exports=function(t){return Object(n(t))}},function(t,e,r){\"use strict\";var n=r(8),o=r(23),i=r(48),s=r(37),u=r(38),c=r(27),a=r(85),f=r(40);o(o.S+o.F*!r(44)(function(t){Array.from(t)}),\"Array\",{from:function(t){var e,r,o,l,p=i(t),h=\"function\"==typeof this?this:Array,_=arguments.length,y=_>1?arguments[1]:void 0,d=void 0!==y,v=0,b=f(p);if(d&&(y=n(y,_>2?arguments[2]:void 0,2)),void 0==b||h==Array&&u(b))for(r=new h(e=c(p.length));e>v;v++)a(r,v,d?y(p[v],v):p[v]);else for(l=b.call(p),r=new h;!(o=l.next()).done;v++)a(r,v,d?s(l,y,[o.value,v],!0):o.value);return r.length=v,r}})},function(t,e,r){\"use strict\";r.d(e,\"b\",function(){return a}),r.d(e,\"c\",function(){return d}),r.d(e,\"d\",function(){return b}),r.d(e,\"a\",function(){return x}),r.d(e,\"e\",function(){return g});var n={searchParams:\"URLSearchParams\"in self,iterable:\"Symbol\"in self&&\"iterator\"in Symbol,blob:\"FileReader\"in self&&\"Blob\"in self&&function(){try{return new Blob,!0}catch(t){return!1}}(),formData:\"FormData\"in self,arrayBuffer:\"ArrayBuffer\"in self};if(n.arrayBuffer)var o=[\"[object Int8Array]\",\"[object Uint8Array]\",\"[object Uint8ClampedArray]\",\"[object Int16Array]\",\"[object Uint16Array]\",\"[object Int32Array]\",\"[object Uint32Array]\",\"[object Float32Array]\",\"[object Float64Array]\"],i=ArrayBuffer.isView||function(t){return t&&o.indexOf(Object.prototype.toString.call(t))>-1};function s(t){if(\"string\"!=typeof t&&(t=String(t)),/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(t))throw new TypeError(\"Invalid character in header field name\");return t.toLowerCase()}function u(t){return\"string\"!=typeof t&&(t=String(t)),t}function c(t){var e={next:function(){var e=t.shift();return{done:void 0===e,value:e}}};return n.iterable&&(e[Symbol.iterator]=function(){return e}),e}function a(t){this.map={},t instanceof a?t.forEach(function(t,e){this.append(e,t)},this):Array.isArray(t)?t.forEach(function(t){this.append(t[0],t[1])},this):t&&Object.getOwnPropertyNames(t).forEach(function(e){this.append(e,t[e])},this)}function f(t){if(t.bodyUsed)return Promise.reject(new TypeError(\"Already read\"));t.bodyUsed=!0}function l(t){return new Promise(function(e,r){t.onload=function(){e(t.result)},t.onerror=function(){r(t.error)}})}function p(t){var e=new FileReader,r=l(e);return e.readAsArrayBuffer(t),r}function h(t){if(t.slice)return t.slice(0);var e=new Uint8Array(t.byteLength);return e.set(new Uint8Array(t)),e.buffer}function _(){return this.bodyUsed=!1,this._initBody=function(t){this._bodyInit=t,t?\"string\"==typeof t?this._bodyText=t:n.blob&&Blob.prototype.isPrototypeOf(t)?this._bodyBlob=t:n.formData&&FormData.prototype.isPrototypeOf(t)?this._bodyFormData=t:n.searchParams&&URLSearchParams.prototype.isPrototypeOf(t)?this._bodyText=t.toString():n.arrayBuffer&&n.blob&&function(t){return t&&DataView.prototype.isPrototypeOf(t)}(t)?(this._bodyArrayBuffer=h(t.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):n.arrayBuffer&&(ArrayBuffer.prototype.isPrototypeOf(t)||i(t))?this._bodyArrayBuffer=h(t):this._bodyText=t=Object.prototype.toString.call(t):this._bodyText=\"\",this.headers.get(\"content-type\")||(\"string\"==typeof t?this.headers.set(\"content-type\",\"text/plain;charset=UTF-8\"):this._bodyBlob&&this._bodyBlob.type?this.headers.set(\"content-type\",this._bodyBlob.type):n.searchParams&&URLSearchParams.prototype.isPrototypeOf(t)&&this.headers.set(\"content-type\",\"application/x-www-form-urlencoded;charset=UTF-8\"))},n.blob&&(this.blob=function(){var t=f(this);if(t)return t;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error(\"could not read FormData body as blob\");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?f(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(p)}),this.text=function(){var t=f(this);if(t)return t;if(this._bodyBlob)return function(t){var e=new FileReader,r=l(e);return e.readAsText(t),r}(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(function(t){for(var e=new Uint8Array(t),r=new Array(e.length),n=0;n<e.length;n++)r[n]=String.fromCharCode(e[n]);return r.join(\"\")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error(\"could not read FormData body as text\");return Promise.resolve(this._bodyText)},n.formData&&(this.formData=function(){return this.text().then(v)}),this.json=function(){return this.text().then(JSON.parse)},this}a.prototype.append=function(t,e){t=s(t),e=u(e);var r=this.map[t];this.map[t]=r?r+\", \"+e:e},a.prototype.delete=function(t){delete this.map[s(t)]},a.prototype.get=function(t){return t=s(t),this.has(t)?this.map[t]:null},a.prototype.has=function(t){return this.map.hasOwnProperty(s(t))},a.prototype.set=function(t,e){this.map[s(t)]=u(e)},a.prototype.forEach=function(t,e){for(var r in this.map)this.map.hasOwnProperty(r)&&t.call(e,this.map[r],r,this)},a.prototype.keys=function(){var t=[];return this.forEach(function(e,r){t.push(r)}),c(t)},a.prototype.values=function(){var t=[];return this.forEach(function(e){t.push(e)}),c(t)},a.prototype.entries=function(){var t=[];return this.forEach(function(e,r){t.push([r,e])}),c(t)},n.iterable&&(a.prototype[Symbol.iterator]=a.prototype.entries);var y=[\"DELETE\",\"GET\",\"HEAD\",\"OPTIONS\",\"POST\",\"PUT\"];function d(t,e){var r=(e=e||{}).body;if(t instanceof d){if(t.bodyUsed)throw new TypeError(\"Already read\");this.url=t.url,this.credentials=t.credentials,e.headers||(this.headers=new a(t.headers)),this.method=t.method,this.mode=t.mode,this.signal=t.signal,r||null==t._bodyInit||(r=t._bodyInit,t.bodyUsed=!0)}else this.url=String(t);if(this.credentials=e.credentials||this.credentials||\"same-origin\",!e.headers&&this.headers||(this.headers=new a(e.headers)),this.method=function(t){var e=t.toUpperCase();return y.indexOf(e)>-1?e:t}(e.method||this.method||\"GET\"),this.mode=e.mode||this.mode||null,this.signal=e.signal||this.signal,this.referrer=null,(\"GET\"===this.method||\"HEAD\"===this.method)&&r)throw new TypeError(\"Body not allowed for GET or HEAD requests\");this._initBody(r)}function v(t){var e=new FormData;return t.trim().split(\"&\").forEach(function(t){if(t){var r=t.split(\"=\"),n=r.shift().replace(/\\+/g,\" \"),o=r.join(\"=\").replace(/\\+/g,\" \");e.append(decodeURIComponent(n),decodeURIComponent(o))}}),e}function b(t,e){e||(e={}),this.type=\"default\",this.status=void 0===e.status?200:e.status,this.ok=this.status>=200&&this.status<300,this.statusText=\"statusText\"in e?e.statusText:\"OK\",this.headers=new a(e.headers),this.url=e.url||\"\",this._initBody(t)}d.prototype.clone=function(){return new d(this,{body:this._bodyInit})},_.call(d.prototype),_.call(b.prototype),b.prototype.clone=function(){return new b(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new a(this.headers),url:this.url})},b.error=function(){var t=new b(null,{status:0,statusText:\"\"});return t.type=\"error\",t};var m=[301,302,303,307,308];b.redirect=function(t,e){if(-1===m.indexOf(e))throw new RangeError(\"Invalid status code\");return new b(null,{status:e,headers:{location:t}})};var x=self.DOMException;try{new x}catch(t){(x=function(t,e){this.message=t,this.name=e;var r=Error(t);this.stack=r.stack}).prototype=Object.create(Error.prototype),x.prototype.constructor=x}function g(t,e){return new Promise(function(r,o){var i=new d(t,e);if(i.signal&&i.signal.aborted)return o(new x(\"Aborted\",\"AbortError\"));var s=new XMLHttpRequest;function u(){s.abort()}s.onload=function(){var t={status:s.status,statusText:s.statusText,headers:function(t){var e=new a;return t.replace(/\\r?\\n[\\t ]+/g,\" \").split(/\\r?\\n/).forEach(function(t){var r=t.split(\":\"),n=r.shift().trim();if(n){var o=r.join(\":\").trim();e.append(n,o)}}),e}(s.getAllResponseHeaders()||\"\")};t.url=\"responseURL\"in s?s.responseURL:t.headers.get(\"X-Request-URL\");var e=\"response\"in s?s.response:s.responseText;r(new b(e,t))},s.onerror=function(){o(new TypeError(\"Network request failed\"))},s.ontimeout=function(){o(new TypeError(\"Network request failed\"))},s.onabort=function(){o(new x(\"Aborted\",\"AbortError\"))},s.open(i.method,i.url,!0),\"include\"===i.credentials?s.withCredentials=!0:\"omit\"===i.credentials&&(s.withCredentials=!1),\"responseType\"in s&&n.blob&&(s.responseType=\"blob\"),i.headers.forEach(function(t,e){s.setRequestHeader(e,t)}),i.signal&&(i.signal.addEventListener(\"abort\",u),s.onreadystatechange=function(){4===s.readyState&&i.signal.removeEventListener(\"abort\",u)}),s.send(void 0===i._bodyInit?null:i._bodyInit)})}g.polyfill=!0,self.fetch||(self.fetch=g,self.Headers=a,self.Request=d,self.Response=b)},function(t,e,r){\"use strict\";r(86)()||Object.defineProperty(r(87),\"Map\",{value:r(88),configurable:!0,enumerable:!1,writable:!0})},function(t,e,r){\"use strict\";var n=r(2);t.exports=function(){return n(this).length=0,this}},function(t,e,r){\"use strict\";t.exports=function(){}},function(t,e,r){\"use strict\";var n=r(93),o=Math.max;t.exports=function(t){return o(0,n(t))}},function(t,e,r){\"use strict\";var n=Object.create,o=Object.getPrototypeOf,i={};t.exports=function(){var t=Object.setPrototypeOf,e=arguments[0]||n;return\"function\"==typeof t&&o(t(e(null),i))===i}},function(t,e,r){\"use strict\";var n,o=r(97),i=r(2),s=Object.prototype.isPrototypeOf,u=Object.defineProperty,c={configurable:!0,enumerable:!1,writable:!0,value:void 0};n=function(t,e){if(i(t),null===e||o(e))return t;throw new TypeError(\"Prototype must be null or an object\")},t.exports=function(t){var e,r;return t?(2===t.level?t.set?(r=t.set,e=function(t,e){return r.call(n(t,e),e),t}):e=function(t,e){return n(t,e).__proto__=e,t}:e=function t(e,r){var o;return n(e,r),(o=s.call(t.nullPolyfill,e))&&delete t.nullPolyfill.__proto__,null===r&&(r=t.nullPolyfill),e.__proto__=r,o&&u(t.nullPolyfill,\"__proto__\",c),e},Object.defineProperty(e,\"level\",{configurable:!1,enumerable:!1,writable:!1,value:t.level})):null}(function(){var t,e=Object.create(null),r={},n=Object.getOwnPropertyDescriptor(Object.prototype,\"__proto__\");if(n){try{(t=n.set).call(e,r)}catch(t){}if(Object.getPrototypeOf(e)===r)return{set:t,level:2}}return e.__proto__=r,Object.getPrototypeOf(e)===r?{level:2}:((e={}).__proto__=r,Object.getPrototypeOf(e)===r&&{level:1})}()),r(98)},function(t,e,r){\"use strict\";var n=r(7),o=Array.prototype.forEach,i=Object.create;t.exports=function(t){var e=i(null);return o.call(arguments,function(t){n(t)&&function(t,e){var r;for(r in t)e[r]=t[r]}(Object(t),e)}),e}},function(t,e,r){\"use strict\";t.exports=r(105)()?String.prototype.contains:r(106)},function(t,e,r){\"use strict\";var n=r(112);t.exports=function(t){if(!n(t))throw new TypeError(t+\" is not iterable\");return t}},function(t,e,r){\"use strict\";r.r(e);var n=r(33);for(var o in n)\"default\"!==o&&function(t){r.d(e,t,function(){return n[t]})}(o);var i=r(45);for(var o in i)\"default\"!==o&&function(t){r.d(e,t,function(){return i[t]})}(o);var s=r(49);for(var o in s)\"default\"!==o&&function(t){r.d(e,t,function(){return s[t]})}(o);var u=r(50);r.d(e,\"Headers\",function(){return u.b}),r.d(e,\"Request\",function(){return u.c}),r.d(e,\"Response\",function(){return u.d}),r.d(e,\"DOMException\",function(){return u.a}),r.d(e,\"fetch\",function(){return u.e});var c=r(51);for(var o in c)[\"Headers\",\"Request\",\"Response\",\"DOMException\",\"fetch\",\"default\"].indexOf(o)<0&&function(t){r.d(e,t,function(){return c[t]})}(o)},function(t,e,r){t.exports=!r(13)&&!r(36)(function(){return 7!=Object.defineProperty(r(24)(\"div\"),\"a\",{get:function(){return 7}}).a})},function(t,e,r){var n=r(12);t.exports=function(t,e){if(!n(t))return t;var r,o;if(e&&\"function\"==typeof(r=t.toString)&&!n(o=r.call(t)))return o;if(\"function\"==typeof(r=t.valueOf)&&!n(o=r.call(t)))return o;if(!e&&\"function\"==typeof(r=t.toString)&&!n(o=r.call(t)))return o;throw TypeError(\"Can't convert object to primitive value\")}},function(t,e){t.exports=function(t,e,r,n){if(!(t instanceof e)||void 0!==n&&n in t)throw TypeError(r+\": incorrect invocation!\");return t}},function(t,e,r){var n=r(8),o=r(37),i=r(38),s=r(5),u=r(27),c=r(40),a={},f={};(e=t.exports=function(t,e,r,l,p){var h,_,y,d,v=p?function(){return t}:c(t),b=n(r,l,e?2:1),m=0;if(\"function\"!=typeof v)throw TypeError(t+\" is not iterable!\");if(i(v)){for(h=u(t.length);h>m;m++)if((d=e?b(s(_=t[m])[0],_[1]):b(t[m]))===a||d===f)return d}else for(y=v.call(t);!(_=y.next()).done;)if((d=o(y,b,_.value,e))===a||d===f)return d}).BREAK=a,e.RETURN=f},function(t,e,r){var n=r(5),o=r(14),i=r(1)(\"species\");t.exports=function(t,e){var r,s=n(t).constructor;return void 0===s||void 0==(r=n(s)[i])?e:o(r)}},function(t,e){t.exports=function(t,e,r){var n=void 0===r;switch(e.length){case 0:return n?t():t.call(r);case 1:return n?t(e[0]):t.call(r,e[0]);case 2:return n?t(e[0],e[1]):t.call(r,e[0],e[1]);case 3:return n?t(e[0],e[1],e[2]):t.call(r,e[0],e[1],e[2]);case 4:return n?t(e[0],e[1],e[2],e[3]):t.call(r,e[0],e[1],e[2],e[3])}return t.apply(r,e)}},function(t,e,r){var n=r(0),o=r(41).set,i=n.MutationObserver||n.WebKitMutationObserver,s=n.process,u=n.Promise,c=\"process\"==r(15)(s);t.exports=function(){var t,e,r,a=function(){var n,o;for(c&&(n=s.domain)&&n.exit();t;){o=t.fn,t=t.next;try{o()}catch(n){throw t?r():e=void 0,n}}e=void 0,n&&n.enter()};if(c)r=function(){s.nextTick(a)};else if(!i||n.navigator&&n.navigator.standalone)if(u&&u.resolve){var f=u.resolve(void 0);r=function(){f.then(a)}}else r=function(){o.call(n,a)};else{var l=!0,p=document.createTextNode(\"\");new i(a).observe(p,{characterData:!0}),r=function(){p.data=l=!l}}return function(n){var o={fn:n,next:void 0};e&&(e.next=o),t||(t=o,r()),e=o}}},function(t,e){t.exports=function(t){try{return{e:!1,v:t()}}catch(t){return{e:!0,v:t}}}},function(t,e,r){var n=r(0).navigator;t.exports=n&&n.userAgent||\"\"},function(t,e,r){var n=r(5),o=r(12),i=r(43);t.exports=function(t,e){if(n(t),o(e)&&e.constructor===t)return e;var r=i.f(t);return(0,r.resolve)(e),r.promise}},function(t,e,r){var n=r(26);t.exports=function(t,e,r){for(var o in e)n(t,o,e[o],r);return t}},function(t,e,r){\"use strict\";var n=r(0),o=r(11),i=r(13),s=r(1)(\"species\");t.exports=function(t){var e=n[t];i&&e&&!e[s]&&o.f(e,s,{configurable:!0,get:function(){return this}})}},function(t,e,r){var n=r(1)(\"unscopables\"),o=Array.prototype;void 0==o[n]&&r(10)(o,n,{}),t.exports=function(t){o[n][t]=!0}},function(t,e){t.exports=function(t,e){return{value:e,done:!!t}}},function(t,e,r){var n=r(15);t.exports=Object(\"z\").propertyIsEnumerable(0)?Object:function(t){return\"String\"==n(t)?t.split(\"\"):Object(t)}},function(t,e,r){\"use strict\";var n=r(21),o=r(23),i=r(26),s=r(10),u=r(17),c=r(77),a=r(28),f=r(84),l=r(1)(\"iterator\"),p=!([].keys&&\"next\"in[].keys()),h=function(){return this};t.exports=function(t,e,r,_,y,d,v){c(r,e,_);var b,m,x,g=function(t){if(!p&&t in P)return P[t];switch(t){case\"keys\":case\"values\":return function(){return new r(this,t)}}return function(){return new r(this,t)}},w=e+\" Iterator\",O=\"values\"==y,j=!1,P=t.prototype,S=P[l]||P[\"@@iterator\"]||y&&P[y],A=S||g(y),E=y?O?g(\"entries\"):A:void 0,T=\"Array\"==e&&P.entries||S;if(T&&(x=f(T.call(new t)))!==Object.prototype&&x.next&&(a(x,w,!0),n||\"function\"==typeof x[l]||s(x,l,h)),O&&S&&\"values\"!==S.name&&(j=!0,A=function(){return S.call(this)}),n&&!v||!p&&!j&&P[l]||s(P,l,A),u[e]=A,u[w]=h,y)if(b={values:O?A:g(\"values\"),keys:d?A:g(\"keys\"),entries:E},v)for(m in b)m in P||i(P,m,b[m]);else o(o.P+o.F*(p||j),e,b);return b}},function(t,e,r){\"use strict\";var n=r(78),o=r(25),i=r(28),s={};r(10)(s,r(1)(\"iterator\"),function(){return this}),t.exports=function(t,e,r){t.prototype=n(s,{next:o(1,r)}),i(t,e+\" Iterator\")}},function(t,e,r){var n=r(5),o=r(79),i=r(47),s=r(30)(\"IE_PROTO\"),u=function(){},c=function(){var t,e=r(24)(\"iframe\"),n=i.length;for(e.style.display=\"none\",r(42).appendChild(e),e.src=\"javascript:\",(t=e.contentWindow.document).open(),t.write(\"<script>document.F=Object<\\/script>\"),t.close(),c=t.F;n--;)delete c.prototype[i[n]];return c()};t.exports=Object.create||function(t,e){var r;return null!==t?(u.prototype=n(t),r=new u,u.prototype=null,r[s]=t):r=c(),void 0===e?r:o(r,e)}},function(t,e,r){var n=r(11),o=r(5),i=r(80);t.exports=r(13)?Object.defineProperties:function(t,e){o(t);for(var r,s=i(e),u=s.length,c=0;u>c;)n.f(t,r=s[c++],e[r]);return t}},function(t,e,r){var n=r(81),o=r(47);t.exports=Object.keys||function(t){return n(t,o)}},function(t,e,r){var n=r(16),o=r(29),i=r(82)(!1),s=r(30)(\"IE_PROTO\");t.exports=function(t,e){var r,u=o(t),c=0,a=[];for(r in u)r!=s&&n(u,r)&&a.push(r);for(;e.length>c;)n(u,r=e[c++])&&(~i(a,r)||a.push(r));return a}},function(t,e,r){var n=r(29),o=r(27),i=r(83);t.exports=function(t){return function(e,r,s){var u,c=n(e),a=o(c.length),f=i(s,a);if(t&&r!=r){for(;a>f;)if((u=c[f++])!=u)return!0}else for(;a>f;f++)if((t||f in c)&&c[f]===r)return t||f||0;return!t&&-1}}},function(t,e,r){var n=r(39),o=Math.max,i=Math.min;t.exports=function(t,e){return(t=n(t))<0?o(t+e,0):i(t,e)}},function(t,e,r){var n=r(16),o=r(48),i=r(30)(\"IE_PROTO\"),s=Object.prototype;t.exports=Object.getPrototypeOf||function(t){return t=o(t),n(t,i)?t[i]:\"function\"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?s:null}},function(t,e,r){\"use strict\";var n=r(11),o=r(25);t.exports=function(t,e,r){e in t?n.f(t,e,o(0,r)):t[e]=r}},function(t,e,r){\"use strict\";t.exports=function(){var t,e;if(\"function\"!=typeof Map)return!1;try{t=new Map([[\"raz\",\"one\"],[\"dwa\",\"two\"],[\"trzy\",\"three\"]])}catch(t){return!1}return\"[object Map]\"===String(t)&&(3===t.size&&(\"function\"==typeof t.clear&&(\"function\"==typeof t.delete&&(\"function\"==typeof t.entries&&(\"function\"==typeof t.forEach&&(\"function\"==typeof t.get&&(\"function\"==typeof t.has&&(\"function\"==typeof t.keys&&(\"function\"==typeof t.set&&(\"function\"==typeof t.values&&(!1===(e=t.entries().next()).done&&(!!e.value&&(\"raz\"===e.value[0]&&\"one\"===e.value[1])))))))))))))}},function(t,e){t.exports=function(){return this}()},function(t,e,r){\"use strict\";var n,o=r(52),i=r(89),s=r(18),u=r(3),c=r(2),a=r(6),f=r(107),l=r(4),p=r(59),h=r(113),_=r(126),y=r(129),d=Function.prototype.call,v=Object.defineProperties,b=Object.getPrototypeOf;t.exports=n=function(){var t,e,r,o=arguments[0];if(!(this instanceof n))throw new TypeError(\"Constructor requires 'new'\");return r=y&&s&&Map!==n?s(new Map,b(this)):this,null!=o&&p(o),v(r,{__mapKeysData__:a(\"c\",t=[]),__mapValuesData__:a(\"c\",e=[])}),o?(h(o,function(r){var n=c(r)[0];r=r[1],-1===i.call(t,n)&&(t.push(n),e.push(r))},r),r):r},y&&(s&&s(n,Map),n.prototype=Object.create(Map.prototype,{constructor:a(n)})),f(v(n.prototype,{clear:a(function(){this.__mapKeysData__.length&&(o.call(this.__mapKeysData__),o.call(this.__mapValuesData__),this.emit(\"_clear\"))}),delete:a(function(t){var e=i.call(this.__mapKeysData__,t);return-1!==e&&(this.__mapKeysData__.splice(e,1),this.__mapValuesData__.splice(e,1),this.emit(\"_delete\",e,t),!0)}),entries:a(function(){return new _(this,\"key+value\")}),forEach:a(function(t){var e,r,n=arguments[1];for(u(t),r=(e=this.entries())._next();void 0!==r;)d.call(t,n,this.__mapValuesData__[r],this.__mapKeysData__[r],this),r=e._next()}),get:a(function(t){var e=i.call(this.__mapKeysData__,t);if(-1!==e)return this.__mapValuesData__[e]}),has:a(function(t){return-1!==i.call(this.__mapKeysData__,t)}),keys:a(function(){return new _(this,\"key\")}),set:a(function(t,e){var r,n=i.call(this.__mapKeysData__,t);return-1===n&&(n=this.__mapKeysData__.push(t)-1,r=!0),this.__mapValuesData__[n]=e,r&&this.emit(\"_add\",n,t),this}),size:a.gs(function(){return this.__mapKeysData__.length}),values:a(function(){return new _(this,\"value\")}),toString:a(function(){return\"[object Map]\"})})),Object.defineProperty(n.prototype,l.iterator,a(function(){return this.entries()})),Object.defineProperty(n.prototype,l.toStringTag,a(\"c\",\"Map\"))},function(t,e,r){\"use strict\";var n=r(90),o=r(54),i=r(2),s=Array.prototype.indexOf,u=Object.prototype.hasOwnProperty,c=Math.abs,a=Math.floor;t.exports=function(t){var e,r,f,l;if(!n(t))return s.apply(this,arguments);for(r=o(i(this).length),f=arguments[1],e=f=isNaN(f)?0:f>=0?a(f):o(this.length)-a(c(f));e<r;++e)if(u.call(this,e)&&(l=this[e],n(l)))return e;return-1}},function(t,e,r){\"use strict\";t.exports=r(91)()?Number.isNaN:r(92)},function(t,e,r){\"use strict\";t.exports=function(){var t=Number.isNaN;return\"function\"==typeof t&&(!t({})&&t(NaN)&&!t(34))}},function(t,e,r){\"use strict\";t.exports=function(t){return t!=t}},function(t,e,r){\"use strict\";var n=r(94),o=Math.abs,i=Math.floor;t.exports=function(t){return isNaN(t)?0:0!==(t=Number(t))&&isFinite(t)?n(t)*i(o(t)):t}},function(t,e,r){\"use strict\";t.exports=r(95)()?Math.sign:r(96)},function(t,e,r){\"use strict\";t.exports=function(){var t=Math.sign;return\"function\"==typeof t&&(1===t(10)&&-1===t(-20))}},function(t,e,r){\"use strict\";t.exports=function(t){return t=Number(t),isNaN(t)||0===t?t:t>0?1:-1}},function(t,e,r){\"use strict\";var n=r(7),o={function:!0,object:!0};t.exports=function(t){return n(t)&&o[typeof t]||!1}},function(t,e,r){\"use strict\";var n,o=Object.create;r(55)()||(n=r(56)),t.exports=function(){var t,e,r;return n?1!==n.level?o:(t={},e={},r={configurable:!1,enumerable:!1,writable:!0,value:void 0},Object.getOwnPropertyNames(Object.prototype).forEach(function(t){e[t]=\"__proto__\"!==t?r:{configurable:!0,enumerable:!1,writable:!0,value:void 0}}),Object.defineProperties(t,e),Object.defineProperty(n,\"nullPolyfill\",{configurable:!1,enumerable:!1,writable:!1,value:t}),function(e,r){return o(null===e?t:e,r)}):o}()},function(t,e,r){\"use strict\";t.exports=function(){var t,e=Object.assign;return\"function\"==typeof e&&(e(t={foo:\"raz\"},{bar:\"dwa\"},{trzy:\"trzy\"}),t.foo+t.bar+t.trzy===\"razdwatrzy\")}},function(t,e,r){\"use strict\";var n=r(101),o=r(2),i=Math.max;t.exports=function(t,e){var r,s,u,c=i(arguments.length,2);for(t=Object(o(t)),u=function(n){try{t[n]=e[n]}catch(t){r||(r=t)}},s=1;s<c;++s)e=arguments[s],n(e).forEach(u);if(void 0!==r)throw r;return t}},function(t,e,r){\"use strict\";t.exports=r(102)()?Object.keys:r(103)},function(t,e,r){\"use strict\";t.exports=function(){try{return Object.keys(\"primitive\"),!0}catch(t){return!1}}},function(t,e,r){\"use strict\";var n=r(7),o=Object.keys;t.exports=function(t){return o(n(t)?Object(t):t)}},function(t,e,r){\"use strict\";t.exports=function(t){return\"function\"==typeof t}},function(t,e,r){\"use strict\";var n=\"razdwatrzy\";t.exports=function(){return\"function\"==typeof n.contains&&(!0===n.contains(\"dwa\")&&!1===n.contains(\"foo\"))}},function(t,e,r){\"use strict\";var n=String.prototype.indexOf;t.exports=function(t){return n.call(this,t,arguments[1])>-1}},function(t,e,r){\"use strict\";var n,o,i,s,u,c,a,f=r(6),l=r(3),p=Function.prototype.apply,h=Function.prototype.call,_=Object.create,y=Object.defineProperty,d=Object.defineProperties,v=Object.prototype.hasOwnProperty,b={configurable:!0,enumerable:!1,writable:!0};u={on:n=function(t,e){var r;return l(e),v.call(this,\"__ee__\")?r=this.__ee__:(r=b.value=_(null),y(this,\"__ee__\",b),b.value=null),r[t]?\"object\"==typeof r[t]?r[t].push(e):r[t]=[r[t],e]:r[t]=e,this},once:o=function(t,e){var r,o;return l(e),o=this,n.call(this,t,r=function(){i.call(o,t,r),p.call(e,this,arguments)}),r.__eeOnceListener__=e,this},off:i=function(t,e){var r,n,o,i;if(l(e),!v.call(this,\"__ee__\"))return this;if(!(r=this.__ee__)[t])return this;if(\"object\"==typeof(n=r[t]))for(i=0;o=n[i];++i)o!==e&&o.__eeOnceListener__!==e||(2===n.length?r[t]=n[i?0:1]:n.splice(i,1));else n!==e&&n.__eeOnceListener__!==e||delete r[t];return this},emit:s=function(t){var e,r,n,o,i;if(v.call(this,\"__ee__\")&&(o=this.__ee__[t]))if(\"object\"==typeof o){for(r=arguments.length,i=new Array(r-1),e=1;e<r;++e)i[e-1]=arguments[e];for(o=o.slice(),e=0;n=o[e];++e)p.call(n,this,i)}else switch(arguments.length){case 1:h.call(o,this);break;case 2:h.call(o,this,arguments[1]);break;case 3:h.call(o,this,arguments[1],arguments[2]);break;default:for(r=arguments.length,i=new Array(r-1),e=1;e<r;++e)i[e-1]=arguments[e];p.call(o,this,i)}}},c={on:f(n),once:f(o),off:f(i),emit:f(s)},a=d({},c),t.exports=e=function(t){return null==t?_(a):d(Object(t),c)},e.methods=u},function(t,e,r){\"use strict\";var n={object:!0,symbol:!0};t.exports=function(){var t;if(\"function\"!=typeof Symbol)return!1;t=Symbol(\"test symbol\");try{String(t)}catch(t){return!1}return!!n[typeof Symbol.iterator]&&(!!n[typeof Symbol.toPrimitive]&&!!n[typeof Symbol.toStringTag])}},function(t,e,r){\"use strict\";var n,o,i,s,u=r(6),c=r(110),a=Object.create,f=Object.defineProperties,l=Object.defineProperty,p=Object.prototype,h=a(null);if(\"function\"==typeof Symbol){n=Symbol;try{String(n()),s=!0}catch(t){}}var _=function(){var t=a(null);return function(e){for(var r,n,o=0;t[e+(o||\"\")];)++o;return t[e+=o||\"\"]=!0,l(p,r=\"@@\"+e,u.gs(null,function(t){n||(n=!0,l(this,r,u(t)),n=!1)})),r}}();i=function(t){if(this instanceof i)throw new TypeError(\"Symbol is not a constructor\");return o(t)},t.exports=o=function t(e){var r;if(this instanceof t)throw new TypeError(\"Symbol is not a constructor\");return s?n(e):(r=a(i.prototype),e=void 0===e?\"\":String(e),f(r,{__description__:u(\"\",e),__name__:u(\"\",_(e))}))},f(o,{for:u(function(t){return h[t]?h[t]:h[t]=o(String(t))}),keyFor:u(function(t){var e;for(e in c(t),h)if(h[e]===t)return e}),hasInstance:u(\"\",n&&n.hasInstance||o(\"hasInstance\")),isConcatSpreadable:u(\"\",n&&n.isConcatSpreadable||o(\"isConcatSpreadable\")),iterator:u(\"\",n&&n.iterator||o(\"iterator\")),match:u(\"\",n&&n.match||o(\"match\")),replace:u(\"\",n&&n.replace||o(\"replace\")),search:u(\"\",n&&n.search||o(\"search\")),species:u(\"\",n&&n.species||o(\"species\")),split:u(\"\",n&&n.split||o(\"split\")),toPrimitive:u(\"\",n&&n.toPrimitive||o(\"toPrimitive\")),toStringTag:u(\"\",n&&n.toStringTag||o(\"toStringTag\")),unscopables:u(\"\",n&&n.unscopables||o(\"unscopables\"))}),f(i.prototype,{constructor:u(o),toString:u(\"\",function(){return this.__name__})}),f(o.prototype,{toString:u(function(){return\"Symbol (\"+c(this).__description__+\")\"}),valueOf:u(function(){return c(this)})}),l(o.prototype,o.toPrimitive,u(\"\",function(){var t=c(this);return\"symbol\"==typeof t?t:t.toString()})),l(o.prototype,o.toStringTag,u(\"c\",\"Symbol\")),l(i.prototype,o.toStringTag,u(\"c\",o.prototype[o.toStringTag])),l(i.prototype,o.toPrimitive,u(\"c\",o.prototype[o.toPrimitive]))},function(t,e,r){\"use strict\";var n=r(111);t.exports=function(t){if(!n(t))throw new TypeError(t+\" is not a symbol\");return t}},function(t,e,r){\"use strict\";t.exports=function(t){return!!t&&(\"symbol\"==typeof t||!!t.constructor&&(\"Symbol\"===t.constructor.name&&\"Symbol\"===t[t.constructor.toStringTag]))}},function(t,e,r){\"use strict\";var n=r(19),o=r(7),i=r(20),s=r(4).iterator,u=Array.isArray;t.exports=function(t){return!!o(t)&&(!!u(t)||(!!i(t)||(!!n(t)||\"function\"==typeof t[s])))}},function(t,e,r){\"use strict\";var n=r(19),o=r(3),i=r(20),s=r(114),u=Array.isArray,c=Function.prototype.call,a=Array.prototype.some;t.exports=function(t,e){var r,f,l,p,h,_,y,d,v=arguments[2];if(u(t)||n(t)?r=\"array\":i(t)?r=\"string\":t=s(t),o(e),l=function(){p=!0},\"array\"!==r)if(\"string\"!==r)for(f=t.next();!f.done;){if(c.call(e,v,f.value,l),p)return;f=t.next()}else for(_=t.length,h=0;h<_&&(y=t[h],h+1<_&&(d=y.charCodeAt(0))>=55296&&d<=56319&&(y+=t[++h]),c.call(e,v,y,l),!p);++h);else a.call(t,function(t){return c.call(e,v,t,l),p})}},function(t,e,r){\"use strict\";var n=r(19),o=r(20),i=r(115),s=r(125),u=r(59),c=r(4).iterator;t.exports=function(t){return\"function\"==typeof u(t)[c]?t[c]():n(t)?new i(t):o(t)?new s(t):new i(t)}},function(t,e,r){\"use strict\";var n,o=r(18),i=r(58),s=r(6),u=r(4),c=r(32),a=Object.defineProperty;n=t.exports=function(t,e){if(!(this instanceof n))throw new TypeError(\"Constructor requires 'new'\");c.call(this,t),e=e?i.call(e,\"key+value\")?\"key+value\":i.call(e,\"key\")?\"key\":\"value\":\"value\",a(this,\"__kind__\",s(\"\",e))},o&&o(n,c),delete n.prototype.constructor,n.prototype=Object.create(c.prototype,{_resolve:s(function(t){return\"value\"===this.__kind__?this.__list__[t]:\"key+value\"===this.__kind__?[t,this.__list__[t]]:t})}),a(n.prototype,u.toStringTag,s(\"c\",\"Array Iterator\"))},function(t,e,r){\"use strict\";var n,o=r(117),i=r(57),s=r(3),u=r(122),c=r(3),a=r(2),f=Function.prototype.bind,l=Object.defineProperty,p=Object.prototype.hasOwnProperty;n=function(t,e,r){var n,i=a(e)&&c(e.value);return delete(n=o(e)).writable,delete n.value,n.get=function(){return!r.overwriteDefinition&&p.call(this,t)?i:(e.value=f.call(i,r.resolveContext?r.resolveContext(this):this),l(this,t,e),this[t])},n},t.exports=function(t){var e=i(arguments[1]);return null!=e.resolveContext&&s(e.resolveContext),u(t,function(t,r){return n(r,t,e)})}},function(t,e,r){\"use strict\";var n=r(118),o=r(31),i=r(2);t.exports=function(t){var e=Object(i(t)),r=arguments[1],s=Object(arguments[2]);if(e!==t&&!r)return e;var u={};return r?n(r,function(e){(s.ensure||e in t)&&(u[e]=t[e])}):o(u,t),u}},function(t,e,r){\"use strict\";t.exports=r(119)()?Array.from:r(120)},function(t,e,r){\"use strict\";t.exports=function(){var t,e,r=Array.from;return\"function\"==typeof r&&(e=r(t=[\"raz\",\"dwa\"]),Boolean(e&&e!==t&&\"dwa\"===e[1]))}},function(t,e,r){\"use strict\";var n=r(4).iterator,o=r(19),i=r(121),s=r(54),u=r(3),c=r(2),a=r(7),f=r(20),l=Array.isArray,p=Function.prototype.call,h={configurable:!0,enumerable:!0,writable:!0,value:null},_=Object.defineProperty;t.exports=function(t){var e,r,y,d,v,b,m,x,g,w,O=arguments[1],j=arguments[2];if(t=Object(c(t)),a(O)&&u(O),this&&this!==Array&&i(this))e=this;else{if(!O){if(o(t))return 1!==(v=t.length)?Array.apply(null,t):((d=new Array(1))[0]=t[0],d);if(l(t)){for(d=new Array(v=t.length),r=0;r<v;++r)d[r]=t[r];return d}}d=[]}if(!l(t))if(void 0!==(g=t[n])){for(m=u(g).call(t),e&&(d=new e),x=m.next(),r=0;!x.done;)w=O?p.call(O,j,x.value,r):x.value,e?(h.value=w,_(d,r,h)):d[r]=w,x=m.next(),++r;v=r}else if(f(t)){for(v=t.length,e&&(d=new e),r=0,y=0;r<v;++r)w=t[r],r+1<v&&(b=w.charCodeAt(0))>=55296&&b<=56319&&(w+=t[++r]),w=O?p.call(O,j,w,y):w,e?(h.value=w,_(d,y,h)):d[y]=w,++y;v=y}if(void 0===v)for(v=s(t.length),e&&(d=new e(v)),r=0;r<v;++r)w=O?p.call(O,j,t[r],r):t[r],e?(h.value=w,_(d,r,h)):d[r]=w;return e&&(h.value=null,d.length=v),d}},function(t,e,r){\"use strict\";var n=Object.prototype.toString,o=n.call(r(53));t.exports=function(t){return\"function\"==typeof t&&n.call(t)===o}},function(t,e,r){\"use strict\";var n=r(3),o=r(123),i=Function.prototype.call;t.exports=function(t,e){var r={},s=arguments[2];return n(e),o(t,function(t,n,o,u){r[n]=i.call(e,s,t,n,o,u)}),r}},function(t,e,r){\"use strict\";t.exports=r(124)(\"forEach\")},function(t,e,r){\"use strict\";var n=r(3),o=r(2),i=Function.prototype.bind,s=Function.prototype.call,u=Object.keys,c=Object.prototype.propertyIsEnumerable;t.exports=function(t,e){return function(r,a){var f,l=arguments[2],p=arguments[3];return r=Object(o(r)),n(a),f=u(r),p&&f.sort(\"function\"==typeof p?i.call(p,r):void 0),\"function\"!=typeof t&&(t=f[t]),s.call(t,f,function(t,n){return c.call(r,t)?s.call(a,l,r[t],t,r,n):e})}}},function(t,e,r){\"use strict\";var n,o=r(18),i=r(6),s=r(4),u=r(32),c=Object.defineProperty;n=t.exports=function(t){if(!(this instanceof n))throw new TypeError(\"Constructor requires 'new'\");t=String(t),u.call(this,t),c(this,\"__length__\",i(\"\",t.length))},o&&o(n,u),delete n.prototype.constructor,n.prototype=Object.create(u.prototype,{_next:i(function(){if(this.__list__)return this.__nextIndex__<this.__length__?this.__nextIndex__++:void this._unBind()}),_resolve:i(function(t){var e,r=this.__list__[t];return this.__nextIndex__===this.__length__?r:(e=r.charCodeAt(0))>=55296&&e<=56319?r+this.__list__[this.__nextIndex__++]:r})}),c(n.prototype,s.toStringTag,i(\"c\",\"String Iterator\"))},function(t,e,r){\"use strict\";var n,o=r(18),i=r(6),s=r(32),u=r(4).toStringTag,c=r(127),a=Object.defineProperties,f=s.prototype._unBind;n=t.exports=function(t,e){if(!(this instanceof n))return new n(t,e);s.call(this,t.__mapKeysData__,t),e&&c[e]||(e=\"key+value\"),a(this,{__kind__:i(\"\",e),__values__:i(\"w\",t.__mapValuesData__)})},o&&o(n,s),n.prototype=Object.create(s.prototype,{constructor:i(n),_resolve:i(function(t){return\"value\"===this.__kind__?this.__values__[t]:\"key\"===this.__kind__?this.__list__[t]:[this.__list__[t],this.__values__[t]]}),_unBind:i(function(){this.__values__=null,f.call(this)}),toString:i(function(){return\"[object Map Iterator]\"})}),Object.defineProperty(n.prototype,u,i(\"c\",\"Map Iterator\"))},function(t,e,r){\"use strict\";t.exports=r(128)(\"key\",\"value\",\"key+value\")},function(t,e,r){\"use strict\";var n=Array.prototype.forEach,o=Object.create;t.exports=function(t){var e=o(null);return n.call(arguments,function(t){e[t]=!0}),e}},function(t,e,r){\"use strict\";t.exports=\"undefined\"!=typeof Map&&\"[object Map]\"===Object.prototype.toString.call(new Map)}])});","import {\r\n  ApplicationInsights,\r\n  Snippet\r\n} from \"@microsoft/applicationinsights-web\";\r\n\r\nexport class TelemetryService {\r\n\r\npublic static _appInsightsInstance : ApplicationInsights;\r\npublic  constructor() {}\r\n\r\n// Get Azure App insights Instance Instance for the webpart if already present. If not initialize one.\r\npublic static getAppInsightsInstance(aiKey?:string, currentUser?: string): ApplicationInsights {\r\n      if(!TelemetryService._appInsightsInstance){\r\n        TelemetryService._appInsightsInstance = this.InitializeAI(aiKey,currentUser);\r\n      }\r\n      return TelemetryService._appInsightsInstance\r\n  }\r\n\r\n  public static InitializeAI(aiKey?:string, currentUser?: string): ApplicationInsights {\r\n        const appInsights = new ApplicationInsights(<Snippet>{\r\n          config: {\r\n            instrumentationKey: aiKey,\r\n            disableFetchTracking: false,\r\n            maxBatchInterval:0,\r\n            enableAutoRouteTracking: true,\r\n            namePrefix:\"ExtranetAppViewer\"\r\n          }\r\n        });\r\n        //load app insights\r\n        appInsights.loadAppInsights();\r\n\r\n        appInsights.context.application.ver = '1.0.1';\r\n\r\n        if(currentUser) {\r\n          // one way hash username\r\n          // decode using https://caligatio.github.io/jsSHA\r\n          //const SHA256 = new jsSHA('SHA-256','TEXT');\r\n          //SHA256.update(currentUser);\r\n          //const currentUserHashed = SHA256.getHash('HEX');\r\n\r\n          console.log('Pre-hashed current user',currentUser);\r\n          // Encoding is done just for logging for now\r\n          //console.log('Post-hashed current user',currentUserHashed);\r\n\r\n          appInsights.setAuthenticatedUserContext(currentUser);\r\n        }\r\n\r\n     return appInsights;\r\n  }\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { getGlobal as shimsGetGlobal, strShimUndefined, strShimObject, strShimPrototype, strShimFunction } from \"@microsoft/applicationinsights-shims\";\r\n/**\r\n * This file exists to hold environment utilities that are requied to check and\r\n * validate the current operating environment. Unless otherwise required, please\r\n * only defined methods (functions) in this class so that users of these\r\n * functions/properties only need to include those that are used within their own modules.\r\n */\r\nexport var strUndefined = strShimUndefined;\r\nexport var strObject = strShimObject;\r\nexport var strPrototype = strShimPrototype;\r\nexport var strFunction = strShimFunction;\r\nvar strWindow = \"window\";\r\nvar strDocument = \"document\";\r\nvar strNavigator = \"navigator\";\r\nvar strHistory = \"history\";\r\nvar strLocation = \"location\";\r\nvar strConsole = \"console\";\r\nvar strPerformance = \"performance\";\r\nvar strJSON = \"JSON\";\r\nvar strCrypto = \"crypto\";\r\nvar strMsCrypto = \"msCrypto\";\r\nvar strReactNative = \"ReactNative\";\r\n/**\r\n * Returns the current global scope object, for a normal web page this will be the current\r\n * window, for a Web Worker this will be current worker global scope via \"self\". The internal\r\n * implementation returns the first available instance object in the following order\r\n * - globalThis (New standard)\r\n * - self (Will return the current window instance for supported browsers)\r\n * - window (fallback for older browser implementations)\r\n * - global (NodeJS standard)\r\n * - <null> (When all else fails)\r\n * While the return type is a Window for the normal case, not all environments will support all\r\n * of the properties or functions.\r\n */\r\nexport var getGlobal = shimsGetGlobal;\r\n/**\r\n * Return the named global object if available, will return null if the object is not available.\r\n * @param name The globally named object\r\n */\r\nexport function getGlobalInst(name) {\r\n    var gbl = getGlobal();\r\n    if (gbl && gbl[name]) {\r\n        return gbl[name];\r\n    }\r\n    // Test workaround, for environments where <global>.window (when global == window) doesn't return the base window\r\n    if (name === strWindow && hasWindow()) {\r\n        // tslint:disable-next-line: no-angle-bracket-type-assertion\r\n        return window;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Checks if window object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a window\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: window is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasWindow() {\r\n    return Boolean(typeof window === strObject && window);\r\n}\r\n/**\r\n * Returns the global window object if it is present otherwise null.\r\n * This helper is used to access the window object without causing an exception\r\n * \"Uncaught ReferenceError: window is not defined\"\r\n */\r\nexport function getWindow() {\r\n    if (hasWindow()) {\r\n        return window;\r\n    }\r\n    // Return the global instance or null\r\n    return getGlobalInst(strWindow);\r\n}\r\n/**\r\n * Checks if document object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a document\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: document is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasDocument() {\r\n    return Boolean(typeof document === strObject && document);\r\n}\r\n/**\r\n * Returns the global document object if it is present otherwise null.\r\n * This helper is used to access the document object without causing an exception\r\n * \"Uncaught ReferenceError: document is not defined\"\r\n */\r\nexport function getDocument() {\r\n    if (hasDocument()) {\r\n        return document;\r\n    }\r\n    return getGlobalInst(strDocument);\r\n}\r\n/**\r\n * Checks if navigator object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a navigator\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: navigator is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasNavigator() {\r\n    return Boolean(typeof navigator === strObject && navigator);\r\n}\r\n/**\r\n * Returns the global navigator object if it is present otherwise null.\r\n * This helper is used to access the navigator object without causing an exception\r\n * \"Uncaught ReferenceError: navigator is not defined\"\r\n */\r\nexport function getNavigator() {\r\n    if (hasNavigator()) {\r\n        return navigator;\r\n    }\r\n    return getGlobalInst(strNavigator);\r\n}\r\n/**\r\n * Checks if history object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: history is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasHistory() {\r\n    return Boolean(typeof history === strObject && history);\r\n}\r\n/**\r\n * Returns the global history object if it is present otherwise null.\r\n * This helper is used to access the history object without causing an exception\r\n * \"Uncaught ReferenceError: history is not defined\"\r\n */\r\nexport function getHistory() {\r\n    if (hasHistory()) {\r\n        return history;\r\n    }\r\n    return getGlobalInst(strHistory);\r\n}\r\n/**\r\n * Returns the global location object if it is present otherwise null.\r\n * This helper is used to access the location object without causing an exception\r\n * \"Uncaught ReferenceError: location is not defined\"\r\n */\r\nexport function getLocation() {\r\n    if (typeof location === strObject && location) {\r\n        return location;\r\n    }\r\n    return getGlobalInst(strLocation);\r\n}\r\n/**\r\n * Returns the global console object\r\n */\r\nexport function getConsole() {\r\n    if (typeof console !== strUndefined) {\r\n        return console;\r\n    }\r\n    return getGlobalInst(strConsole);\r\n}\r\n/**\r\n * Returns the performance object if it is present otherwise null.\r\n * This helper is used to access the performance object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getPerformance() {\r\n    return getGlobalInst(strPerformance);\r\n}\r\n/**\r\n * Checks if JSON object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: JSON is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasJSON() {\r\n    return Boolean((typeof JSON === strObject && JSON) || getGlobalInst(strJSON) !== null);\r\n}\r\n/**\r\n * Returns the global JSON object if it is present otherwise null.\r\n * This helper is used to access the JSON object without causing an exception\r\n * \"Uncaught ReferenceError: JSON is not defined\"\r\n */\r\nexport function getJSON() {\r\n    if (hasJSON()) {\r\n        return JSON || getGlobalInst(strJSON);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getCrypto() {\r\n    return getGlobalInst(strCrypto);\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getMsCrypto() {\r\n    return getGlobalInst(strMsCrypto);\r\n}\r\n/**\r\n * Returns whether the environment is reporting that we are running in a React Native Environment\r\n */\r\nexport function isReactNative() {\r\n    // If running in React Native, navigator.product will be populated\r\n    var nav = getNavigator();\r\n    if (nav && nav.product) {\r\n        return nav.product === strReactNative;\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=EnvUtils.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { objCreateFn, strShimObject, strShimUndefined, strShimFunction, strShimPrototype } from \"@microsoft/applicationinsights-shims\";\r\nimport { getWindow, getDocument, getCrypto, getPerformance, getMsCrypto, getNavigator } from './EnvUtils';\r\n// Added to help with minfication\r\nexport var Undefined = strShimUndefined;\r\nvar strOnPrefix = \"on\";\r\nvar strAttachEvent = \"attachEvent\";\r\nvar strAddEventHelper = \"addEventListener\";\r\nvar strDetachEvent = \"detachEvent\";\r\nvar strRemoveEventListener = \"removeEventListener\";\r\nvar UInt32Mask = 0x100000000;\r\nvar MaxUInt32 = 0xffffffff;\r\nvar _isTrident = null;\r\n// MWC based Random generator (for IE)\r\nvar _mwcSeeded = false;\r\nvar _mwcW = 123456789;\r\nvar _mwcZ = 987654321;\r\n// Takes any integer\r\nfunction _mwcSeed(seedValue) {\r\n    _mwcW = (123456789 + seedValue) & MaxUInt32;\r\n    _mwcZ = (987654321 - seedValue) & MaxUInt32;\r\n    _mwcSeeded = true;\r\n}\r\nfunction _autoSeedMwc() {\r\n    // Simple initialization using default Math.random() - So we inherit any entropy from the browser\r\n    // and bitwise XOR with the current milliseconds\r\n    _mwcSeed((Math.random() * UInt32Mask) ^ new Date().getTime());\r\n}\r\nfunction _isTypeof(value, theType) {\r\n    return typeof value === theType;\r\n}\r\n;\r\nfunction _isUndefined(value) {\r\n    return _isTypeof(value, strShimUndefined) || value === undefined;\r\n}\r\n;\r\nfunction _isNullOrUndefined(value) {\r\n    return (_isUndefined(value) || value === null);\r\n}\r\nfunction _hasOwnProperty(obj, prop) {\r\n    return obj && Object[strShimPrototype].hasOwnProperty.call(obj, prop);\r\n}\r\n;\r\nfunction _isObject(value) {\r\n    return _isTypeof(value, strShimObject);\r\n}\r\n;\r\nfunction _isFunction(value) {\r\n    return _isTypeof(value, strShimFunction);\r\n}\r\n;\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj Object to add the event too.\r\n * @param eventNameWithoutOn String that specifies any of the standard DHTML Events without \"on\" prefix\r\n * @param handlerRef Pointer that specifies the function to call when event fires\r\n * @param useCapture [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nfunction _attachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    var result = false;\r\n    if (!_isNullOrUndefined(obj)) {\r\n        try {\r\n            if (!_isNullOrUndefined(obj[strAddEventHelper])) {\r\n                // all browsers except IE before version 9\r\n                obj[strAddEventHelper](eventNameWithoutOn, handlerRef, useCapture);\r\n                result = true;\r\n            }\r\n            else if (!_isNullOrUndefined(obj[strAttachEvent])) {\r\n                // IE before version 9                    \r\n                obj[strAttachEvent](strOnPrefix + eventNameWithoutOn, handlerRef);\r\n                result = true;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object to remove the event from\r\n * @param eventNameWithoutOn {string} - The name of the event\r\n * @param handlerRef {any} - The callback function that needs to be executed for the given event\r\n * @param useCapture [Optional] Defaults to false\r\n */\r\nfunction _detachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    if (!_isNullOrUndefined(obj)) {\r\n        try {\r\n            if (!_isNullOrUndefined(obj[strRemoveEventListener])) {\r\n                obj[strRemoveEventListener](eventNameWithoutOn, handlerRef, useCapture);\r\n            }\r\n            else if (!_isNullOrUndefined(obj[strDetachEvent])) {\r\n                obj[strDetachEvent](strOnPrefix + eventNameWithoutOn, handlerRef);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n}\r\n/**\r\n * Validates that the string name conforms to the JS IdentifierName specification and if not\r\n * normalizes the name so that it would. This method does not identify or change any keywords\r\n * meaning that if you pass in a known keyword the same value will be returned.\r\n * This is a simplified version\r\n * @param name The name to validate\r\n */\r\nexport function normalizeJsName(name) {\r\n    var value = name;\r\n    var match = /([^\\w\\d_$])/g;\r\n    if (match.test(name)) {\r\n        value = name.replace(match, \"_\");\r\n    }\r\n    return value;\r\n}\r\nvar CoreUtils = /** @class */ (function () {\r\n    function CoreUtils() {\r\n    }\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    CoreUtils.isDate = function (obj) {\r\n        return Object[strShimPrototype].toString.call(obj) === \"[object Date]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    CoreUtils.isArray = function (obj) {\r\n        return Object[strShimPrototype].toString.call(obj) === \"[object Array]\";\r\n    };\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    CoreUtils.isError = function (obj) {\r\n        return Object[strShimPrototype].toString.call(obj) === \"[object Error]\";\r\n    };\r\n    /**\r\n     * Checks if the type of value is a string.\r\n     * @param {any} value - Value to be checked.\r\n     * @return {boolean} True if the value is a string, false otherwise.\r\n     */\r\n    CoreUtils.isString = function (value) {\r\n        return _isTypeof(value, \"string\");\r\n    };\r\n    /**\r\n     * Checks if the type of value is a number.\r\n     * @param {any} value - Value to be checked.\r\n     * @return {boolean} True if the value is a number, false otherwise.\r\n     */\r\n    CoreUtils.isNumber = function (value) {\r\n        return _isTypeof(value, \"number\");\r\n    };\r\n    /**\r\n     * Checks if the type of value is a boolean.\r\n     * @param {any} value - Value to be checked.\r\n     * @return {boolean} True if the value is a boolean, false otherwise.\r\n     */\r\n    CoreUtils.isBoolean = function (value) {\r\n        return _isTypeof(value, \"boolean\");\r\n    };\r\n    /**\r\n     * Creates a new GUID.\r\n     * @return {string} A GUID.\r\n     */\r\n    CoreUtils.disableCookies = function () {\r\n        CoreUtils._canUseCookies = false;\r\n    };\r\n    CoreUtils.newGuid = function () {\r\n        function randomHexDigit() {\r\n            return CoreUtils.randomValue(15); // Get a random value from 0..15\r\n        }\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(GuidRegex, function (c) {\r\n            var r = (randomHexDigit() | 0), v = (c === 'x' ? r : r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    };\r\n    /**\r\n     * Convert a date to I.S.O. format in IE8\r\n     */\r\n    CoreUtils.toISOString = function (date) {\r\n        if (CoreUtils.isDate(date)) {\r\n            var pad = function (num) {\r\n                var r = String(num);\r\n                if (r.length === 1) {\r\n                    r = \"0\" + r;\r\n                }\r\n                return r;\r\n            };\r\n            return date.getUTCFullYear()\r\n                + \"-\" + pad(date.getUTCMonth() + 1)\r\n                + \"-\" + pad(date.getUTCDate())\r\n                + \"T\" + pad(date.getUTCHours())\r\n                + \":\" + pad(date.getUTCMinutes())\r\n                + \":\" + pad(date.getUTCSeconds())\r\n                + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                + \"Z\";\r\n        }\r\n    };\r\n    /**\r\n     * Performs the specified action for each element in an array. This helper exists to avoid adding a polyfil for older browsers\r\n     * that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype\r\n     * implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would\r\n     * cause a testing requirement to test with and without the implementations\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\r\n     * @param thisArg  [Optional] An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    CoreUtils.arrForEach = function (arr, callbackfn, thisArg) {\r\n        var len = arr.length;\r\n        for (var idx = 0; idx < len; idx++) {\r\n            if (idx in arr) {\r\n                callbackfn.call(thisArg || arr, arr[idx], idx, arr);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array. This helper exists to avoid adding a polyfil for older browsers\r\n     * that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype\r\n     * implementation. Note: For consistency this will not use the Array.prototype.xxxx implementation if it exists as this would\r\n     * cause a testing requirement to test with and without the implementations\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\r\n     */\r\n    CoreUtils.arrIndexOf = function (arr, searchElement, fromIndex) {\r\n        var len = arr.length;\r\n        var from = fromIndex || 0;\r\n        for (var lp = Math.max(from >= 0 ? from : len - Math.abs(from), 0); lp < len; lp++) {\r\n            if (lp in arr && arr[lp] === searchElement) {\r\n                return lp;\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that contains the results. This helper exists\r\n     * to avoid adding a polyfil for older browsers that do not define Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page\r\n     * checks for presence/absence of the prototype implementation. Note: For consistency this will not use the Array.prototype.xxxx\r\n     * implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    CoreUtils.arrMap = function (arr, callbackfn, thisArg) {\r\n        var len = arr.length;\r\n        var _this = thisArg || arr;\r\n        var results = new Array(len);\r\n        for (var lp = 0; lp < len; lp++) {\r\n            if (lp in arr) {\r\n                results[lp] = callbackfn.call(_this, arr[lp], arr);\r\n            }\r\n        }\r\n        return results;\r\n    };\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is\r\n     * provided as an argument in the next call to the callback function. This helper exists to avoid adding a polyfil for older browsers that do not define\r\n     * Array.prototype.xxxx (eg. ES3 only, IE8) just in case any page checks for presence/absence of the prototype implementation. Note: For consistency\r\n     * this will not use the Array.prototype.xxxx implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\r\n     */\r\n    CoreUtils.arrReduce = function (arr, callbackfn, initialValue) {\r\n        var len = arr.length;\r\n        var lp = 0;\r\n        var value;\r\n        // Specifically checking the number of passed arguments as the value could be anything\r\n        if (arguments.length >= 3) {\r\n            value = arguments[2];\r\n        }\r\n        else {\r\n            while (lp < len && !(lp in arr)) {\r\n                lp++;\r\n            }\r\n            value = arr[lp++];\r\n        }\r\n        while (lp < len) {\r\n            if (lp in arr) {\r\n                value = callbackfn(value, arr[lp], lp, arr);\r\n            }\r\n            lp++;\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    CoreUtils.strTrim = function (str) {\r\n        if (!CoreUtils.isString(str)) {\r\n            return str;\r\n        }\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * Returns the names of the enumerable string properties and methods of an object. This helper exists to avoid adding a polyfil for older browsers\r\n     * that do not define Object.keys eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation.\r\n     * Note: For consistency this will not use the Object.keys implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n     * @param obj Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\r\n     */\r\n    CoreUtils.objKeys = function (obj) {\r\n        var hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString');\r\n        if (!_isFunction(obj) && (!_isObject(obj) || obj === null)) {\r\n            throw new TypeError('objKeys called on non-object');\r\n        }\r\n        var result = [];\r\n        for (var prop in obj) {\r\n            if (_hasOwnProperty(obj, prop)) {\r\n                result.push(prop);\r\n            }\r\n        }\r\n        if (hasDontEnumBug) {\r\n            var dontEnums = [\r\n                'toString',\r\n                'toLocaleString',\r\n                'valueOf',\r\n                'hasOwnProperty',\r\n                'isPrototypeOf',\r\n                'propertyIsEnumerable',\r\n                'constructor'\r\n            ];\r\n            var dontEnumsLength = dontEnums.length;\r\n            for (var lp = 0; lp < dontEnumsLength; lp++) {\r\n                if (_hasOwnProperty(obj, dontEnums[lp])) {\r\n                    result.push(dontEnums[lp]);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Try to define get/set object property accessors for the target object/prototype, this will provide compatibility with\r\n     * existing API definition when run within an ES5+ container that supports accessors but still enable the code to be loaded\r\n     * and executed in an ES3 container, providing basic IE8 compatibility.\r\n     * @param target The object on which to define the property.\r\n     * @param prop The name of the property to be defined or modified.\r\n     * @param getProp The getter function to wire against the getter.\r\n     * @param setProp The setter function to wire against the setter.\r\n     * @returns True if it was able to create the accessors otherwise false\r\n     */\r\n    CoreUtils.objDefineAccessors = function (target, prop, getProp, setProp) {\r\n        var defineProp = Object[\"defineProperty\"];\r\n        if (defineProp) {\r\n            try {\r\n                var descriptor = {\r\n                    enumerable: true,\r\n                    configurable: true\r\n                };\r\n                if (getProp) {\r\n                    descriptor.get = getProp;\r\n                }\r\n                if (setProp) {\r\n                    descriptor.set = setProp;\r\n                }\r\n                defineProp(target, prop, descriptor);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                // IE8 Defines a defineProperty on Object but it's only supported for DOM elements so it will throw\r\n                // We will just ignore this here.\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Trys to add an event handler for the specified event to the window, body and document\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    CoreUtils.addEventHandler = function (eventName, callback) {\r\n        var result = false;\r\n        var w = getWindow();\r\n        if (w) {\r\n            result = _attachEvent(w, eventName, callback);\r\n            result = _attachEvent(w[\"body\"], eventName, callback) || result;\r\n        }\r\n        var doc = getDocument();\r\n        if (doc) {\r\n            result = EventHelper.Attach(doc, eventName, callback) || result;\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Return the current time via the Date now() function (if available) and falls back to (new Date()).getTime() if now() is unavailable (IE8 or less)\r\n     * https://caniuse.com/#search=Date.now\r\n     */\r\n    CoreUtils.dateNow = function () {\r\n        var dt = Date;\r\n        if (dt.now) {\r\n            return dt.now();\r\n        }\r\n        return new dt().getTime();\r\n    };\r\n    /**\r\n     * Return the current value of the Performance Api now() function (if available) and fallback to CoreUtils.dateNow() if it is unavailable (IE9 or less)\r\n     * https://caniuse.com/#search=performance.now\r\n     */\r\n    CoreUtils.perfNow = function () {\r\n        var perf = getPerformance();\r\n        if (perf && perf.now) {\r\n            return perf.now();\r\n        }\r\n        return CoreUtils.dateNow();\r\n    };\r\n    /**\r\n     * Generate random base64 id string.\r\n     * The default length is 22 which is 132-bits so almost the same as a GUID but as base64 (the previous default was 5)\r\n     * @param maxLength - Optional value to specify the length of the id to be generated, defaults to 22\r\n     */\r\n    CoreUtils.newId = function (maxLength) {\r\n        if (maxLength === void 0) { maxLength = 22; }\r\n        var base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n        // Start with an initial random number, consuming the value in reverse byte order\r\n        var number = CoreUtils.random32() >>> 0; // Make sure it's a +ve number\r\n        var chars = 0;\r\n        var result = \"\";\r\n        while (result.length < maxLength) {\r\n            chars++;\r\n            result += base64chars.charAt(number & 0x3F);\r\n            number >>>= 6; // Zero fill with right shift\r\n            if (chars === 5) {\r\n                // 5 base64 characters === 30 bits so we don't have enough bits for another base64 char\r\n                // So add on another 30 bits and make sure it's +ve\r\n                number = (((CoreUtils.random32() << 2) & 0xFFFFFFFF) | (number & 0x03)) >>> 0;\r\n                chars = 0; // We need to reset the number every 5 chars (30 bits)\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Identifies whether the current environment appears to be IE\r\n     */\r\n    CoreUtils.isIE = function () {\r\n        if (_isTrident === null) {\r\n            var navigator_1 = getNavigator() || {};\r\n            var userAgent = (navigator_1.userAgent || \"\").toLowerCase();\r\n            _isTrident = (userAgent.indexOf(\"msie\") !== -1 || userAgent.indexOf(\"trident/\") !== -1);\r\n        }\r\n        return _isTrident;\r\n    };\r\n    /**\r\n     * Generate a random value between 0 and maxValue, max value should be limited to a 32-bit maximum.\r\n     * So maxValue(16) will produce a number from 0..16 (range of 17)\r\n     * @param maxValue\r\n     */\r\n    CoreUtils.randomValue = function (maxValue) {\r\n        if (maxValue > 0) {\r\n            return Math.floor((CoreUtils.random32() / MaxUInt32) * (maxValue + 1)) >>> 0;\r\n        }\r\n        return 0;\r\n    };\r\n    /**\r\n     * generate a random 32-bit number (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), defaults un-unsigned.\r\n     * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n     */\r\n    CoreUtils.random32 = function (signed) {\r\n        var value;\r\n        var c = getCrypto() || getMsCrypto();\r\n        if (c && c.getRandomValues) {\r\n            // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n            value = c.getRandomValues(new Uint32Array(1))[0] & MaxUInt32;\r\n        }\r\n        else if (CoreUtils.isIE()) {\r\n            // For IE 6, 7, 8 (especially on XP) Math.random is not very random\r\n            if (!_mwcSeeded) {\r\n                // Set the seed for the Mwc algorithm\r\n                _autoSeedMwc();\r\n            }\r\n            // Don't use Math.random for IE\r\n            // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n            value = CoreUtils.mwcRandom32() & MaxUInt32;\r\n        }\r\n        else {\r\n            // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n            value = Math.floor((UInt32Mask * Math.random()) | 0);\r\n        }\r\n        if (!signed) {\r\n            // Make sure we end up with a positive number and not -ve one.\r\n            value >>>= 0;\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Seed the MWC random number generator with the specified seed or a random value\r\n     * @param value - optional the number to used as the seed, if undefined, null or zero a random value will be chosen\r\n     */\r\n    CoreUtils.mwcRandomSeed = function (value) {\r\n        if (!value) {\r\n            _autoSeedMwc();\r\n        }\r\n        else {\r\n            _mwcSeed(value);\r\n        }\r\n    };\r\n    /**\r\n     * Generate a random 32-bit number between (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), using MWC (Multiply with carry)\r\n     * instead of Math.random() defaults to un-signed.\r\n     * Used as a replacement random generator for IE to avoid issues with older IE instances.\r\n     * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n     */\r\n    CoreUtils.mwcRandom32 = function (signed) {\r\n        _mwcZ = (36969 * (_mwcZ & 0xFFFF) + (_mwcZ >> 16)) & MaxUInt32;\r\n        _mwcW = (18000 * (_mwcW & 0xFFFF) + (_mwcW >> 16)) & MaxUInt32;\r\n        var value = (((_mwcZ << 16) + (_mwcW & 0xFFFF)) >>> 0) & MaxUInt32 | 0;\r\n        if (!signed) {\r\n            // Make sure we end up with a positive number and not -ve one.\r\n            value >>>= 0;\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * generate W3C trace id\r\n     */\r\n    CoreUtils.generateW3CId = function () {\r\n        var hexValues = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n        // rfc4122 version 4 UUID without dashes and with lowercase letters\r\n        var oct = \"\", tmp;\r\n        for (var a = 0; a < 4; a++) {\r\n            tmp = CoreUtils.random32();\r\n            oct +=\r\n                hexValues[tmp & 0xF] +\r\n                    hexValues[tmp >> 4 & 0xF] +\r\n                    hexValues[tmp >> 8 & 0xF] +\r\n                    hexValues[tmp >> 12 & 0xF] +\r\n                    hexValues[tmp >> 16 & 0xF] +\r\n                    hexValues[tmp >> 20 & 0xF] +\r\n                    hexValues[tmp >> 24 & 0xF] +\r\n                    hexValues[tmp >> 28 & 0xF];\r\n        }\r\n        // \"Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively\"\r\n        var clockSequenceHi = hexValues[8 + (CoreUtils.random32() & 0x03) | 0];\r\n        return oct.substr(0, 8) + oct.substr(9, 4) + \"4\" + oct.substr(13, 3) + clockSequenceHi + oct.substr(16, 3) + oct.substr(19, 12);\r\n    };\r\n    CoreUtils.isTypeof = _isTypeof;\r\n    CoreUtils.isUndefined = _isUndefined;\r\n    CoreUtils.isNullOrUndefined = _isNullOrUndefined;\r\n    CoreUtils.hasOwnProperty = _hasOwnProperty;\r\n    /**\r\n     * Checks if the passed of value is a function.\r\n     * @param {any} value - Value to be checked.\r\n     * @return {boolean} True if the value is a boolean, false otherwise.\r\n     */\r\n    CoreUtils.isFunction = _isFunction;\r\n    /**\r\n     * Checks if the passed of value is a function.\r\n     * @param {any} value - Value to be checked.\r\n     * @return {boolean} True if the value is a boolean, false otherwise.\r\n     */\r\n    CoreUtils.isObject = _isObject;\r\n    /**\r\n     * Creates an object that has the specified prototype, and that optionally contains specified properties. This helper exists to avoid adding a polyfil\r\n     * for older browsers that do not define Object.create eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation.\r\n     * Note: For consistency this will not use the Object.create implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n     * @param obj Object to use as a prototype. May be null\r\n     */\r\n    // tslint:disable-next-line: member-ordering\r\n    CoreUtils.objCreate = objCreateFn;\r\n    return CoreUtils;\r\n}());\r\nexport { CoreUtils };\r\nvar GuidRegex = /[xy]/g;\r\nvar EventHelper = /** @class */ (function () {\r\n    function EventHelper() {\r\n    }\r\n    /**\r\n     * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n     * @param obj Object to add the event too.\r\n     * @param eventNameWithoutOn String that specifies any of the standard DHTML Events without \"on\" prefix\r\n     * @param handlerRef Pointer that specifies the function to call when event fires\r\n     * @returns True if the function was bound successfully to the event, otherwise false\r\n     */\r\n    EventHelper.Attach = _attachEvent;\r\n    /**\r\n     * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n     * @deprecated Use {@link EventHelper#Attach} as we are already in a class call EventHelper the extra \"Event\" just causes a larger result\r\n     * @param obj Object to add the event too.\r\n     * @param eventNameWithoutOn String that specifies any of the standard DHTML Events without \"on\" prefix\r\n     * @param handlerRef Pointer that specifies the function to call when event fires\r\n     * @returns True if the function was bound successfully to the event, otherwise false\r\n     */\r\n    EventHelper.AttachEvent = _attachEvent;\r\n    /**\r\n     * Removes an event handler for the specified event\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    EventHelper.Detach = _detachEvent;\r\n    /**\r\n     * Removes an event handler for the specified event\r\n     * @deprecated Use {@link EventHelper#Detach} as we are already in a class call EventHelper the extra \"Event\" just causes a larger result\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    EventHelper.DetachEvent = _detachEvent;\r\n    return EventHelper;\r\n}());\r\nexport { EventHelper };\r\n//# sourceMappingURL=CoreUtils.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var LoggingSeverity;\r\n(function (LoggingSeverity) {\r\n    /**\r\n     * Error will be sent as internal telemetry\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 1] = \"CRITICAL\";\r\n    /**\r\n     * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n     */\r\n    LoggingSeverity[LoggingSeverity[\"WARNING\"] = 2] = \"WARNING\";\r\n})(LoggingSeverity || (LoggingSeverity = {}));\r\n/**\r\n * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n */\r\nexport var _InternalMessageId = {\r\n    // Non user actionable\r\n    BrowserDoesNotSupportLocalStorage: 0,\r\n    BrowserCannotReadLocalStorage: 1,\r\n    BrowserCannotReadSessionStorage: 2,\r\n    BrowserCannotWriteLocalStorage: 3,\r\n    BrowserCannotWriteSessionStorage: 4,\r\n    BrowserFailedRemovalFromLocalStorage: 5,\r\n    BrowserFailedRemovalFromSessionStorage: 6,\r\n    CannotSendEmptyTelemetry: 7,\r\n    ClientPerformanceMathError: 8,\r\n    ErrorParsingAISessionCookie: 9,\r\n    ErrorPVCalc: 10,\r\n    ExceptionWhileLoggingError: 11,\r\n    FailedAddingTelemetryToBuffer: 12,\r\n    FailedMonitorAjaxAbort: 13,\r\n    FailedMonitorAjaxDur: 14,\r\n    FailedMonitorAjaxOpen: 15,\r\n    FailedMonitorAjaxRSC: 16,\r\n    FailedMonitorAjaxSend: 17,\r\n    FailedMonitorAjaxGetCorrelationHeader: 18,\r\n    FailedToAddHandlerForOnBeforeUnload: 19,\r\n    FailedToSendQueuedTelemetry: 20,\r\n    FailedToReportDataLoss: 21,\r\n    FlushFailed: 22,\r\n    MessageLimitPerPVExceeded: 23,\r\n    MissingRequiredFieldSpecification: 24,\r\n    NavigationTimingNotSupported: 25,\r\n    OnError: 26,\r\n    SessionRenewalDateIsZero: 27,\r\n    SenderNotInitialized: 28,\r\n    StartTrackEventFailed: 29,\r\n    StopTrackEventFailed: 30,\r\n    StartTrackFailed: 31,\r\n    StopTrackFailed: 32,\r\n    TelemetrySampledAndNotSent: 33,\r\n    TrackEventFailed: 34,\r\n    TrackExceptionFailed: 35,\r\n    TrackMetricFailed: 36,\r\n    TrackPVFailed: 37,\r\n    TrackPVFailedCalc: 38,\r\n    TrackTraceFailed: 39,\r\n    TransmissionFailed: 40,\r\n    FailedToSetStorageBuffer: 41,\r\n    FailedToRestoreStorageBuffer: 42,\r\n    InvalidBackendResponse: 43,\r\n    FailedToFixDepricatedValues: 44,\r\n    InvalidDurationValue: 45,\r\n    TelemetryEnvelopeInvalid: 46,\r\n    CreateEnvelopeError: 47,\r\n    // User actionable\r\n    CannotSerializeObject: 48,\r\n    CannotSerializeObjectNonSerializable: 49,\r\n    CircularReferenceDetected: 50,\r\n    ClearAuthContextFailed: 51,\r\n    ExceptionTruncated: 52,\r\n    IllegalCharsInName: 53,\r\n    ItemNotInArray: 54,\r\n    MaxAjaxPerPVExceeded: 55,\r\n    MessageTruncated: 56,\r\n    NameTooLong: 57,\r\n    SampleRateOutOfRange: 58,\r\n    SetAuthContextFailed: 59,\r\n    SetAuthContextFailedAccountName: 60,\r\n    StringValueTooLong: 61,\r\n    StartCalledMoreThanOnce: 62,\r\n    StopCalledWithoutStart: 63,\r\n    TelemetryInitializerFailed: 64,\r\n    TrackArgumentsNotSpecified: 65,\r\n    UrlTooLong: 66,\r\n    SessionStorageBufferFull: 67,\r\n    CannotAccessCookie: 68,\r\n    IdTooLong: 69,\r\n    InvalidEvent: 70,\r\n    FailedMonitorAjaxSetRequestHeader: 71,\r\n    SendBrowserInfoOnUserInit: 72,\r\n    PluginException: 73,\r\n    NotificationException: 74,\r\n    SnippetScriptLoadFailure: 99,\r\n    InvalidInstrumentationKey: 100\r\n};\r\n//# sourceMappingURL=LoggingEnums.js.map","/*!\n * Microsoft Dynamic Proto Utility, 1.1.0\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Constructor = 'constructor';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Prototype = 'prototype';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strFunction = 'function';\r\n/**\r\n * Used to define the name of the instance function lookup table\r\n * @ignore\r\n */\r\nvar DynInstFuncTable = '_dynInstFuncs';\r\n/**\r\n * Name used to tag the dynamic prototype function\r\n * @ignore\r\n */\r\nvar DynProxyTag = '_isDynProxy';\r\n/**\r\n * Name added to a prototype to define the dynamic prototype \"class\" name used to lookup the function table\r\n * @ignore\r\n */\r\nvar DynClassName = '_dynClass';\r\n/**\r\n * Prefix added to the classname to avoid any name clashes with other instance level properties\r\n * @ignore\r\n */\r\nvar DynClassNamePrefix = '_dynCls$';\r\n/**\r\n * A tag which is used to check if we have already to attempted to set the instance function if one is not present\r\n * @ignore\r\n */\r\nvar DynInstChkTag = '_dynInstChk';\r\n/**\r\n * A tag which is used to check if we are allows to try and set an instance function is one is not present. Using the same\r\n * tag name as the function level but a different const name for readability only.\r\n */\r\nvar DynAllowInstChkTag = DynInstChkTag;\r\n/**\r\n * The global (imported) instances where the global performance options are stored\r\n */\r\nvar DynProtoDefaultOptions = '_dfOpts';\r\n/**\r\n * Value used as the name of a class when it cannot be determined\r\n * @ignore\r\n */\r\nvar UnknownValue = '_unknown_';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar str__Proto = \"__proto__\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strUseBaseInst = 'useBaseInst';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strSetInstFuncs = 'setInstFuncs';\r\n/**\r\n * Pre-lookup to check if we are running on a modern browser (i.e. not IE8)\r\n * @ignore\r\n */\r\nvar _objGetPrototypeOf = Object[\"getPrototypeOf\"];\r\n/**\r\n * Internal Global used to generate a unique dynamic class name, every new class will increase this value\r\n * @ignore\r\n */\r\nvar _dynamicNames = 0;\r\n/**\r\n * Helper to check if the object contains a property of the name\r\n * @ignore\r\n */\r\nfunction _hasOwnProperty(obj, prop) {\r\n    return obj && Object[Prototype].hasOwnProperty.call(obj, prop);\r\n}\r\n/**\r\n * Checks if the passed of value is a function.\r\n * @param {any} value - Value to be checked.\r\n * @return {boolean} True if the value is a boolean, false otherwise.\r\n * @ignore\r\n */\r\nfunction _isFunction(value) {\r\n    return typeof value === strFunction;\r\n}\r\n/**\r\n * Helper used to check whether the target is an Object prototype or Array prototype\r\n * @ignore\r\n */\r\nfunction _isObjectOrArrayPrototype(target) {\r\n    return target && (target === Object[Prototype] || target === Array[Prototype]);\r\n}\r\n/**\r\n * Helper used to check whether the target is an Object prototype, Array prototype or Function prototype\r\n * @ignore\r\n */\r\nfunction _isObjectArrayOrFunctionPrototype(target) {\r\n    return _isObjectOrArrayPrototype(target) || target === Function[Prototype];\r\n}\r\n/**\r\n * Helper used to get the prototype of the target object as getPrototypeOf is not available in an ES3 environment.\r\n * @ignore\r\n */\r\nfunction _getObjProto(target) {\r\n    if (target) {\r\n        // This method doesn't existing in older browsers (e.g. IE8)\r\n        if (_objGetPrototypeOf) {\r\n            return _objGetPrototypeOf(target);\r\n        }\r\n        // target[Constructor] May break if the constructor has been changed or removed\r\n        var newProto = target[str__Proto] || target[Prototype] || target[Constructor];\r\n        if (newProto) {\r\n            return newProto;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Helper function to check whether the provided function name is a potential candidate for dynamic\r\n * callback and prototype generation.\r\n * @param target The target object, may be a prototype or class object\r\n * @param funcName The function name\r\n * @param skipOwn Skips the check for own property\r\n * @ignore\r\n */\r\nfunction _isDynamicCandidate(target, funcName, skipOwn) {\r\n    return (funcName !== Constructor && _isFunction(target[funcName]) && (skipOwn || _hasOwnProperty(target, funcName)));\r\n}\r\n/**\r\n * Helper to throw a TypeError exception\r\n * @param message the message\r\n * @ignore\r\n */\r\nfunction _throwTypeError(message) {\r\n    throw new TypeError(\"DynamicProto: \" + message);\r\n}\r\n/**\r\n * Returns a collection of the instance functions that are defined directly on the thisTarget object, it does\r\n * not return any inherited functions\r\n * @param thisTarget The object to get the instance functions from\r\n * @ignore\r\n */\r\nfunction _getInstanceFuncs(thisTarget) {\r\n    // Get the base proto\r\n    var instFuncs = {};\r\n    // Save any existing instance functions\r\n    for (var name in thisTarget) {\r\n        // Don't include any dynamic prototype instances - as we only want the real functions\r\n        if (!instFuncs[name] && _isDynamicCandidate(thisTarget, name, false)) {\r\n            // Create an instance callback for passing the base function to the caller\r\n            instFuncs[name] = thisTarget[name];\r\n        }\r\n    }\r\n    return instFuncs;\r\n}\r\n/**\r\n * Returns whether the value is included in the array\r\n * @param values The array of values\r\n * @param value  The value\r\n */\r\nfunction _hasVisited(values, value) {\r\n    for (var lp = values.length - 1; lp >= 0; lp--) {\r\n        if (values[lp] === value) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Returns an object that contains callback functions for all \"base/super\" functions, this is used to \"save\"\r\n * enabling calling super.xxx() functions without requiring that the base \"class\" has defined a prototype references\r\n * @param target The current instance\r\n * @ignore\r\n */\r\nfunction _getBaseFuncs(classProto, thisTarget, instFuncs, useBaseInst) {\r\n    function _instFuncProxy(target, funcHost, funcName) {\r\n        var theFunc = funcHost[name];\r\n        if (theFunc[DynProxyTag] && useBaseInst) {\r\n            // grab and reuse the hosted looking function (if available) otherwise the original passed function\r\n            var instFuncTable = target[DynInstFuncTable] || {};\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                theFunc = (instFuncTable[funcHost[DynClassName]] || {})[funcName] || theFunc;\r\n            }\r\n        }\r\n        return function () {\r\n            return theFunc.apply(target, arguments);\r\n        };\r\n    }\r\n    // Start creating a new baseFuncs by creating proxies for the instance functions (as they may get replaced)\r\n    var baseFuncs = {};\r\n    for (var name in instFuncs) {\r\n        // Create an instance callback for passing the base function to the caller\r\n        baseFuncs[name] = _instFuncProxy(thisTarget, instFuncs, name);\r\n    }\r\n    // Get the base prototype functions\r\n    var baseProto = _getObjProto(classProto);\r\n    var visited = [];\r\n    // Don't include base object functions for Object, Array or Function\r\n    while (baseProto && !_isObjectArrayOrFunctionPrototype(baseProto) && !_hasVisited(visited, baseProto)) {\r\n        // look for prototype functions\r\n        for (var name in baseProto) {\r\n            // Don't include any dynamic prototype instances - as we only want the real functions\r\n            // For IE 7/8 the prototype lookup doesn't provide the full chain so we need to bypass the \r\n            // hasOwnProperty check we get all of the methods, main difference is that IE7/8 doesn't return\r\n            // the Object prototype methods while bypassing the check\r\n            if (!baseFuncs[name] && _isDynamicCandidate(baseProto, name, !_objGetPrototypeOf)) {\r\n                // Create an instance callback for passing the base function to the caller\r\n                baseFuncs[name] = _instFuncProxy(thisTarget, baseProto, name);\r\n            }\r\n        }\r\n        // We need to find all possible functions that might be overloaded by walking the entire prototype chain\r\n        // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n        // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n        visited.push(baseProto);\r\n        baseProto = _getObjProto(baseProto);\r\n    }\r\n    return baseFuncs;\r\n}\r\nfunction _getInstFunc(target, funcName, proto, currentDynProtoProxy) {\r\n    var instFunc = null;\r\n    // We need to check whether the class name is defined directly on this prototype otherwise\r\n    // it will walk the proto chain and return any parent proto classname.\r\n    if (target && _hasOwnProperty(proto, DynClassName)) {\r\n        var instFuncTable = target[DynInstFuncTable] || {};\r\n        instFunc = (instFuncTable[proto[DynClassName]] || {})[funcName];\r\n        if (!instFunc) {\r\n            // Avoid stack overflow from recursive calling the same function\r\n            _throwTypeError(\"Missing [\" + funcName + \"] \" + strFunction);\r\n        }\r\n        // We have the instance function, lets check it we can speed up further calls\r\n        // by adding the instance function back directly on the instance (avoiding the dynamic func lookup)\r\n        if (!instFunc[DynInstChkTag] && instFuncTable[DynAllowInstChkTag] !== false) {\r\n            // If the instance already has an instance function we can't replace it\r\n            var canAddInst = !_hasOwnProperty(target, funcName);\r\n            // Get current prototype\r\n            var objProto = _getObjProto(target);\r\n            var visited = [];\r\n            // Lookup the function starting at the top (instance level prototype) and traverse down, if the first matching function\r\n            // if nothing is found or if the first hit is a dynamic proto instance then we can safely add an instance shortcut\r\n            while (canAddInst && objProto && !_isObjectArrayOrFunctionPrototype(objProto) && !_hasVisited(visited, objProto)) {\r\n                var protoFunc = objProto[funcName];\r\n                if (protoFunc) {\r\n                    canAddInst = (protoFunc === currentDynProtoProxy);\r\n                    break;\r\n                }\r\n                // We need to find all possible initial functions to ensure that we don't bypass a valid override function\r\n                visited.push(objProto);\r\n                objProto = _getObjProto(objProto);\r\n            }\r\n            try {\r\n                if (canAddInst) {\r\n                    // This instance doesn't have an instance func and the class hierarchy does have a higher level prototype version\r\n                    // so it's safe to directly assign for any subsequent calls (for better performance)\r\n                    target[funcName] = instFunc;\r\n                }\r\n                // Block further attempts to set the instance function for any\r\n                instFunc[DynInstChkTag] = 1;\r\n            }\r\n            catch (e) {\r\n                // Don't crash if the object is readonly or the runtime doesn't allow changing this\r\n                // And set a flag so we don't try again for any function\r\n                instFuncTable[DynAllowInstChkTag] = false;\r\n            }\r\n        }\r\n    }\r\n    return instFunc;\r\n}\r\nfunction _getProtoFunc(funcName, proto, currentDynProtoProxy) {\r\n    var protoFunc = proto[funcName];\r\n    // Check that the prototype function is not a self reference -- try to avoid stack overflow!\r\n    if (protoFunc === currentDynProtoProxy) {\r\n        // It is so lookup the base prototype\r\n        protoFunc = _getObjProto(proto)[funcName];\r\n    }\r\n    if (!_isFunction(protoFunc)) {\r\n        _throwTypeError(\"[\" + funcName + \"] is not a \" + strFunction);\r\n    }\r\n    return protoFunc;\r\n}\r\n/**\r\n * Add the required dynamic prototype methods to the the class prototype\r\n * @param proto - The class prototype\r\n * @param className - The instance classname\r\n * @param target - The target instance\r\n * @param baseInstFuncs - The base instance functions\r\n * @param setInstanceFunc - Flag to allow prototype function to reset the instance function if one does not exist\r\n * @ignore\r\n */\r\nfunction _populatePrototype(proto, className, target, baseInstFuncs, setInstanceFunc) {\r\n    function _createDynamicPrototype(proto, funcName) {\r\n        var dynProtoProxy = function () {\r\n            // Use the instance or prototype function\r\n            var instFunc = _getInstFunc(this, funcName, proto, dynProtoProxy) || _getProtoFunc(funcName, proto, dynProtoProxy);\r\n            return instFunc.apply(this, arguments);\r\n        };\r\n        // Tag this function as a proxy to support replacing dynamic proxy elements (primary use case is for unit testing\r\n        // via which can dynamically replace the prototype function reference)\r\n        dynProtoProxy[DynProxyTag] = 1;\r\n        return dynProtoProxy;\r\n    }\r\n    if (!_isObjectOrArrayPrototype(proto)) {\r\n        var instFuncTable = target[DynInstFuncTable] = target[DynInstFuncTable] || {};\r\n        var instFuncs = instFuncTable[className] = (instFuncTable[className] || {}); // fetch and assign if as it may not exist yet\r\n        // Set whether we are allow to lookup instances, if someone has set to false then do not re-enable\r\n        if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n            instFuncTable[DynAllowInstChkTag] = !!setInstanceFunc;\r\n        }\r\n        for (var name in target) {\r\n            // Only add overridden functions\r\n            if (_isDynamicCandidate(target, name, false) && target[name] !== baseInstFuncs[name]) {\r\n                // Save the instance Function to the lookup table and remove it from the instance as it's not a dynamic proto function\r\n                instFuncs[name] = target[name];\r\n                delete target[name];\r\n                // Add a dynamic proto if one doesn't exist or if a prototype function exists and it's not a dynamic one\r\n                if (!_hasOwnProperty(proto, name) || (proto[name] && !proto[name][DynProxyTag])) {\r\n                    proto[name] = _createDynamicPrototype(proto, name);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Checks whether the passed prototype object appears to be correct by walking the prototype hierarchy of the instance\r\n * @param classProto The class prototype instance\r\n * @param thisTarget The current instance that will be checked whether the passed prototype instance is in the hierarchy\r\n * @ignore\r\n */\r\nfunction _checkPrototype(classProto, thisTarget) {\r\n    var thisProto = _getObjProto(thisTarget);\r\n    while (thisProto && !_isObjectArrayOrFunctionPrototype(thisProto)) {\r\n        if (thisProto === classProto) {\r\n            return true;\r\n        }\r\n        thisProto = _getObjProto(thisProto);\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Gets the current prototype name using the ES6 name if available otherwise falling back to a use unknown as the name.\r\n * It's not critical for this to return a name, it's used to decorate the generated unique name for easier debugging only.\r\n * @param target\r\n * @param unknownValue\r\n * @ignore\r\n */\r\nfunction _getObjName(target, unknownValue) {\r\n    if (_hasOwnProperty(target, Prototype)) {\r\n        // Look like a prototype\r\n        return target.name || unknownValue || UnknownValue;\r\n    }\r\n    return (((target || {})[Constructor]) || {}).name || unknownValue || UnknownValue;\r\n}\r\n/**\r\n * Helper function when creating dynamic (inline) functions for classes, this helper performs the following tasks :-\r\n * - Saves references to all defined base class functions\r\n * - Calls the delegateFunc with the current target (this) and a base object reference that can be used to call all \"super\" functions.\r\n * - Will populate the class prototype for all overridden functions to support class extension that call the prototype instance.\r\n * Callers should use this helper when declaring all function within the constructor of a class, as mentioned above the delegateFunc is\r\n * passed both the target \"this\" and an object that can be used to call any base (super) functions, using this based object in place of\r\n * super.XXX() (which gets expanded to _super.prototype.XXX()) provides a better minification outcome and also ensures the correct \"this\"\r\n * context is maintained as TypeScript creates incorrect references using super.XXXX() for dynamically defined functions i.e. Functions\r\n * defined in the constructor or some other function (rather than declared as complete typescript functions).\r\n * ### Usage\r\n * ```typescript\r\n * import dynamicProto from \"@microsoft/dynamicproto-js\";\r\n * class ExampleClass extends BaseClass {\r\n *     constructor() {\r\n *         dynamicProto(ExampleClass, this, (_self, base) => {\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.newFunc = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     ...\r\n *                 }\r\n *             }\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.myFunction = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     // Call the base version of the function that we are overriding\r\n *                     base.myFunction();\r\n *                 }\r\n *                 ...\r\n *             }\r\n *             _self.initialize = () => {\r\n *                 ...\r\n *             }\r\n *             // Warnings: While the following will work as _self is simply a reference to\r\n *             // this, if anyone overrides myFunction() the overridden will be called first\r\n *             // as the normal JavaScript method resolution will occur and the defined\r\n *             // _self.initialize() function is actually gets removed from the instance and\r\n *             // a proxy prototype version is created to reference the created method.\r\n *             _self.initialize();\r\n *         });\r\n *     }\r\n * }\r\n * ```\r\n * @typeparam DPType This is the generic type of the class, used to keep intellisense valid\r\n * @typeparam DPCls The type that contains the prototype of the current class\r\n * @param theClass - This is the current class instance which contains the prototype for the current class\r\n * @param target - The current \"this\" (target) reference, when the class has been extended this.prototype will not be the 'theClass' value.\r\n * @param delegateFunc - The callback function (closure) that will create the dynamic function\r\n * @param options - Additional options to configure how the dynamic prototype operates\r\n */\r\nfunction dynamicProto(theClass, target, delegateFunc, options) {\r\n    // Make sure that the passed theClass argument looks correct\r\n    if (!_hasOwnProperty(theClass, Prototype)) {\r\n        _throwTypeError(\"theClass is an invalid class definition.\");\r\n    }\r\n    // Quick check to make sure that the passed theClass argument looks correct (this is a common copy/paste error)\r\n    var classProto = theClass[Prototype];\r\n    if (!_checkPrototype(classProto, target)) {\r\n        _throwTypeError(\"[\" + _getObjName(theClass) + \"] is not in class hierarchy of [\" + _getObjName(target) + \"]\");\r\n    }\r\n    var className = null;\r\n    if (_hasOwnProperty(classProto, DynClassName)) {\r\n        // Only grab the class name if it's defined on this prototype (i.e. don't walk the prototype chain)\r\n        className = classProto[DynClassName];\r\n    }\r\n    else {\r\n        // As not all browser support name on the prototype creating a unique dynamic one if we have not already\r\n        // assigned one, so we can use a simple string as the lookup rather than an object for the dynamic instance\r\n        // function table lookup.\r\n        className = DynClassNamePrefix + _getObjName(theClass, \"_\") + \"$\" + _dynamicNames;\r\n        _dynamicNames++;\r\n        classProto[DynClassName] = className;\r\n    }\r\n    var perfOptions = dynamicProto[DynProtoDefaultOptions];\r\n    var useBaseInst = !!perfOptions[strUseBaseInst];\r\n    if (useBaseInst && options && options[strUseBaseInst] !== undefined) {\r\n        useBaseInst = !!options[strUseBaseInst];\r\n    }\r\n    // Get the current instance functions\r\n    var instFuncs = _getInstanceFuncs(target);\r\n    // Get all of the functions for any base instance (before they are potentially overridden)\r\n    var baseFuncs = _getBaseFuncs(classProto, target, instFuncs, useBaseInst);\r\n    // Execute the delegate passing in both the current target \"this\" and \"base\" function references\r\n    // Note casting the same type as we don't actually have the base class here and this will provide some intellisense support\r\n    delegateFunc(target, baseFuncs);\r\n    // Don't allow setting instance functions for older IE instances\r\n    var setInstanceFunc = !!_objGetPrototypeOf && !!perfOptions[strSetInstFuncs];\r\n    if (setInstanceFunc && options) {\r\n        setInstanceFunc = !!options[strSetInstFuncs];\r\n    }\r\n    // Populate the Prototype for any overridden instance functions\r\n    _populatePrototype(classProto, className, target, instFuncs, setInstanceFunc !== false);\r\n}\r\n/**\r\n * Exposes the default global options to allow global configuration, if the global values are disabled these will override\r\n * any passed values. This is primarily exposed to support unit-testing without the need for individual classes to expose\r\n * their internal usage of dynamic proto.\r\n */\r\nvar perfDefaults = {\r\n    setInstFuncs: true,\r\n    useBaseInst: true\r\n};\r\n// And expose for testing\r\ndynamicProto[DynProtoDefaultOptions] = perfDefaults;\n\nexport default dynamicProto;\n//# sourceMappingURL=dynamicproto-js.js.map\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { _InternalMessageId, LoggingSeverity } from \"../JavaScriptSDK.Enums/LoggingEnums\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { hasJSON, getJSON, getConsole } from \"./EnvUtils\";\r\nimport dynamicProto from '@microsoft/dynamicproto-js';\r\n/**\r\n * For user non actionable traces use AI Internal prefix.\r\n */\r\nvar AiNonUserActionablePrefix = \"AI (Internal): \";\r\n/**\r\n * Prefix of the traces in portal.\r\n */\r\nvar AiUserActionablePrefix = \"AI: \";\r\n/**\r\n *  Session storage key for the prefix for the key indicating message type already logged\r\n */\r\nvar AIInternalMessagePrefix = \"AITR_\";\r\nfunction _sanitizeDiagnosticText(text) {\r\n    if (text) {\r\n        return \"\\\"\" + text.replace(/\\\"/g, \"\") + \"\\\"\";\r\n    }\r\n    return \"\";\r\n}\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var _self = this;\r\n        _self.messageId = msgId;\r\n        _self.message =\r\n            (isUserAct ? AiUserActionablePrefix : AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var strProps = \"\";\r\n        if (hasJSON()) {\r\n            strProps = getJSON().stringify(properties);\r\n        }\r\n        var diagnosticText = (msg ? \" message:\" + _sanitizeDiagnosticText(msg) : \"\") +\r\n            (properties ? \" props:\" + _sanitizeDiagnosticText(strProps) : \"\");\r\n        _self.message += diagnosticText;\r\n    }\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        this.identifier = 'DiagnosticLogger';\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        var _messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        var _messageLogged = {};\r\n        dynamicProto(DiagnosticLogger, this, function (_self) {\r\n            var isNullOrUndefined = CoreUtils.isNullOrUndefined;\r\n            var isUndefined = CoreUtils.isUndefined;\r\n            var isFunction = CoreUtils.isFunction;\r\n            if (isNullOrUndefined(config)) {\r\n                config = {};\r\n            }\r\n            _self.consoleLoggingLevel = function () { return _getConfigValue('loggingLevelConsole', 0); };\r\n            _self.telemetryLoggingLevel = function () { return _getConfigValue('loggingLevelTelemetry', 1); };\r\n            _self.maxInternalMessageLimit = function () { return _getConfigValue('maxMessageLimit', 25); };\r\n            _self.enableDebugExceptions = function () { return _getConfigValue('enableDebugExceptions', false); };\r\n            /**\r\n             * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n             * @param severity {LoggingSeverity} - The severity of the log message\r\n             * @param message {_InternalLogMessage} - The log message.\r\n             */\r\n            _self.throwInternal = function (severity, msgId, msg, properties, isUserAct) {\r\n                if (isUserAct === void 0) { isUserAct = false; }\r\n                var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n                if (_self.enableDebugExceptions()) {\r\n                    throw message;\r\n                }\r\n                else {\r\n                    if (!isUndefined(message) && !!message) {\r\n                        if (!isUndefined(message.message)) {\r\n                            if (isUserAct) {\r\n                                // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                                var messageKey = +message.messageId;\r\n                                if (!_messageLogged[messageKey] && _self.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                                    _self.warnToConsole(message.message);\r\n                                    _messageLogged[messageKey] = true;\r\n                                }\r\n                            }\r\n                            else {\r\n                                // don't log internal AI traces in the console, unless the verbose logging is enabled\r\n                                if (_self.consoleLoggingLevel() >= LoggingSeverity.WARNING) {\r\n                                    _self.warnToConsole(message.message);\r\n                                }\r\n                            }\r\n                            _self.logInternalMessage(severity, message);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            /**\r\n             * This will write a warning to the console if possible\r\n             * @param message {string} - The warning message\r\n             */\r\n            _self.warnToConsole = function (message) {\r\n                var theConsole = getConsole();\r\n                if (!!theConsole) {\r\n                    var logFunc = 'log';\r\n                    if (theConsole.warn) {\r\n                        logFunc = 'warn';\r\n                    }\r\n                    if (isFunction(theConsole[logFunc])) {\r\n                        theConsole[logFunc](message);\r\n                    }\r\n                }\r\n            };\r\n            /**\r\n             * Resets the internal message count\r\n             */\r\n            _self.resetInternalMessageCount = function () {\r\n                _messageCount = 0;\r\n                _messageLogged = {};\r\n            };\r\n            /**\r\n             * Logs a message to the internal queue.\r\n             * @param severity {LoggingSeverity} - The severity of the log message\r\n             * @param message {_InternalLogMessage} - The message to log.\r\n             */\r\n            _self.logInternalMessage = function (severity, message) {\r\n                if (_areInternalMessagesThrottled()) {\r\n                    return;\r\n                }\r\n                // check if this message type was already logged for this session and if so, don't log it again\r\n                var logMessage = true;\r\n                var messageKey = AIInternalMessagePrefix + message.messageId;\r\n                // if the session storage is not available, limit to only one message type per page view\r\n                if (_messageLogged[messageKey]) {\r\n                    logMessage = false;\r\n                }\r\n                else {\r\n                    _messageLogged[messageKey] = true;\r\n                }\r\n                if (logMessage) {\r\n                    // Push the event in the internal queue\r\n                    if (severity <= _self.telemetryLoggingLevel()) {\r\n                        _self.queue.push(message);\r\n                        _messageCount++;\r\n                    }\r\n                    // When throttle limit reached, send a special event\r\n                    if (_messageCount === _self.maxInternalMessageLimit()) {\r\n                        var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                        var throttleMessage = new _InternalLogMessage(_InternalMessageId.MessageLimitPerPVExceeded, throttleLimitMessage, false);\r\n                        _self.queue.push(throttleMessage);\r\n                        _self.warnToConsole(throttleLimitMessage);\r\n                    }\r\n                }\r\n            };\r\n            function _getConfigValue(name, defValue) {\r\n                var value = config[name];\r\n                if (!isNullOrUndefined(value)) {\r\n                    return value;\r\n                }\r\n                return defValue;\r\n            }\r\n            function _areInternalMessagesThrottled() {\r\n                return _messageCount >= _self.maxInternalMessageLimit();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * When this is true the SDK will throw exceptions to aid in debugging.\r\n     */\r\n    DiagnosticLogger.prototype.enableDebugExceptions = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return false;\r\n    };\r\n    /**\r\n     * 0: OFF (default)\r\n     * 1: CRITICAL\r\n     * 2: >= WARNING\r\n     */\r\n    DiagnosticLogger.prototype.consoleLoggingLevel = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return 0;\r\n    };\r\n    /**\r\n     * 0: OFF\r\n     * 1: CRITICAL (default)\r\n     * 2: >= WARNING\r\n     */\r\n    DiagnosticLogger.prototype.telemetryLoggingLevel = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return 1;\r\n    };\r\n    /**\r\n     * The maximum number of internal messages allowed to be sent per page view\r\n     */\r\n    DiagnosticLogger.prototype.maxInternalMessageLimit = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return 25;\r\n    };\r\n    /**\r\n     * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The log message.\r\n     */\r\n    DiagnosticLogger.prototype.throwInternal = function (severity, msgId, msg, properties, isUserAct) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * This will write a warning to the console if possible\r\n     * @param message {string} - The warning message\r\n     */\r\n    DiagnosticLogger.prototype.warnToConsole = function (message) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * Resets the internal message count\r\n     */\r\n    DiagnosticLogger.prototype.resetInternalMessageCount = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * Logs a message to the internal queue.\r\n     * @param severity {LoggingSeverity} - The severity of the log message\r\n     * @param message {_InternalLogMessage} - The message to log.\r\n     */\r\n    DiagnosticLogger.prototype.logInternalMessage = function (severity, message) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\n//# sourceMappingURL=DiagnosticLogger.js.map","import dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nvar strExecutionContextKey = \"ctx\";\r\nvar PerfEvent = /** @class */ (function () {\r\n    function PerfEvent(name, payloadDetails, isAsync) {\r\n        var _self = this;\r\n        var accessorDefined = false;\r\n        _self.start = CoreUtils.dateNow();\r\n        _self.name = name;\r\n        _self.isAsync = isAsync;\r\n        _self.isChildEvt = function () { return false; };\r\n        if (CoreUtils.isFunction(payloadDetails)) {\r\n            // Create an accessor to minimize the potential performance impact of executing the payloadDetails callback\r\n            var theDetails_1;\r\n            accessorDefined = CoreUtils.objDefineAccessors(_self, 'payload', function () {\r\n                // Delay the execution of the payloadDetails until needed\r\n                if (!theDetails_1 && CoreUtils.isFunction(payloadDetails)) {\r\n                    theDetails_1 = payloadDetails();\r\n                    // clear it out now so the referenced objects can be garbage collected\r\n                    payloadDetails = null;\r\n                }\r\n                return theDetails_1;\r\n            });\r\n        }\r\n        _self.getCtx = function (key) {\r\n            if (key) {\r\n                // The parent and child links are located directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent.ParentContextKey || key === PerfEvent.ChildrenContextKey) {\r\n                    return _self[key];\r\n                }\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            }\r\n            return null;\r\n        };\r\n        _self.setCtx = function (key, value) {\r\n            if (key) {\r\n                // Put the parent and child links directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent.ParentContextKey) {\r\n                    // Simple assumption, if we are setting a parent then we must be a child\r\n                    if (!_self[key]) {\r\n                        _self.isChildEvt = function () { return true; };\r\n                    }\r\n                    _self[key] = value;\r\n                }\r\n                else if (key === PerfEvent.ChildrenContextKey) {\r\n                    _self[key] = value;\r\n                }\r\n                else {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            }\r\n        };\r\n        _self.complete = function () {\r\n            var childTime = 0;\r\n            var childEvts = _self.getCtx(PerfEvent.ChildrenContextKey);\r\n            if (CoreUtils.isArray(childEvts)) {\r\n                for (var lp = 0; lp < childEvts.length; lp++) {\r\n                    var childEvt = childEvts[lp];\r\n                    if (childEvt) {\r\n                        childTime += childEvt.time;\r\n                    }\r\n                }\r\n            }\r\n            _self.time = CoreUtils.dateNow() - _self.start;\r\n            _self.exTime = _self.time - childTime;\r\n            _self.complete = function () { };\r\n            if (!accessorDefined && CoreUtils.isFunction(payloadDetails)) {\r\n                // If we couldn't define the property set during complete -- to minimize the perf impact until after the time\r\n                _self.payload = payloadDetails();\r\n            }\r\n        };\r\n    }\r\n    PerfEvent.ParentContextKey = \"parent\";\r\n    PerfEvent.ChildrenContextKey = \"childEvts\";\r\n    return PerfEvent;\r\n}());\r\nexport { PerfEvent };\r\nvar PerfManager = /** @class */ (function () {\r\n    function PerfManager(manager) {\r\n        /**\r\n         * General bucket used for execution context set and retrieved via setCtx() and getCtx.\r\n         * Defined as private so it can be visualized via the DebugPlugin\r\n         */\r\n        this.ctx = {};\r\n        dynamicProto(PerfManager, this, function (_self) {\r\n            _self.create = function (src, payloadDetails, isAsync) {\r\n                // TODO (@MSNev): at some point we will want to add additional configuration to \"select\" which events to instrument\r\n                // for now this is just a simple do everything.\r\n                return new PerfEvent(src, payloadDetails, isAsync);\r\n            };\r\n            _self.fire = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    perfEvent.complete();\r\n                    if (manager) {\r\n                        manager.perfEvent(perfEvent);\r\n                    }\r\n                }\r\n            };\r\n            _self.setCtx = function (key, value) {\r\n                if (key) {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            };\r\n            _self.getCtx = function (key) {\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            };\r\n        });\r\n    }\r\n    /**\r\n     * Create a new event and start timing, the manager may return null/undefined to indicate that it does not\r\n     * want to monitor this source event.\r\n     * @param src The source name of the event\r\n     * @param payloadDetails - An optional callback function to fetch the payload details for the event.\r\n     * @param isAsync - Is the event occurring from a async event\r\n     */\r\n    PerfManager.prototype.create = function (src, payload, isAsync) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return null;\r\n    };\r\n    /**\r\n     * Complete the perfEvent and fire any notifications.\r\n     * @param perfEvent Fire the event which will also complete the passed event\r\n     */\r\n    PerfManager.prototype.fire = function (perfEvent) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * Set an execution context value\r\n     * @param key - The context key name\r\n     * @param value - The value\r\n     */\r\n    PerfManager.prototype.setCtx = function (key, value) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * Get the execution context value\r\n     * @param key - The context key\r\n     */\r\n    PerfManager.prototype.getCtx = function (key) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    return PerfManager;\r\n}());\r\nexport { PerfManager };\r\nvar doPerfActiveKey = \"CoreUtils.doPerf\";\r\n/**\r\n * Helper function to wrap a function with a perf event\r\n * @param mgrSource - The Performance Manager or a Performance provider source (may be null)\r\n * @param getSource - The callback to create the source name for the event (if perf monitoring is enabled)\r\n * @param func - The function to call and measure\r\n * @param details - A function to return the payload details\r\n * @param isAsync - Is the event / function being call asynchronously or synchronously\r\n */\r\nexport function doPerf(mgrSource, getSource, func, details, isAsync) {\r\n    if (mgrSource) {\r\n        var perfMgr = mgrSource;\r\n        if (perfMgr && CoreUtils.isFunction(perfMgr[\"getPerfMgr\"])) {\r\n            // Looks like a perf manager provider object\r\n            perfMgr = perfMgr[\"getPerfMgr\"]();\r\n        }\r\n        if (perfMgr) {\r\n            var perfEvt = void 0;\r\n            var currentActive = perfMgr.getCtx(doPerfActiveKey);\r\n            try {\r\n                perfEvt = perfMgr.create(getSource(), details, isAsync);\r\n                if (perfEvt) {\r\n                    if (currentActive && perfEvt.setCtx) {\r\n                        perfEvt.setCtx(PerfEvent.ParentContextKey, currentActive);\r\n                        if (currentActive.getCtx && currentActive.setCtx) {\r\n                            var children = currentActive.getCtx(PerfEvent.ChildrenContextKey);\r\n                            if (!children) {\r\n                                children = [];\r\n                                currentActive.setCtx(PerfEvent.ChildrenContextKey, children);\r\n                            }\r\n                            children.push(perfEvt);\r\n                        }\r\n                    }\r\n                    // Set this event as the active event now\r\n                    perfMgr.setCtx(doPerfActiveKey, perfEvt);\r\n                    return func(perfEvt);\r\n                }\r\n            }\r\n            catch (ex) {\r\n                if (perfEvt && perfEvt.setCtx) {\r\n                    perfEvt.setCtx(\"exception\", ex);\r\n                }\r\n            }\r\n            finally {\r\n                // fire the perf event\r\n                if (perfEvt) {\r\n                    perfMgr.fire(perfEvt);\r\n                }\r\n                // Reset the active event to the previous value\r\n                perfMgr.setCtx(doPerfActiveKey, currentActive);\r\n            }\r\n        }\r\n    }\r\n    return func();\r\n}\r\n//# sourceMappingURL=PerfManager.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { doPerf } from \"./PerfManager\";\r\nimport { LoggingSeverity, _InternalMessageId } from '../JavaScriptSDK.Enums/LoggingEnums';\r\nvar _isFunction = CoreUtils.isFunction;\r\nvar TelemetryPluginChain = /** @class */ (function () {\r\n    function TelemetryPluginChain(plugin, defItemCtx) {\r\n        var _self = this;\r\n        var _nextProxy = null;\r\n        var _hasProcessTelemetry = _isFunction(plugin.processTelemetry);\r\n        var _hasSetNext = _isFunction(plugin.setNextPlugin);\r\n        _self._hasRun = false;\r\n        _self.getPlugin = function () {\r\n            return plugin;\r\n        };\r\n        _self.getNext = function () {\r\n            return _nextProxy;\r\n        };\r\n        _self.setNext = function (nextPlugin) {\r\n            _nextProxy = nextPlugin;\r\n        };\r\n        _self.processTelemetry = function (env, itemCtx) {\r\n            if (!itemCtx) {\r\n                // Looks like a plugin didn't pass the (optional) context, so restore to the default\r\n                itemCtx = defItemCtx;\r\n            }\r\n            var identifier = plugin ? plugin.identifier : \"TelemetryPluginChain\";\r\n            doPerf(itemCtx ? itemCtx.core() : null, function () { return identifier + \":processTelemetry\"; }, function () {\r\n                if (plugin && _hasProcessTelemetry) {\r\n                    _self._hasRun = true;\r\n                    try {\r\n                        // Ensure that we keep the context in sync (for processNext()), just in case a plugin\r\n                        // doesn't calls processTelemetry() instead of itemContext.processNext() or some \r\n                        // other form of error occurred\r\n                        itemCtx.setNext(_nextProxy);\r\n                        if (_hasSetNext) {\r\n                            // Backward compatibility setting the next plugin on the instance\r\n                            plugin.setNextPlugin(_nextProxy);\r\n                        }\r\n                        // Set a flag on the next plugin so we know if it was attempted to be executed\r\n                        _nextProxy && (_nextProxy._hasRun = false);\r\n                        plugin.processTelemetry(env, itemCtx);\r\n                    }\r\n                    catch (error) {\r\n                        var hasRun = _nextProxy && _nextProxy._hasRun;\r\n                        if (!_nextProxy || !hasRun) {\r\n                            // Either we have no next plugin or the current one did not attempt to call the next plugin\r\n                            // Which means the current one is the root of the failure so log/report this failure\r\n                            itemCtx.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.PluginException, \"Plugin [\" + plugin.identifier + \"] failed during processTelemetry - \" + error);\r\n                        }\r\n                        if (_nextProxy && !hasRun) {\r\n                            // As part of the failure the current plugin did not attempt to call the next plugin in the cahin\r\n                            // So rather than leave the pipeline dead in the water we call the next plugin\r\n                            _nextProxy.processTelemetry(env, itemCtx);\r\n                        }\r\n                    }\r\n                }\r\n                else if (_nextProxy) {\r\n                    _self._hasRun = true;\r\n                    // The underlying plugin is either not defined or does not have a processTelemetry implementation\r\n                    // so we still want the next plugin to be executed.\r\n                    _nextProxy.processTelemetry(env, itemCtx);\r\n                }\r\n            }, function () { return ({ item: env }); }, !(env.sync));\r\n        };\r\n    }\r\n    return TelemetryPluginChain;\r\n}());\r\nexport { TelemetryPluginChain };\r\n//# sourceMappingURL=TelemetryPluginChain.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { DiagnosticLogger } from \"./DiagnosticLogger\";\r\nimport { TelemetryPluginChain } from \"./TelemetryPluginChain\";\r\nvar _isNullOrUndefined = CoreUtils.isNullOrUndefined;\r\n/**\r\n * Creates the instance execution chain for the plugins\r\n */\r\nfunction _createProxyChain(plugins, itemCtx) {\r\n    var proxies = [];\r\n    if (plugins && plugins.length > 0) {\r\n        // Create the proxies and wire up the next plugin chain\r\n        var lastProxy = null;\r\n        for (var idx = 0; idx < plugins.length; idx++) {\r\n            var thePlugin = plugins[idx];\r\n            if (thePlugin && CoreUtils.isFunction(thePlugin.processTelemetry)) {\r\n                // Only add plugins that are processors\r\n                var newProxy = new TelemetryPluginChain(thePlugin, itemCtx);\r\n                proxies.push(newProxy);\r\n                if (lastProxy) {\r\n                    // Set this new proxy as the next for the previous one\r\n                    lastProxy.setNext(newProxy);\r\n                }\r\n                lastProxy = newProxy;\r\n            }\r\n        }\r\n    }\r\n    return proxies.length > 0 ? proxies[0] : null;\r\n}\r\nfunction _copyProxyChain(proxy, itemCtx, startAt) {\r\n    var plugins = [];\r\n    var add = startAt ? false : true;\r\n    if (proxy) {\r\n        while (proxy) {\r\n            var thePlugin = proxy.getPlugin();\r\n            if (add || thePlugin === startAt) {\r\n                add = true;\r\n                plugins.push(thePlugin);\r\n            }\r\n            proxy = proxy.getNext();\r\n        }\r\n    }\r\n    if (!add) {\r\n        plugins.push(startAt);\r\n    }\r\n    return _createProxyChain(plugins, itemCtx);\r\n}\r\nfunction _copyPluginChain(srcPlugins, itemCtx, startAt) {\r\n    var plugins = srcPlugins;\r\n    var add = false;\r\n    if (startAt && srcPlugins) {\r\n        plugins = [];\r\n        CoreUtils.arrForEach(srcPlugins, function (thePlugin) {\r\n            if (add || thePlugin === startAt) {\r\n                add = true;\r\n                plugins.push(thePlugin);\r\n            }\r\n        });\r\n    }\r\n    if (startAt && !add) {\r\n        if (!plugins) {\r\n            plugins = [];\r\n        }\r\n        plugins.push(startAt);\r\n    }\r\n    return _createProxyChain(plugins, itemCtx);\r\n}\r\nvar ProcessTelemetryContext = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n     * @param plugins - The plugin instances that will be executed\r\n     * @param config - The current config\r\n     * @param core - The current core instance\r\n     */\r\n    function ProcessTelemetryContext(plugins, config, core, startAt) {\r\n        var _self = this;\r\n        var _nextProxy = null; // Null == No next plugin\r\n        // There is no next element (null) vs not defined (undefined)\r\n        if (startAt !== null) {\r\n            if (plugins && CoreUtils.isFunction(plugins.getPlugin)) {\r\n                // We have a proxy chain object\r\n                _nextProxy = _copyProxyChain(plugins, _self, startAt || plugins.getPlugin());\r\n            }\r\n            else {\r\n                // We just have an array\r\n                if (startAt) {\r\n                    _nextProxy = _copyPluginChain(plugins, _self, startAt);\r\n                }\r\n                else if (CoreUtils.isUndefined(startAt)) {\r\n                    // Undefined means copy the existing chain\r\n                    _nextProxy = _createProxyChain(plugins, _self);\r\n                }\r\n            }\r\n        }\r\n        _self.core = function () {\r\n            return core;\r\n        };\r\n        _self.diagLog = function () {\r\n            var logger = (core || {}).logger;\r\n            if (!logger) {\r\n                // Fallback so we always have a logger\r\n                logger = new DiagnosticLogger(config || {});\r\n            }\r\n            return logger;\r\n        };\r\n        _self.getCfg = function () {\r\n            return config;\r\n        };\r\n        _self.getExtCfg = function (identifier, defaultValue) {\r\n            if (defaultValue === void 0) { defaultValue = {}; }\r\n            var theConfig;\r\n            if (config) {\r\n                var extConfig = config.extensionConfig;\r\n                if (extConfig && identifier) {\r\n                    theConfig = extConfig[identifier];\r\n                }\r\n            }\r\n            return (theConfig ? theConfig : defaultValue);\r\n        };\r\n        _self.getConfig = function (identifier, field, defaultValue) {\r\n            if (defaultValue === void 0) { defaultValue = false; }\r\n            var theValue;\r\n            var extConfig = _self.getExtCfg(identifier, null);\r\n            if (extConfig && !_isNullOrUndefined(extConfig[field])) {\r\n                theValue = extConfig[field];\r\n            }\r\n            else if (config && !_isNullOrUndefined(config[field])) {\r\n                theValue = config[field];\r\n            }\r\n            return !_isNullOrUndefined(theValue) ? theValue : defaultValue;\r\n        };\r\n        _self.hasNext = function () {\r\n            return _nextProxy != null;\r\n        };\r\n        _self.getNext = function () {\r\n            return _nextProxy;\r\n        };\r\n        _self.setNext = function (nextPlugin) {\r\n            _nextProxy = nextPlugin;\r\n        };\r\n        _self.processNext = function (env) {\r\n            var nextPlugin = _nextProxy;\r\n            if (nextPlugin) {\r\n                // Automatically move to the next plugin\r\n                _nextProxy = nextPlugin.getNext();\r\n                nextPlugin.processTelemetry(env, _self);\r\n            }\r\n        };\r\n        _self.createNew = function (plugins, startAt) {\r\n            if (plugins === void 0) { plugins = null; }\r\n            return new ProcessTelemetryContext(plugins || _nextProxy, config, core, startAt);\r\n        };\r\n    }\r\n    return ProcessTelemetryContext;\r\n}());\r\nexport { ProcessTelemetryContext };\r\n//# sourceMappingURL=ProcessTelemetryContext.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { ProcessTelemetryContext } from './ProcessTelemetryContext';\r\nvar _isFunction = CoreUtils.isFunction;\r\nvar getPlugin = \"getPlugin\";\r\n/**\r\n * BaseTelemetryPlugin provides a basic implementation of the ITelemetryPlugin interface so that plugins\r\n * can avoid implementation the same set of boiler plate code as well as provide a base\r\n * implementation so that new default implementations can be added without breaking all plugins.\r\n */\r\nvar BaseTelemetryPlugin = /** @class */ (function () {\r\n    function BaseTelemetryPlugin() {\r\n        var _self = this;\r\n        var _isinitialized = false;\r\n        var _rootCtx = null; // Used as the root context, holding the current config and initialized core\r\n        var _nextPlugin = null; // Used for backward compatibility where plugins don't call the main pipeline\r\n        _self.core = null;\r\n        _self.diagLog = function (itemCtx) {\r\n            return _self._getTelCtx(itemCtx).diagLog();\r\n        };\r\n        _self.isInitialized = function () {\r\n            return _isinitialized;\r\n        };\r\n        _self.setInitialized = function (isInitialized) {\r\n            _isinitialized = isInitialized;\r\n        };\r\n        // _self.getNextPlugin = () => DO NOT IMPLEMENT\r\n        // Sub-classes of this base class *should* not be relying on this value and instead\r\n        // should use processNext() function. If you require access to the plugin use the\r\n        // IProcessTelemetryContext.getNext().getPlugin() while in the pipeline, Note getNext() may return null.\r\n        _self.setNextPlugin = function (next) {\r\n            _nextPlugin = next;\r\n        };\r\n        _self.processNext = function (env, itemCtx) {\r\n            if (itemCtx) {\r\n                // Normal core execution sequence\r\n                itemCtx.processNext(env);\r\n            }\r\n            else if (_nextPlugin && _isFunction(_nextPlugin.processTelemetry)) {\r\n                // Looks like backward compatibility or out of band processing. And as it looks \r\n                // like a ITelemetryPlugin or ITelemetryPluginChain, just call processTelemetry\r\n                _nextPlugin.processTelemetry(env, null);\r\n            }\r\n        };\r\n        _self._getTelCtx = function (currentCtx) {\r\n            if (currentCtx === void 0) { currentCtx = null; }\r\n            var itemCtx = currentCtx;\r\n            if (!itemCtx) {\r\n                var rootCtx = _rootCtx || new ProcessTelemetryContext(null, {}, _self.core);\r\n                // tslint:disable-next-line: prefer-conditional-expression\r\n                if (_nextPlugin && _nextPlugin[getPlugin]) {\r\n                    // Looks like a chain object\r\n                    itemCtx = rootCtx.createNew(null, _nextPlugin[getPlugin]);\r\n                }\r\n                else {\r\n                    itemCtx = rootCtx.createNew(null, _nextPlugin);\r\n                }\r\n            }\r\n            return itemCtx;\r\n        };\r\n        _self._baseTelInit = function (config, core, extensions, pluginChain) {\r\n            if (config) {\r\n                // Make sure the extensionConfig exists\r\n                config.extensionConfig = config.extensionConfig || [];\r\n            }\r\n            if (!pluginChain && core) {\r\n                // Get the first plugin from the core\r\n                pluginChain = core.getProcessTelContext().getNext();\r\n            }\r\n            var nextPlugin = _nextPlugin;\r\n            if (_nextPlugin && _nextPlugin[getPlugin]) {\r\n                // If it looks like a proxy/chain then get the plugin\r\n                nextPlugin = _nextPlugin[getPlugin]();\r\n            }\r\n            // Support legacy plugins where core was defined as a property\r\n            _self.core = core;\r\n            _rootCtx = new ProcessTelemetryContext(pluginChain, config, core, nextPlugin);\r\n            _isinitialized = true;\r\n        };\r\n    }\r\n    BaseTelemetryPlugin.prototype.initialize = function (config, core, extensions, pluginChain) {\r\n        this._baseTelInit(config, core, extensions, pluginChain);\r\n    };\r\n    return BaseTelemetryPlugin;\r\n}());\r\nexport { BaseTelemetryPlugin };\r\n//# sourceMappingURL=BaseTelemetryPlugin.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nvar _isFunction = CoreUtils.isFunction;\r\nvar processTelemetry = \"processTelemetry\";\r\nvar priority = \"priority\";\r\nvar setNextPlugin = \"setNextPlugin\";\r\nvar isInitialized = \"isInitialized\";\r\n/**\r\n * Initialize the queue of plugins\r\n * @param plugins - The array of plugins to initialize and setting of the next plugin\r\n * @param config The current config for the instance\r\n * @param core THe current core instance\r\n * @param extensions The extensions\r\n */\r\nexport function initializePlugins(processContext, extensions) {\r\n    // Set the next plugin and identified the uninitialized plugins\r\n    var initPlugins = [];\r\n    var lastPlugin = null;\r\n    var proxy = processContext.getNext();\r\n    while (proxy) {\r\n        var thePlugin = proxy.getPlugin();\r\n        if (thePlugin) {\r\n            if (lastPlugin &&\r\n                _isFunction(lastPlugin[setNextPlugin]) &&\r\n                _isFunction(thePlugin[processTelemetry])) {\r\n                // Set this plugin as the next for the previous one\r\n                lastPlugin[setNextPlugin](thePlugin);\r\n            }\r\n            if (!_isFunction(thePlugin[isInitialized]) || !thePlugin[isInitialized]()) {\r\n                initPlugins.push(thePlugin);\r\n            }\r\n            lastPlugin = thePlugin;\r\n            proxy = proxy.getNext();\r\n        }\r\n    }\r\n    // Now initiatilize the plugins\r\n    CoreUtils.arrForEach(initPlugins, function (thePlugin) {\r\n        thePlugin.initialize(processContext.getCfg(), processContext.core(), extensions, processContext.getNext());\r\n    });\r\n}\r\nexport function sortPlugins(plugins) {\r\n    // Sort by priority\r\n    return plugins.sort(function (extA, extB) {\r\n        var result = 0;\r\n        var bHasProcess = _isFunction(extB[processTelemetry]);\r\n        if (_isFunction(extA[processTelemetry])) {\r\n            result = bHasProcess ? extA[priority] - extB[priority] : 1;\r\n        }\r\n        else if (bHasProcess) {\r\n            result = -1;\r\n        }\r\n        return result;\r\n    });\r\n    // sort complete    \r\n}\r\n//# sourceMappingURL=TelemetryHelpers.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { BaseTelemetryPlugin } from './BaseTelemetryPlugin';\r\nimport { ProcessTelemetryContext } from './ProcessTelemetryContext';\r\nimport { initializePlugins } from './TelemetryHelpers';\r\nimport dynamicProto from '@microsoft/dynamicproto-js';\r\nvar ChannelControllerPriority = 500;\r\nvar ChannelValidationMessage = \"Channel has invalid priority\";\r\nvar _objDefineAccessors = CoreUtils.objDefineAccessors;\r\nvar ChannelController = /** @class */ (function (_super) {\r\n    __extends(ChannelController, _super);\r\n    function ChannelController() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = \"ChannelControllerPlugin\";\r\n        _this.priority = ChannelControllerPriority; // in reserved range 100 to 200\r\n        var _arrForEach = CoreUtils.arrForEach;\r\n        var _channelQueue;\r\n        dynamicProto(ChannelController, _this, function (_self, _base) {\r\n            _self.setNextPlugin = function (next) {\r\n                // The Channel controller is last in pipeline\r\n            };\r\n            _self.processTelemetry = function (item, itemCtx) {\r\n                if (_channelQueue) {\r\n                    _arrForEach(_channelQueue, function (queues) {\r\n                        // pass on to first item in queue\r\n                        if (queues.length > 0) {\r\n                            // Copying the item context as we could have mutiple chains that are executing asynchronously\r\n                            // and calling _getDefTelCtx as it's possible that the caller doesn't pass any context\r\n                            var chainCtx = _this._getTelCtx(itemCtx).createNew(queues);\r\n                            chainCtx.processNext(item);\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n            _self.getChannelControls = function () {\r\n                return _channelQueue;\r\n            };\r\n            _self.initialize = function (config, core, extensions) {\r\n                if (_self.isInitialized()) {\r\n                    // already initialized\r\n                    return;\r\n                }\r\n                _base.initialize(config, core, extensions);\r\n                if (config.isCookieUseDisabled) {\r\n                    CoreUtils.disableCookies();\r\n                }\r\n                _createChannelQueues((config || {}).channels, extensions);\r\n                // Initialize the Queues\r\n                _arrForEach(_channelQueue, function (queue) { return initializePlugins(new ProcessTelemetryContext(queue, config, core), extensions); });\r\n            };\r\n        });\r\n        function _checkQueuePriority(queue) {\r\n            _arrForEach(queue, function (queueItem) {\r\n                if (queueItem.priority < ChannelControllerPriority) {\r\n                    throw Error(ChannelValidationMessage + queueItem.identifier);\r\n                }\r\n            });\r\n        }\r\n        function _addChannelQueue(queue) {\r\n            if (queue && queue.length > 0) {\r\n                queue = queue.sort(function (a, b) {\r\n                    return a.priority - b.priority;\r\n                });\r\n                _checkQueuePriority(queue);\r\n                _channelQueue.push(queue);\r\n            }\r\n        }\r\n        function _createChannelQueues(channels, extensions) {\r\n            _channelQueue = [];\r\n            if (channels) {\r\n                // Add and sort the configuration channel queues\r\n                _arrForEach(channels, function (queue) { return _addChannelQueue(queue); });\r\n            }\r\n            if (extensions) {\r\n                // Create a new channel queue for any extensions with a priority > the ChannelControllerPriority\r\n                var extensionQueue_1 = [];\r\n                _arrForEach(extensions, function (plugin) {\r\n                    if (plugin.priority > ChannelControllerPriority) {\r\n                        extensionQueue_1.push(plugin);\r\n                    }\r\n                });\r\n                _addChannelQueue(extensionQueue_1);\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    ChannelController.prototype.processTelemetry = function (item, itemCtx) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    ;\r\n    ChannelController.prototype.getChannelControls = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return null;\r\n    };\r\n    ChannelController.prototype.initialize = function (config, core, extensions) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * Static constructor, attempt to create accessors\r\n     */\r\n    // tslint:disable-next-line\r\n    ChannelController._staticInit = (function () {\r\n        // Dynamically create get/set property accessors\r\n        _objDefineAccessors(ChannelController.prototype, \"ChannelControls\", ChannelController.prototype.getChannelControls);\r\n        _objDefineAccessors(ChannelController.prototype, \"channelQueue\", ChannelController.prototype.getChannelControls);\r\n    })();\r\n    return ChannelController;\r\n}(BaseTelemetryPlugin));\r\nexport { ChannelController };\r\n//# sourceMappingURL=ChannelController.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Type of storage to differentiate between local storage and session storage\r\n */\r\nexport var StorageType;\r\n(function (StorageType) {\r\n    StorageType[StorageType[\"LocalStorage\"] = 0] = \"LocalStorage\";\r\n    StorageType[StorageType[\"SessionStorage\"] = 1] = \"SessionStorage\";\r\n})(StorageType || (StorageType = {}));\r\n/**\r\n * Enum is used in aiDataContract to describe how fields are serialized.\r\n * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it's an array\r\n */\r\nexport var FieldType;\r\n(function (FieldType) {\r\n    FieldType[FieldType[\"Default\"] = 0] = \"Default\";\r\n    FieldType[FieldType[\"Required\"] = 1] = \"Required\";\r\n    FieldType[FieldType[\"Array\"] = 2] = \"Array\";\r\n    FieldType[FieldType[\"Hidden\"] = 4] = \"Hidden\";\r\n})(FieldType || (FieldType = {}));\r\n;\r\nexport var DistributedTracingModes;\r\n(function (DistributedTracingModes) {\r\n    /**\r\n     * (Default) Send Application Insights correlation headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"AI\"] = 0] = \"AI\";\r\n    /**\r\n     * Send both W3C Trace Context headers and back-compatibility Application Insights headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"AI_AND_W3C\"] = 1] = \"AI_AND_W3C\";\r\n    /**\r\n     * Send W3C Trace Context headers\r\n     */\r\n    DistributedTracingModes[DistributedTracingModes[\"W3C\"] = 2] = \"W3C\";\r\n})(DistributedTracingModes || (DistributedTracingModes = {}));\r\n//# sourceMappingURL=Enums.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { ChannelController } from './ChannelController';\r\nimport { ProcessTelemetryContext } from './ProcessTelemetryContext';\r\nimport { initializePlugins, sortPlugins } from './TelemetryHelpers';\r\nimport dynamicProto from '@microsoft/dynamicproto-js';\r\nimport { PerfManager } from \"./PerfManager\";\r\nvar validationError = \"Extensions must provide callback to initialize\";\r\nvar _arrForEach = CoreUtils.arrForEach;\r\nvar _isNullOrUndefined = CoreUtils.isNullOrUndefined;\r\nvar strNotificationManager = \"_notificationManager\";\r\nvar BaseCore = /** @class */ (function () {\r\n    function BaseCore() {\r\n        var _isInitialized = false;\r\n        var _eventQueue;\r\n        var _channelController;\r\n        var _notificationManager;\r\n        var _perfManager;\r\n        dynamicProto(BaseCore, this, function (_self) {\r\n            _self._extensions = new Array();\r\n            _channelController = new ChannelController();\r\n            _eventQueue = [];\r\n            _self.isInitialized = function () { return _isInitialized; };\r\n            _self.initialize = function (config, extensions, logger, notificationManager) {\r\n                // Make sure core is only initialized once\r\n                if (_self.isInitialized()) {\r\n                    throw Error(\"Core should not be initialized more than once\");\r\n                }\r\n                if (!config || _isNullOrUndefined(config.instrumentationKey)) {\r\n                    throw Error(\"Please provide instrumentation key\");\r\n                }\r\n                _notificationManager = notificationManager;\r\n                // For backward compatibility only\r\n                _self[strNotificationManager] = notificationManager;\r\n                _self.config = config || {};\r\n                config.extensions = _isNullOrUndefined(config.extensions) ? [] : config.extensions;\r\n                // add notification to the extensions in the config so other plugins can access it\r\n                var extConfig = config.extensionConfig = _isNullOrUndefined(config.extensionConfig) ? {} : config.extensionConfig;\r\n                extConfig.NotificationManager = notificationManager;\r\n                if (!logger) {\r\n                    logger = CoreUtils.objCreate({\r\n                        throwInternal: function (severity, msgId, msg, properties, isUserAct) {\r\n                            if (isUserAct === void 0) { isUserAct = false; }\r\n                        },\r\n                        warnToConsole: function (message) { },\r\n                        resetInternalMessageCount: function () { }\r\n                    });\r\n                }\r\n                _self.logger = logger;\r\n                // Concat all available extensions\r\n                var allExtensions = [];\r\n                allExtensions.push.apply(allExtensions, extensions.concat(config.extensions));\r\n                allExtensions = sortPlugins(allExtensions);\r\n                var coreExtensions = [];\r\n                var channelExtensions = [];\r\n                // Check if any two extensions have the same priority, then warn to console\r\n                // And extract the local extensions from the \r\n                var extPriorities = {};\r\n                // Extension validation\r\n                _arrForEach(allExtensions, function (ext) {\r\n                    if (_isNullOrUndefined(ext) || _isNullOrUndefined(ext.initialize)) {\r\n                        throw Error(validationError);\r\n                    }\r\n                    var extPriority = ext.priority;\r\n                    var identifier = ext.identifier;\r\n                    if (ext && extPriority) {\r\n                        if (!_isNullOrUndefined(extPriorities[extPriority])) {\r\n                            logger.warnToConsole(\"Two extensions have same priority #\" + extPriority + \" - \" + extPriorities[extPriority] + \", \" + identifier);\r\n                        }\r\n                        else {\r\n                            // set a value\r\n                            extPriorities[extPriority] = identifier;\r\n                        }\r\n                    }\r\n                    // Split extensions to core and channelController\r\n                    if (!extPriority || extPriority < _channelController.priority) {\r\n                        // Add to core extension that will be managed by BaseCore\r\n                        coreExtensions.push(ext);\r\n                    }\r\n                    else {\r\n                        // Add all other extensions to be managed by the channel controller\r\n                        channelExtensions.push(ext);\r\n                    }\r\n                });\r\n                // Validation complete\r\n                // Add the channelController to the complete extension collection and\r\n                // to the end of the core extensions\r\n                allExtensions.push(_channelController);\r\n                coreExtensions.push(_channelController);\r\n                // Sort the complete set of extensions by priority\r\n                allExtensions = sortPlugins(allExtensions);\r\n                _self._extensions = allExtensions;\r\n                // initialize channel controller first, this will initialize all channel plugins\r\n                initializePlugins(new ProcessTelemetryContext([_channelController], config, _self), allExtensions);\r\n                initializePlugins(new ProcessTelemetryContext(coreExtensions, config, _self), allExtensions);\r\n                // Now reset the extensions to just those being managed by Basecore\r\n                _self._extensions = coreExtensions;\r\n                if (_self.getTransmissionControls().length === 0) {\r\n                    throw new Error(\"No channels available\");\r\n                }\r\n                _isInitialized = true;\r\n                _self.releaseQueue();\r\n            };\r\n            _self.getTransmissionControls = function () {\r\n                return _channelController.getChannelControls();\r\n            };\r\n            _self.track = function (telemetryItem) {\r\n                if (!telemetryItem.iKey) {\r\n                    // setup default iKey if not passed in\r\n                    telemetryItem.iKey = _self.config.instrumentationKey;\r\n                }\r\n                if (!telemetryItem.time) {\r\n                    // add default timestamp if not passed in\r\n                    telemetryItem.time = CoreUtils.toISOString(new Date());\r\n                }\r\n                if (_isNullOrUndefined(telemetryItem.ver)) {\r\n                    // CommonSchema 4.0\r\n                    telemetryItem.ver = \"4.0\";\r\n                }\r\n                if (_self.isInitialized()) {\r\n                    // Process the telemetry plugin chain\r\n                    _self.getProcessTelContext().processNext(telemetryItem);\r\n                }\r\n                else {\r\n                    // Queue events until all extensions are initialized\r\n                    _eventQueue.push(telemetryItem);\r\n                }\r\n            };\r\n            _self.getProcessTelContext = function () {\r\n                var extensions = _self._extensions;\r\n                var thePlugins = extensions;\r\n                // invoke any common telemetry processors before sending through pipeline\r\n                if (!extensions || extensions.length === 0) {\r\n                    // Pass to Channel controller so data is sent to correct channel queues\r\n                    thePlugins = [_channelController];\r\n                }\r\n                return new ProcessTelemetryContext(thePlugins, _self.config, _self);\r\n            };\r\n            _self.getNotifyMgr = function () {\r\n                if (!_notificationManager) {\r\n                    // Create Dummy notification manager\r\n                    _notificationManager = CoreUtils.objCreate({\r\n                        addNotificationListener: function (listener) { },\r\n                        removeNotificationListener: function (listener) { },\r\n                        eventsSent: function (events) { },\r\n                        eventsDiscarded: function (events, reason) { },\r\n                        eventsSendRequest: function (sendReason, isAsync) { }\r\n                    });\r\n                    // For backward compatibility only\r\n                    _self[strNotificationManager] = _notificationManager;\r\n                }\r\n                return _notificationManager;\r\n            };\r\n            _self.getPerfMgr = function () {\r\n                if (!_perfManager) {\r\n                    if (_self.config && _self.config.enablePerfMgr) {\r\n                        _perfManager = new PerfManager(_self.getNotifyMgr());\r\n                    }\r\n                }\r\n                return _perfManager;\r\n            };\r\n            _self.setPerfMgr = function (perfMgr) {\r\n                _perfManager = perfMgr;\r\n            };\r\n            _self.eventCnt = function () {\r\n                return _eventQueue.length;\r\n            };\r\n            _self.releaseQueue = function () {\r\n                if (_eventQueue.length > 0) {\r\n                    _arrForEach(_eventQueue, function (event) {\r\n                        _self.getProcessTelContext().processNext(event);\r\n                    });\r\n                    _eventQueue = [];\r\n                }\r\n            };\r\n        });\r\n    }\r\n    BaseCore.prototype.initialize = function (config, extensions, logger, notificationManager) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    BaseCore.prototype.getTransmissionControls = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return null;\r\n    };\r\n    BaseCore.prototype.track = function (telemetryItem) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    BaseCore.prototype.getProcessTelContext = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return null;\r\n    };\r\n    BaseCore.prototype.getNotifyMgr = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return null;\r\n    };\r\n    BaseCore.prototype.getPerfMgr = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return null;\r\n    };\r\n    BaseCore.prototype.setPerfMgr = function (perfMgr) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    BaseCore.prototype.eventCnt = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return 0;\r\n    };\r\n    BaseCore.prototype.releaseQueue = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    return BaseCore;\r\n}());\r\nexport { BaseCore };\r\n//# sourceMappingURL=BaseCore.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * The EventsDiscardedReason enumeration contains a set of values that specify the reason for discarding an event.\r\n */\r\nexport var EventsDiscardedReason = {\r\n    /**\r\n     * Unknown.\r\n     */\r\n    Unknown: 0,\r\n    /**\r\n     * Status set to non-retryable.\r\n     */\r\n    NonRetryableStatus: 1,\r\n    /**\r\n     * The event is invalid.\r\n     */\r\n    InvalidEvent: 2,\r\n    /**\r\n     * The size of the event is too large.\r\n     */\r\n    SizeLimitExceeded: 3,\r\n    /**\r\n     * The server is not accepting events from this instrumentation key.\r\n     */\r\n    KillSwitch: 4,\r\n    /**\r\n     * The event queue is full.\r\n     */\r\n    QueueFull: 5\r\n};\r\n//# sourceMappingURL=EventsDiscardedReason.js.map","import { CoreUtils, } from \"./CoreUtils\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\n/**\r\n * Class to manage sending notifications to all the listeners.\r\n */\r\nvar NotificationManager = /** @class */ (function () {\r\n    function NotificationManager(config) {\r\n        this.listeners = [];\r\n        var arrForEach = CoreUtils.arrForEach;\r\n        var perfEvtsSendAll = !!(config || {}).perfEvtsSendAll;\r\n        dynamicProto(NotificationManager, this, function (_self) {\r\n            _self.addNotificationListener = function (listener) {\r\n                _self.listeners.push(listener);\r\n            };\r\n            /**\r\n             * Removes all instances of the listener.\r\n             * @param {INotificationListener} listener - AWTNotificationListener to remove.\r\n             */\r\n            _self.removeNotificationListener = function (listener) {\r\n                var index = CoreUtils.arrIndexOf(_self.listeners, listener);\r\n                while (index > -1) {\r\n                    _self.listeners.splice(index, 1);\r\n                    index = CoreUtils.arrIndexOf(_self.listeners, listener);\r\n                }\r\n            };\r\n            /**\r\n             * Notification for events sent.\r\n             * @param {ITelemetryItem[]} events - The array of events that have been sent.\r\n             */\r\n            _self.eventsSent = function (events) {\r\n                arrForEach(_self.listeners, function (listener) {\r\n                    if (listener && listener.eventsSent) {\r\n                        setTimeout(function () { return listener.eventsSent(events); }, 0);\r\n                    }\r\n                });\r\n            };\r\n            /**\r\n             * Notification for events being discarded.\r\n             * @param {ITelemetryItem[]} events - The array of events that have been discarded by the SDK.\r\n             * @param {number} reason           - The reason for which the SDK discarded the events. The EventsDiscardedReason\r\n             * constant should be used to check the different values.\r\n             */\r\n            _self.eventsDiscarded = function (events, reason) {\r\n                arrForEach(_self.listeners, function (listener) {\r\n                    if (listener && listener.eventsDiscarded) {\r\n                        setTimeout(function () { return listener.eventsDiscarded(events, reason); }, 0);\r\n                    }\r\n                });\r\n            };\r\n            /**\r\n             * [Optional] A function called when the events have been requested to be sent to the sever.\r\n             * @param {number} sendReason - The reason why the event batch is being sent.\r\n             * @param {boolean} isAsync   - A flag which identifies whether the requests are being sent in an async or sync manner.\r\n             */\r\n            _self.eventsSendRequest = function (sendReason, isAsync) {\r\n                arrForEach(_self.listeners, function (listener) {\r\n                    if (listener && listener.eventsSendRequest) {\r\n                        if (isAsync) {\r\n                            setTimeout(function () { return listener.eventsSendRequest(sendReason, isAsync); }, 0);\r\n                        }\r\n                        else {\r\n                            try {\r\n                                listener.eventsSendRequest(sendReason, isAsync);\r\n                            }\r\n                            catch (e) {\r\n                                // Catch errors to ensure we don't block sending the requests\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n            _self.perfEvent = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    // Send all events or only parent events\r\n                    if (perfEvtsSendAll || !perfEvent.isChildEvt()) {\r\n                        arrForEach(_self.listeners, function (listener) {\r\n                            if (listener && listener.perfEvent) {\r\n                                if (perfEvent.isAsync) {\r\n                                    setTimeout(function () { return listener.perfEvent(perfEvent); }, 0);\r\n                                }\r\n                                else {\r\n                                    try {\r\n                                        listener.perfEvent(perfEvent);\r\n                                    }\r\n                                    catch (e) {\r\n                                        // Catch errors to ensure we don't block sending the requests\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n        });\r\n    }\r\n    /**\r\n     * Adds a notification listener.\r\n     * @param {INotificationListener} listener - The notification listener to be added.\r\n     */\r\n    NotificationManager.prototype.addNotificationListener = function (listener) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - AWTNotificationListener to remove.\r\n     */\r\n    NotificationManager.prototype.removeNotificationListener = function (listener) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * Notification for events sent.\r\n     * @param {ITelemetryItem[]} events - The array of events that have been sent.\r\n     */\r\n    NotificationManager.prototype.eventsSent = function (events) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * Notification for events being discarded.\r\n     * @param {ITelemetryItem[]} events - The array of events that have been discarded by the SDK.\r\n     * @param {number} reason           - The reason for which the SDK discarded the events. The EventsDiscardedReason\r\n     * constant should be used to check the different values.\r\n     */\r\n    NotificationManager.prototype.eventsDiscarded = function (events, reason) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * [Optional] A function called when the events have been requested to be sent to the sever.\r\n     * @param {number} sendReason - The reason why the event batch is being sent.\r\n     * @param {boolean} isAsync   - A flag which identifies whether the requests are being sent in an async or sync manner.\r\n     */\r\n    NotificationManager.prototype.eventsSendRequest = function (sendReason, isAsync) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    return NotificationManager;\r\n}());\r\nexport { NotificationManager };\r\n//# sourceMappingURL=NotificationManager.js.map","import { BaseCore } from './BaseCore';\r\nimport { EventsDiscardedReason } from \"../JavaScriptSDK.Enums/EventsDiscardedReason\";\r\nimport { NotificationManager } from \"./NotificationManager\";\r\nimport { CoreUtils } from \"./CoreUtils\";\r\nimport { doPerf } from \"./PerfManager\";\r\nimport { _InternalLogMessage, DiagnosticLogger } from \"./DiagnosticLogger\";\r\nimport dynamicProto from '@microsoft/dynamicproto-js';\r\n\"use strict\";\r\nvar AppInsightsCore = /** @class */ (function (_super) {\r\n    __extends(AppInsightsCore, _super);\r\n    function AppInsightsCore() {\r\n        var _this = _super.call(this) || this;\r\n        dynamicProto(AppInsightsCore, _this, function (_self, _base) {\r\n            _self.initialize = function (config, extensions, logger, notificationManager) {\r\n                _base.initialize(config, extensions, logger || new DiagnosticLogger(config), notificationManager || new NotificationManager(config));\r\n            };\r\n            _self.track = function (telemetryItem) {\r\n                doPerf(_self.getPerfMgr(), function () { return \"AppInsightsCore:track\"; }, function () {\r\n                    if (telemetryItem === null) {\r\n                        _notifyInvalidEvent(telemetryItem);\r\n                        // throw error\r\n                        throw Error(\"Invalid telemetry item\");\r\n                    }\r\n                    // do basic validation before sending it through the pipeline\r\n                    _validateTelemetryItem(telemetryItem);\r\n                    _base.track(telemetryItem);\r\n                }, function () { return ({ item: telemetryItem }); }, !(telemetryItem.sync));\r\n            };\r\n            /**\r\n             * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n             * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n             * called.\r\n             * @param {INotificationListener} listener - An INotificationListener object.\r\n             */\r\n            _self.addNotificationListener = function (listener) {\r\n                var manager = _self.getNotifyMgr();\r\n                if (manager) {\r\n                    manager.addNotificationListener(listener);\r\n                }\r\n            };\r\n            /**\r\n             * Removes all instances of the listener.\r\n             * @param {INotificationListener} listener - INotificationListener to remove.\r\n             */\r\n            _self.removeNotificationListener = function (listener) {\r\n                var manager = _self.getNotifyMgr();\r\n                if (manager) {\r\n                    manager.removeNotificationListener(listener);\r\n                }\r\n            };\r\n            /**\r\n             * Periodically check logger.queue for\r\n             */\r\n            _self.pollInternalLogs = function (eventName) {\r\n                var interval = _self.config.diagnosticLogInterval;\r\n                if (!interval || !(interval > 0)) {\r\n                    interval = 10000;\r\n                }\r\n                return setInterval(function () {\r\n                    var queue = _self.logger ? _self.logger.queue : [];\r\n                    CoreUtils.arrForEach(queue, function (logMessage) {\r\n                        var item = {\r\n                            name: eventName ? eventName : \"InternalMessageId: \" + logMessage.messageId,\r\n                            iKey: _self.config.instrumentationKey,\r\n                            time: CoreUtils.toISOString(new Date()),\r\n                            baseType: _InternalLogMessage.dataType,\r\n                            baseData: { message: logMessage.message }\r\n                        };\r\n                        _self.track(item);\r\n                    });\r\n                    queue.length = 0;\r\n                }, interval);\r\n            };\r\n            function _validateTelemetryItem(telemetryItem) {\r\n                if (CoreUtils.isNullOrUndefined(telemetryItem.name)) {\r\n                    _notifyInvalidEvent(telemetryItem);\r\n                    throw Error(\"telemetry name required\");\r\n                }\r\n            }\r\n            function _notifyInvalidEvent(telemetryItem) {\r\n                var manager = _self.getNotifyMgr();\r\n                if (manager) {\r\n                    manager.eventsDiscarded([telemetryItem], EventsDiscardedReason.InvalidEvent);\r\n                }\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n    AppInsightsCore.prototype.initialize = function (config, extensions, logger, notificationManager) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    AppInsightsCore.prototype.track = function (telemetryItem) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n     * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n     * called.\r\n     * @param {INotificationListener} listener - An INotificationListener object.\r\n     */\r\n    AppInsightsCore.prototype.addNotificationListener = function (listener) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * Removes all instances of the listener.\r\n     * @param {INotificationListener} listener - INotificationListener to remove.\r\n     */\r\n    AppInsightsCore.prototype.removeNotificationListener = function (listener) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * Periodically check logger.queue for\r\n     */\r\n    AppInsightsCore.prototype.pollInternalLogs = function (eventName) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return 0;\r\n    };\r\n    return AppInsightsCore;\r\n}(BaseCore));\r\nexport { AppInsightsCore };\r\n//# sourceMappingURL=AppInsightsCore.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar RequestHeaders = /** @class */ (function () {\r\n    function RequestHeaders() {\r\n    }\r\n    /**\r\n     * Request-Context header\r\n     */\r\n    RequestHeaders.requestContextHeader = \"Request-Context\";\r\n    /**\r\n     * Target instrumentation header that is added to the response and retrieved by the\r\n     * calling application when processing incoming responses.\r\n     */\r\n    RequestHeaders.requestContextTargetKey = \"appId\";\r\n    /**\r\n     * Request-Context appId format\r\n     */\r\n    RequestHeaders.requestContextAppIdFormat = \"appId=cid-v1:\";\r\n    /**\r\n     * Request-Id header\r\n     */\r\n    RequestHeaders.requestIdHeader = \"Request-Id\";\r\n    /**\r\n     * W3C distributed tracing protocol header\r\n     */\r\n    RequestHeaders.traceParentHeader = \"traceparent\";\r\n    /**\r\n     * Sdk-Context header\r\n     * If this header passed with appId in content then appId will be returned back by the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeader = \"Sdk-Context\";\r\n    /**\r\n     * String to pass in header for requesting appId back from the backend.\r\n     */\r\n    RequestHeaders.sdkContextHeaderAppIdRequest = \"appId\";\r\n    RequestHeaders.requestContextHeaderLowerCase = \"request-context\";\r\n    return RequestHeaders;\r\n}());\r\nexport { RequestHeaders };\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { LoggingSeverity, _InternalMessageId, CoreUtils, hasJSON, getJSON } from '@microsoft/applicationinsights-core-js';\r\nvar DataSanitizer = /** @class */ (function () {\r\n    function DataSanitizer() {\r\n    }\r\n    DataSanitizer.sanitizeKeyAndAddUniqueness = function (logger, key, map) {\r\n        var origLength = key.length;\r\n        var field = DataSanitizer.sanitizeKey(logger, key);\r\n        // validation truncated the length.  We need to add uniqueness\r\n        if (field.length !== origLength) {\r\n            var i = 0;\r\n            var uniqueField = field;\r\n            while (map[uniqueField] !== undefined) {\r\n                i++;\r\n                uniqueField = field.substring(0, DataSanitizer.MAX_NAME_LENGTH - 3) + DataSanitizer.padNumber(i);\r\n            }\r\n            field = uniqueField;\r\n        }\r\n        return field;\r\n    };\r\n    DataSanitizer.sanitizeKey = function (logger, name) {\r\n        var nameTrunc;\r\n        if (name) {\r\n            // Remove any leading or trailing whitepace\r\n            name = DataSanitizer.trim(name.toString());\r\n            // truncate the string to 150 chars\r\n            if (name.length > DataSanitizer.MAX_NAME_LENGTH) {\r\n                nameTrunc = name.substring(0, DataSanitizer.MAX_NAME_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NameTooLong, \"name is too long.  It has been truncated to \" + DataSanitizer.MAX_NAME_LENGTH + \" characters.\", { name: name }, true);\r\n            }\r\n        }\r\n        return nameTrunc || name;\r\n    };\r\n    DataSanitizer.sanitizeString = function (logger, value, maxLength) {\r\n        if (maxLength === void 0) { maxLength = DataSanitizer.MAX_STRING_LENGTH; }\r\n        var valueTrunc;\r\n        if (value) {\r\n            maxLength = maxLength ? maxLength : DataSanitizer.MAX_STRING_LENGTH; // in case default parameters dont work\r\n            value = DataSanitizer.trim(value);\r\n            if (value.toString().length > maxLength) {\r\n                valueTrunc = value.toString().substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StringValueTooLong, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n            }\r\n        }\r\n        return valueTrunc || value;\r\n    };\r\n    DataSanitizer.sanitizeUrl = function (logger, url) {\r\n        return DataSanitizer.sanitizeInput(logger, url, DataSanitizer.MAX_URL_LENGTH, _InternalMessageId.UrlTooLong);\r\n    };\r\n    DataSanitizer.sanitizeMessage = function (logger, message) {\r\n        var messageTrunc;\r\n        if (message) {\r\n            if (message.length > DataSanitizer.MAX_MESSAGE_LENGTH) {\r\n                messageTrunc = message.substring(0, DataSanitizer.MAX_MESSAGE_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.MessageTruncated, \"message is too long, it has been truncated to \" + DataSanitizer.MAX_MESSAGE_LENGTH + \" characters.\", { message: message }, true);\r\n            }\r\n        }\r\n        return messageTrunc || message;\r\n    };\r\n    DataSanitizer.sanitizeException = function (logger, exception) {\r\n        var exceptionTrunc;\r\n        if (exception) {\r\n            if (exception.length > DataSanitizer.MAX_EXCEPTION_LENGTH) {\r\n                exceptionTrunc = exception.substring(0, DataSanitizer.MAX_EXCEPTION_LENGTH);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ExceptionTruncated, \"exception is too long, it has been truncated to \" + DataSanitizer.MAX_EXCEPTION_LENGTH + \" characters.\", { exception: exception }, true);\r\n            }\r\n        }\r\n        return exceptionTrunc || exception;\r\n    };\r\n    DataSanitizer.sanitizeProperties = function (logger, properties) {\r\n        if (properties) {\r\n            var tempProps = {};\r\n            for (var prop in properties) {\r\n                var value = properties[prop];\r\n                if (CoreUtils.isObject(value) && hasJSON()) {\r\n                    // Stringify any part C properties\r\n                    try {\r\n                        value = getJSON().stringify(value);\r\n                    }\r\n                    catch (e) {\r\n                        logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"custom property is not valid\", { exception: e }, true);\r\n                    }\r\n                }\r\n                value = DataSanitizer.sanitizeString(logger, value, DataSanitizer.MAX_PROPERTY_LENGTH);\r\n                prop = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, prop, tempProps);\r\n                tempProps[prop] = value;\r\n            }\r\n            properties = tempProps;\r\n        }\r\n        return properties;\r\n    };\r\n    DataSanitizer.sanitizeMeasurements = function (logger, measurements) {\r\n        if (measurements) {\r\n            var tempMeasurements = {};\r\n            for (var measure in measurements) {\r\n                var value = measurements[measure];\r\n                measure = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements);\r\n                tempMeasurements[measure] = value;\r\n            }\r\n            measurements = tempMeasurements;\r\n        }\r\n        return measurements;\r\n    };\r\n    DataSanitizer.sanitizeId = function (logger, id) {\r\n        return id ? DataSanitizer.sanitizeInput(logger, id, DataSanitizer.MAX_ID_LENGTH, _InternalMessageId.IdTooLong).toString() : id;\r\n    };\r\n    DataSanitizer.sanitizeInput = function (logger, input, maxLength, _msgId) {\r\n        var inputTrunc;\r\n        if (input) {\r\n            input = DataSanitizer.trim(input);\r\n            if (input.length > maxLength) {\r\n                inputTrunc = input.substring(0, maxLength);\r\n                logger.throwInternal(LoggingSeverity.WARNING, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n            }\r\n        }\r\n        return inputTrunc || input;\r\n    };\r\n    DataSanitizer.padNumber = function (num) {\r\n        var s = \"00\" + num;\r\n        return s.substr(s.length - 3);\r\n    };\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    DataSanitizer.trim = function (str) {\r\n        if (!CoreUtils.isString(str)) {\r\n            return str;\r\n        }\r\n        return str.replace(/^\\s+|\\s+$/g, \"\");\r\n    };\r\n    /**\r\n     * Max length allowed for custom names.\r\n     */\r\n    DataSanitizer.MAX_NAME_LENGTH = 150;\r\n    /**\r\n     * Max length allowed for Id field in page views.\r\n     */\r\n    DataSanitizer.MAX_ID_LENGTH = 128;\r\n    /**\r\n     * Max length allowed for custom values.\r\n     */\r\n    DataSanitizer.MAX_PROPERTY_LENGTH = 8192;\r\n    /**\r\n     * Max length allowed for names\r\n     */\r\n    DataSanitizer.MAX_STRING_LENGTH = 1024;\r\n    /**\r\n     * Max length allowed for url.\r\n     */\r\n    DataSanitizer.MAX_URL_LENGTH = 2048;\r\n    /**\r\n     * Max length allowed for messages.\r\n     */\r\n    DataSanitizer.MAX_MESSAGE_LENGTH = 32768;\r\n    /**\r\n     * Max length allowed for exceptions.\r\n     */\r\n    DataSanitizer.MAX_EXCEPTION_LENGTH = 32768;\r\n    return DataSanitizer;\r\n}());\r\nexport { DataSanitizer };\r\n//# sourceMappingURL=DataSanitizer.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { StorageType } from \"./Enums\";\r\nimport { CoreUtils, EventHelper, _InternalMessageId, LoggingSeverity, getGlobal, getGlobalInst, getWindow, getDocument, getNavigator, getPerformance, getLocation, hasJSON, getJSON, strPrototype } from \"@microsoft/applicationinsights-core-js\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nvar _navigator = getNavigator();\r\nvar _isString = CoreUtils.isString;\r\nvar _uaDisallowsSameSiteNone = null;\r\nfunction _endsWith(value, search) {\r\n    var len = value.length;\r\n    var start = len - search.length;\r\n    return value.substring(start >= 0 ? start : 0, len) === search;\r\n}\r\nvar Util = /** @class */ (function () {\r\n    function Util() {\r\n    }\r\n    Util.createDomEvent = function (eventName) {\r\n        var event = null;\r\n        if (CoreUtils.isFunction(Event)) {\r\n            event = new Event(eventName);\r\n        }\r\n        else {\r\n            var doc = getDocument();\r\n            if (doc && doc.createEvent) {\r\n                event = doc.createEvent(\"Event\");\r\n                event.initEvent(eventName, true, true);\r\n            }\r\n        }\r\n        return event;\r\n    };\r\n    /*\r\n     * Force the SDK not to use local and session storage\r\n    */\r\n    Util.disableStorage = function () {\r\n        Util._canUseLocalStorage = false;\r\n        Util._canUseSessionStorage = false;\r\n    };\r\n    /**\r\n     * Gets the localStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getLocalStorageObject = function () {\r\n        if (Util.canUseLocalStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n     * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n     * @param storageType Type of storage\r\n     * @return {Storage} Returns storage object verified that it is usable\r\n     */\r\n    Util._getVerifiedStorageObject = function (storageType) {\r\n        var storage = null;\r\n        var fail;\r\n        var uid;\r\n        try {\r\n            if (CoreUtils.isNullOrUndefined(getGlobal())) {\r\n                return null;\r\n            }\r\n            uid = new Date;\r\n            storage = storageType === StorageType.LocalStorage ? getGlobalInst(\"localStorage\") : getGlobalInst(\"sessionStorage\");\r\n            storage.setItem(uid.toString(), uid.toString());\r\n            fail = storage.getItem(uid.toString()) !== uid.toString();\r\n            storage.removeItem(uid.toString());\r\n            if (fail) {\r\n                storage = null;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            storage = null;\r\n        }\r\n        return storage;\r\n    };\r\n    /**\r\n     *  Checks if endpoint URL is application insights internal injestion service URL.\r\n     *\r\n     *  @param endpointUrl Endpoint URL to check.\r\n     *  @returns {boolean} True if if endpoint URL is application insights internal injestion service URL.\r\n     */\r\n    Util.isInternalApplicationInsightsEndpoint = function (endpointUrl) {\r\n        return Util._internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;\r\n    };\r\n    /**\r\n     *  Check if the browser supports local storage.\r\n     *\r\n     *  @returns {boolean} True if local storage is supported.\r\n     */\r\n    Util.canUseLocalStorage = function () {\r\n        if (Util._canUseLocalStorage === undefined) {\r\n            Util._canUseLocalStorage = !!Util._getVerifiedStorageObject(StorageType.LocalStorage);\r\n        }\r\n        return Util._canUseLocalStorage;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadLocalStorage, \"Browser failed read of local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setStorage = function (logger, name, data) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteLocalStorage, \"Browser failed write to local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's local storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeStorage = function (logger, name) {\r\n        var storage = Util._getLocalStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseLocalStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromLocalStorage, \"Browser failed removal of local storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Gets the sessionStorage object if available\r\n     * @return {Storage} - Returns the storage object if available else returns null\r\n     */\r\n    Util._getSessionStorageObject = function () {\r\n        if (Util.canUseSessionStorage()) {\r\n            return Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Check if the browser supports session storage.\r\n     *\r\n     *  @returns {boolean} True if session storage is supported.\r\n     */\r\n    Util.canUseSessionStorage = function () {\r\n        if (Util._canUseSessionStorage === undefined) {\r\n            Util._canUseSessionStorage = !!Util._getVerifiedStorageObject(StorageType.SessionStorage);\r\n        }\r\n        return Util._canUseSessionStorage;\r\n    };\r\n    /**\r\n     *  Gets the list of session storage keys\r\n     *\r\n     *  @returns {string[]} List of session storage keys\r\n     */\r\n    Util.getSessionStorageKeys = function () {\r\n        var keys = [];\r\n        if (Util.canUseSessionStorage()) {\r\n            for (var key in getGlobalInst(\"sessionStorage\")) {\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    };\r\n    /**\r\n     *  Get an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to get from storage\r\n     *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n     */\r\n    Util.getSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                return storage.getItem(name);\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotReadSessionStorage, \"Browser failed read of session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     *  Set the contents of an object in the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to set in storage\r\n     *  @param {string} data - the contents of the object to set in storage\r\n     *  @returns {boolean} True if the storage object could be written.\r\n     */\r\n    Util.setSessionStorage = function (logger, name, data) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.setItem(name, data);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserCannotWriteSessionStorage, \"Browser failed write to session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *  Remove an object from the browser's session storage\r\n     *\r\n     *  @param {string} name - the name of the object to remove from storage\r\n     *  @returns {boolean} True if the storage object could be removed.\r\n     */\r\n    Util.removeSessionStorage = function (logger, name) {\r\n        var storage = Util._getSessionStorageObject();\r\n        if (storage !== null) {\r\n            try {\r\n                storage.removeItem(name);\r\n                return true;\r\n            }\r\n            catch (e) {\r\n                Util._canUseSessionStorage = false;\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserFailedRemovalFromSessionStorage, \"Browser failed removal of session storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /*\r\n     * Force the SDK not to store and read any data from cookies\r\n     */\r\n    Util.disableCookies = function () {\r\n        CoreUtils.disableCookies();\r\n    };\r\n    /*\r\n     * helper method to tell if document.cookie object is available\r\n     */\r\n    Util.canUseCookies = function (logger) {\r\n        if (CoreUtils._canUseCookies === undefined) {\r\n            CoreUtils._canUseCookies = false;\r\n            try {\r\n                CoreUtils._canUseCookies = Util.document.cookie !== undefined;\r\n            }\r\n            catch (e) {\r\n                logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotAccessCookie, \"Cannot access document.cookie - \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n            }\r\n            ;\r\n        }\r\n        return CoreUtils._canUseCookies;\r\n    };\r\n    Util.disallowsSameSiteNone = function (userAgent) {\r\n        if (!_isString(userAgent)) {\r\n            return false;\r\n        }\r\n        // Cover all iOS based browsers here. This includes:\r\n        // - Safari on iOS 12 for iPhone, iPod Touch, iPad\r\n        // - WkWebview on iOS 12 for iPhone, iPod Touch, iPad\r\n        // - Chrome on iOS 12 for iPhone, iPod Touch, iPad\r\n        // All of which are broken by SameSite=None, because they use the iOS networking stack\r\n        if (userAgent.indexOf(\"CPU iPhone OS 12\") !== -1 || userAgent.indexOf(\"iPad; CPU OS 12\") !== -1) {\r\n            return true;\r\n        }\r\n        // Cover Mac OS X based browsers that use the Mac OS networking stack. This includes:\r\n        // - Safari on Mac OS X\r\n        // This does not include:\r\n        // - Internal browser on Mac OS X\r\n        // - Chrome on Mac OS X\r\n        // - Chromium on Mac OS X\r\n        // Because they do not use the Mac OS networking stack.\r\n        if (userAgent.indexOf(\"Macintosh; Intel Mac OS X 10_14\") !== -1 && userAgent.indexOf(\"Version/\") !== -1 && userAgent.indexOf(\"Safari\") !== -1) {\r\n            return true;\r\n        }\r\n        // Cover Mac OS X internal browsers that use the Mac OS networking stack. This includes:\r\n        // - Internal browser on Mac OS X\r\n        // This does not include:\r\n        // - Safari on Mac OS X\r\n        // - Chrome on Mac OS X\r\n        // - Chromium on Mac OS X\r\n        // Because they do not use the Mac OS networking stack.\r\n        if (userAgent.indexOf(\"Macintosh; Intel Mac OS X 10_14\") !== -1 && _endsWith(userAgent, \"AppleWebKit/605.1.15 (KHTML, like Gecko)\")) {\r\n            return true;\r\n        }\r\n        // Cover Chrome 50-69, because some versions are broken by SameSite=None, and none in this range require it.\r\n        // Note: this covers some pre-Chromium Edge versions, but pre-Chromim Edge does not require SameSite=None, so this is fine.\r\n        // Note: this regex applies to Windows, Mac OS X, and Linux, deliberately.\r\n        if (userAgent.indexOf(\"Chrome/5\") !== -1 || userAgent.indexOf(\"Chrome/6\") !== -1) {\r\n            return true;\r\n        }\r\n        // Unreal Engine runs Chromium 59, but does not advertise as Chrome until 4.23. Treat versions of Unreal\r\n        // that don't specify their Chrome version as lacking support for SameSite=None.\r\n        if (userAgent.indexOf(\"UnrealEngine\") !== -1 && userAgent.indexOf(\"Chrome\") === -1) {\r\n            return true;\r\n        }\r\n        // UCBrowser < 12.13.2 ignores Set-Cookie headers with SameSite=None\r\n        // NB: this rule isn't complete - you need regex to make a complete rule.\r\n        // See: https://www.chromium.org/updates/same-site/incompatible-clients\r\n        if (userAgent.indexOf(\"UCBrowser/12\") !== -1 || userAgent.indexOf(\"UCBrowser/11\") !== -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * helper method to set userId and sessionId cookie\r\n     */\r\n    Util.setCookie = function (logger, name, value, domain) {\r\n        if (Util.canUseCookies(logger)) {\r\n            var domainAttrib = \"\";\r\n            var secureAttrib = \"\";\r\n            if (domain) {\r\n                domainAttrib = \";domain=\" + domain;\r\n            }\r\n            var location_1 = getLocation();\r\n            if (location_1 && location_1.protocol === \"https:\") {\r\n                secureAttrib = \";secure\";\r\n                if (_uaDisallowsSameSiteNone === null) {\r\n                    _uaDisallowsSameSiteNone = Util.disallowsSameSiteNone((getNavigator() || {}).userAgent);\r\n                }\r\n                if (!_uaDisallowsSameSiteNone) {\r\n                    value = value + \";SameSite=None\"; // SameSite can only be set on secure pages\r\n                }\r\n            }\r\n            Util.document.cookie = name + \"=\" + value + domainAttrib + \";path=/\" + secureAttrib;\r\n        }\r\n    };\r\n    Util.stringToBoolOrDefault = function (str, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        if (str === undefined || str === null) {\r\n            return defaultValue;\r\n        }\r\n        return str.toString().toLowerCase() === \"true\";\r\n    };\r\n    /**\r\n     * helper method to access userId and sessionId cookie\r\n     */\r\n    Util.getCookie = function (logger, name) {\r\n        if (!Util.canUseCookies(logger)) {\r\n            return;\r\n        }\r\n        var value = \"\";\r\n        if (name && name.length) {\r\n            var cookieName = name + \"=\";\r\n            var cookies = Util.document.cookie.split(\";\");\r\n            for (var i = 0; i < cookies.length; i++) {\r\n                var cookie = cookies[i];\r\n                cookie = Util.trim(cookie);\r\n                if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                    value = cookie.substring(cookieName.length, cookies[i].length);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Deletes a cookie by setting it's expiration time in the past.\r\n     * @param name - The name of the cookie to delete.\r\n     */\r\n    Util.deleteCookie = function (logger, name) {\r\n        if (Util.canUseCookies(logger)) {\r\n            // Setting the expiration date in the past immediately removes the cookie\r\n            Util.document.cookie = name + \"=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n        }\r\n    };\r\n    /**\r\n     * generate a random 32bit number (-0x80000000..0x7FFFFFFF).\r\n     */\r\n    Util.random32 = function () {\r\n        return CoreUtils.random32(true);\r\n    };\r\n    /**\r\n     * Gets IE version returning the document emulation mode if we are running on IE, or null otherwise\r\n     */\r\n    Util.getIEVersion = function (userAgentStr) {\r\n        if (userAgentStr === void 0) { userAgentStr = null; }\r\n        var myNav = userAgentStr ? userAgentStr.toLowerCase() : (_navigator ? (_navigator.userAgent || \"\").toLowerCase() : \"\");\r\n        if (myNav.indexOf(\"msie\") !== -1) {\r\n            return parseInt(myNav.split(\"msie\")[1]);\r\n        }\r\n        else if (myNav.indexOf(\"trident/\")) {\r\n            var tridentVer = parseInt(myNav.split(\"trident/\")[1]);\r\n            if (tridentVer) {\r\n                return tridentVer + 4;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Convert ms to c# time span format\r\n     */\r\n    Util.msToTimeSpan = function (totalms) {\r\n        if (isNaN(totalms) || totalms < 0) {\r\n            totalms = 0;\r\n        }\r\n        totalms = Math.round(totalms);\r\n        var ms = \"\" + totalms % 1000;\r\n        var sec = \"\" + Math.floor(totalms / 1000) % 60;\r\n        var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n        var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n        var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n        ms = ms.length === 1 ? \"00\" + ms : ms.length === 2 ? \"0\" + ms : ms;\r\n        sec = sec.length < 2 ? \"0\" + sec : sec;\r\n        min = min.length < 2 ? \"0\" + min : min;\r\n        hour = hour.length < 2 ? \"0\" + hour : hour;\r\n        return (days > 0 ? days + \".\" : \"\") + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n    };\r\n    /**\r\n     * Checks if error has no meaningful data inside. Ususally such errors are received by window.onerror when error\r\n     * happens in a script from other domain (cross origin, CORS).\r\n     */\r\n    Util.isCrossOriginError = function (message, url, lineNumber, columnNumber, error) {\r\n        return (message === \"Script error.\" || message === \"Script error\") && !error;\r\n    };\r\n    /**\r\n     * Returns string representation of an object suitable for diagnostics logging.\r\n     */\r\n    Util.dump = function (object) {\r\n        var objectTypeDump = Object[strPrototype].toString.call(object);\r\n        var propertyValueDump = \"\";\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n        }\r\n        else if (hasJSON()) {\r\n            propertyValueDump = getJSON().stringify(object);\r\n        }\r\n        return objectTypeDump + propertyValueDump;\r\n    };\r\n    /**\r\n     * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n     */\r\n    Util.getExceptionName = function (object) {\r\n        var objectTypeDump = Object[strPrototype].toString.call(object);\r\n        if (objectTypeDump === \"[object Error]\") {\r\n            return object.name;\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Adds an event handler for the specified event to the window\r\n     * @param eventName {string} - The name of the event\r\n     * @param callback {any} - The callback function that needs to be executed for the given event\r\n     * @return {boolean} - true if the handler was successfully added\r\n     */\r\n    Util.addEventHandler = function (eventName, callback) {\r\n        return EventHelper.Attach(getWindow(), eventName, callback);\r\n    };\r\n    /**\r\n     * Tells if a browser supports a Beacon API\r\n     */\r\n    Util.IsBeaconApiSupported = function () {\r\n        return ('sendBeacon' in _navigator && _navigator.sendBeacon);\r\n    };\r\n    Util.getExtension = function (extensions, identifier) {\r\n        var extension = null;\r\n        var extIx = 0;\r\n        while (!extension && extIx < extensions.length) {\r\n            if (extensions[extIx] && extensions[extIx].identifier === identifier) {\r\n                extension = extensions[extIx];\r\n            }\r\n            extIx++;\r\n        }\r\n        return extension;\r\n    };\r\n    Util.document = getDocument() || {};\r\n    Util._canUseLocalStorage = undefined;\r\n    Util._canUseSessionStorage = undefined;\r\n    // listing only non-geo specific locations\r\n    Util._internalEndpoints = [\r\n        \"https://dc.services.visualstudio.com/v2/track\",\r\n        \"https://breeze.aimon.applicationinsights.io/v2/track\",\r\n        \"https://dc-int.services.visualstudio.com/v2/track\"\r\n    ];\r\n    Util.NotSpecified = \"not_specified\";\r\n    /**\r\n     * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n     */\r\n    Util.trim = CoreUtils.strTrim;\r\n    /**\r\n     * generate random id string\r\n     */\r\n    Util.newId = CoreUtils.newId;\r\n    /**\r\n     * generate W3C trace id\r\n     */\r\n    Util.generateW3CId = CoreUtils.generateW3CId;\r\n    /**\r\n     * Check if an object is of type Array\r\n     */\r\n    Util.isArray = CoreUtils.isArray;\r\n    /**\r\n     * Check if an object is of type Error\r\n     */\r\n    Util.isError = CoreUtils.isError;\r\n    /**\r\n     * Check if an object is of type Date\r\n     */\r\n    Util.isDate = CoreUtils.isDate;\r\n    // Keeping this name for backward compatibility (for now)\r\n    Util.toISOStringForIE8 = CoreUtils.toISOString;\r\n    return Util;\r\n}());\r\nexport { Util };\r\nvar UrlHelper = /** @class */ (function () {\r\n    function UrlHelper() {\r\n    }\r\n    UrlHelper.parseUrl = function (url) {\r\n        var anchorIdx = UrlHelper._htmlAnchorIdx;\r\n        var anchorCache = UrlHelper._htmlAnchorElement;\r\n        var tempAnchor = anchorCache[anchorIdx];\r\n        if (!UrlHelper.document.createElement) {\r\n            // Always create the temp instance if createElement is not available\r\n            tempAnchor = { host: UrlHelper.parseHost(url, true) };\r\n        }\r\n        else if (!anchorCache[anchorIdx]) {\r\n            // Create and cache the unattached anchor instance \r\n            tempAnchor = anchorCache[anchorIdx] = UrlHelper.document.createElement('a');\r\n        }\r\n        tempAnchor.href = url;\r\n        // Move the cache index forward\r\n        anchorIdx++;\r\n        if (anchorIdx >= anchorCache.length) {\r\n            anchorIdx = 0;\r\n        }\r\n        UrlHelper._htmlAnchorIdx = anchorIdx;\r\n        return tempAnchor;\r\n    };\r\n    UrlHelper.getAbsoluteUrl = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.href;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getPathName = function (url) {\r\n        var result;\r\n        var a = UrlHelper.parseUrl(url);\r\n        if (a) {\r\n            result = a.pathname;\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.getCompleteUrl = function (method, absoluteUrl) {\r\n        if (method) {\r\n            return method.toUpperCase() + \" \" + absoluteUrl;\r\n        }\r\n        else {\r\n            return absoluteUrl;\r\n        }\r\n    };\r\n    // Fallback method to grab host from url if document.createElement method is not available\r\n    UrlHelper.parseHost = function (url, inclPort) {\r\n        var fullHost = UrlHelper.parseFullHost(url, inclPort);\r\n        if (fullHost) {\r\n            var match = fullHost.match(/(www[0-9]?\\.)?(.[^/:]+)(\\:[\\d]+)?/i);\r\n            if (match != null && match.length > 3 && _isString(match[2]) && match[2].length > 0) {\r\n                return match[2] + (match[3] || \"\");\r\n            }\r\n        }\r\n        return fullHost;\r\n    };\r\n    /**\r\n     * Get the full host from the url, optionally including the port\r\n     */\r\n    UrlHelper.parseFullHost = function (url, inclPort) {\r\n        var result = null;\r\n        if (url) {\r\n            var match = url.match(/(\\w*):\\/\\/(.[^/:]+)(\\:[\\d]+)?/i);\r\n            if (match != null && match.length > 2 && _isString(match[2]) && match[2].length > 0) {\r\n                result = match[2] || \"\";\r\n                if (inclPort && match.length > 2) {\r\n                    var protocol = (match[1] || \"\").toLowerCase();\r\n                    var port = match[3] || \"\";\r\n                    // IE includes the standard port so pass it off if it's the same as the protocol\r\n                    if (protocol === \"http\" && port === \":80\") {\r\n                        port = \"\";\r\n                    }\r\n                    else if (protocol === \"https\" && port === \":443\") {\r\n                        port = \"\";\r\n                    }\r\n                    result += port;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    UrlHelper.document = getDocument() || {};\r\n    UrlHelper._htmlAnchorIdx = 0;\r\n    // Use an array of temporary values as it's possible for multiple calls to parseUrl() will be called with different URLs\r\n    // Using a cache size of 5 for now as it current depth usage is at least 2, so adding a minor buffer to handle future updates\r\n    UrlHelper._htmlAnchorElement = [null, null, null, null, null];\r\n    return UrlHelper;\r\n}());\r\nexport { UrlHelper };\r\nvar CorrelationIdHelper = /** @class */ (function () {\r\n    function CorrelationIdHelper() {\r\n    }\r\n    /**\r\n     * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers.\r\n     * Headers are always included if the current domain matches the request domain. If they do not match (CORS),\r\n     * they are regex-ed across correlationHeaderDomains and correlationHeaderExcludedDomains to determine if headers are included.\r\n     * Some environments don't give information on currentHost via window.location.host (e.g. Cordova). In these cases, the user must\r\n     * manually supply domains to include correlation headers on. Else, no headers will be included at all.\r\n     */\r\n    CorrelationIdHelper.canIncludeCorrelationHeader = function (config, requestUrl, currentHost) {\r\n        if (!requestUrl || (config && config.disableCorrelationHeaders)) {\r\n            return false;\r\n        }\r\n        if (config && config.correlationHeaderExcludePatterns) {\r\n            for (var i = 0; i < config.correlationHeaderExcludePatterns.length; i++) {\r\n                if (config.correlationHeaderExcludePatterns[i].test(requestUrl)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        var requestHost = UrlHelper.parseUrl(requestUrl).host.toLowerCase();\r\n        if (requestHost && (requestHost.indexOf(\":443\") !== -1 || requestHost.indexOf(\":80\") !== -1)) {\r\n            // [Bug #1260] IE can include the port even for http and https URLs so if present \r\n            // try and parse it to remove if it matches the default protocol port\r\n            requestHost = (UrlHelper.parseFullHost(requestUrl, true) || \"\").toLowerCase();\r\n        }\r\n        if ((!config || !config.enableCorsCorrelation) && requestHost !== currentHost) {\r\n            return false;\r\n        }\r\n        var includedDomains = config && config.correlationHeaderDomains;\r\n        if (includedDomains) {\r\n            var matchExists_1;\r\n            CoreUtils.arrForEach(includedDomains, function (domain) {\r\n                var regex = new RegExp(domain.toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n                matchExists_1 = matchExists_1 || regex.test(requestHost);\r\n            });\r\n            if (!matchExists_1) {\r\n                return false;\r\n            }\r\n        }\r\n        var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n        if (!excludedDomains || excludedDomains.length === 0) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < excludedDomains.length; i++) {\r\n            var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n            if (regex.test(requestHost)) {\r\n                return false;\r\n            }\r\n        }\r\n        // if we don't know anything about the requestHost, require the user to use included/excludedDomains.\r\n        // Previously we always returned false for a falsy requestHost\r\n        return requestHost && requestHost.length > 0;\r\n    };\r\n    /**\r\n     * Combines target appId and target role name from response header.\r\n     */\r\n    CorrelationIdHelper.getCorrelationContext = function (responseHeader) {\r\n        if (responseHeader) {\r\n            var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestHeaders.requestContextTargetKey);\r\n            if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                return correlationId;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets key from correlation response header\r\n     */\r\n    CorrelationIdHelper.getCorrelationContextValue = function (responseHeader, key) {\r\n        if (responseHeader) {\r\n            var keyValues = responseHeader.split(\",\");\r\n            for (var i = 0; i < keyValues.length; ++i) {\r\n                var keyValue = keyValues[i].split(\"=\");\r\n                if (keyValue.length === 2 && keyValue[0] === key) {\r\n                    return keyValue[1];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    CorrelationIdHelper.correlationIdPrefix = \"cid-v1:\";\r\n    return CorrelationIdHelper;\r\n}());\r\nexport { CorrelationIdHelper };\r\nvar AjaxHelper = /** @class */ (function () {\r\n    function AjaxHelper() {\r\n    }\r\n    AjaxHelper.ParseDependencyPath = function (logger, absoluteUrl, method, commandName) {\r\n        var target, name = commandName, data = commandName;\r\n        if (absoluteUrl && absoluteUrl.length > 0) {\r\n            var parsedUrl = UrlHelper.parseUrl(absoluteUrl);\r\n            target = parsedUrl.host;\r\n            if (!name) {\r\n                if (parsedUrl.pathname != null) {\r\n                    var pathName = (parsedUrl.pathname.length === 0) ? \"/\" : parsedUrl.pathname;\r\n                    if (pathName.charAt(0) !== '/') {\r\n                        pathName = \"/\" + pathName;\r\n                    }\r\n                    data = parsedUrl.pathname;\r\n                    name = DataSanitizer.sanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n                }\r\n                else {\r\n                    name = DataSanitizer.sanitizeString(logger, absoluteUrl);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            target = commandName;\r\n            name = commandName;\r\n        }\r\n        return {\r\n            target: target,\r\n            name: name,\r\n            data: data\r\n        };\r\n    };\r\n    return AjaxHelper;\r\n}());\r\nexport { AjaxHelper };\r\n/**\r\n * A utility class that helps getting time related parameters\r\n */\r\nvar DateTimeUtils = /** @class */ (function () {\r\n    function DateTimeUtils() {\r\n    }\r\n    /**\r\n     * Get the number of milliseconds since 1970/01/01 in local timezone\r\n     */\r\n    DateTimeUtils.Now = function () {\r\n        // returns the window or webworker performance object\r\n        var perf = getPerformance();\r\n        if (perf && perf.now && perf.timing) {\r\n            var now = perf.now() + perf.timing.navigationStart;\r\n            // Known issue with IE where this calculation can be negative, so if it is then ignore and fallback\r\n            if (now > 0) {\r\n                return now;\r\n            }\r\n        }\r\n        return new Date().getTime();\r\n    };\r\n    /**\r\n     * Gets duration between two timestamps\r\n     */\r\n    DateTimeUtils.GetDuration = function (start, end) {\r\n        var result = null;\r\n        if (start !== 0 && end !== 0 && !CoreUtils.isNullOrUndefined(start) && !CoreUtils.isNullOrUndefined(end)) {\r\n            result = end - start;\r\n        }\r\n        return result;\r\n    };\r\n    return DateTimeUtils;\r\n}());\r\nexport { DateTimeUtils };\r\n//# sourceMappingURL=Util.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * This is an internal property used to cause internal (reporting) requests to be ignored from reporting\r\n * additional telemetry, to handle polyfil implementations ALL urls used with a disabled request will\r\n * also be ignored for future requests even when this property is not provided.\r\n * Tagging as Ignore as this is an internal value and is not expected to be used outside of the SDK\r\n * @ignore\r\n */\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var SampleRate = \"sampleRate\";\r\nexport var ProcessLegacy = \"ProcessLegacy\";\r\nexport var HttpMethod = \"http.method\";\r\nexport var DEFAULT_BREEZE_ENDPOINT = \"https://dc.services.visualstudio.com\";\r\n//# sourceMappingURL=Constants.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { DEFAULT_BREEZE_ENDPOINT } from \"./Constants\";\r\nimport { CoreUtils } from \"@microsoft/applicationinsights-core-js\";\r\nvar ConnectionStringParser = /** @class */ (function () {\r\n    function ConnectionStringParser() {\r\n    }\r\n    ConnectionStringParser.parse = function (connectionString) {\r\n        if (!connectionString) {\r\n            return {};\r\n        }\r\n        var kvPairs = connectionString.split(ConnectionStringParser._FIELDS_SEPARATOR);\r\n        var result = CoreUtils.arrReduce(kvPairs, function (fields, kv) {\r\n            var kvParts = kv.split(ConnectionStringParser._FIELD_KEY_VALUE_SEPARATOR);\r\n            if (kvParts.length === 2) {\r\n                var key = kvParts[0].toLowerCase();\r\n                var value = kvParts[1];\r\n                fields[key] = value;\r\n            }\r\n            return fields;\r\n        }, {});\r\n        if (CoreUtils.objKeys(result).length > 0) {\r\n            // this is a valid connection string, so parse the results\r\n            if (result.endpointsuffix) {\r\n                // use endpoint suffix where overrides are not provided\r\n                var locationPrefix = result.location ? result.location + \".\" : \"\";\r\n                result.ingestionendpoint = result.ingestionendpoint || (\"https://\" + locationPrefix + \"dc.\" + result.endpointsuffix);\r\n            }\r\n            // apply the default endpoints\r\n            result.ingestionendpoint = result.ingestionendpoint || DEFAULT_BREEZE_ENDPOINT;\r\n        }\r\n        return result;\r\n    };\r\n    ConnectionStringParser._FIELDS_SEPARATOR = \";\";\r\n    ConnectionStringParser._FIELD_KEY_VALUE_SEPARATOR = \"=\";\r\n    return ConnectionStringParser;\r\n}());\r\nexport { ConnectionStringParser };\r\n//# sourceMappingURL=ConnectionStringParser.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Data struct to contain only C section with custom fields.\r\n */\r\nvar Base = /** @class */ (function () {\r\n    function Base() {\r\n    }\r\n    return Base;\r\n}());\r\nexport { Base };\r\n//# sourceMappingURL=Base.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Base } from './Base';\r\n/**\r\n * Data struct to contain both B and C sections.\r\n */\r\nvar Data = /** @class */ (function (_super) {\r\n    __extends(Data, _super);\r\n    function Data() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return Data;\r\n}(Base));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Envelope as AIEnvelope } from '../../Interfaces/Contracts/Generated/Envelope';\r\nimport { DataSanitizer } from './DataSanitizer';\r\nimport { FieldType } from '../../Enums';\r\nimport { Util } from '../../Util';\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar Envelope = /** @class */ (function (_super) {\r\n    __extends(Envelope, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = _super.call(this) || this;\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.data = data;\r\n        _this.time = CoreUtils.toISOString(new Date());\r\n        _this.aiDataContract = {\r\n            time: FieldType.Required,\r\n            iKey: FieldType.Required,\r\n            name: FieldType.Required,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate === 100) ? FieldType.Hidden : FieldType.Required;\r\n            },\r\n            tags: FieldType.Required,\r\n            data: FieldType.Required\r\n        };\r\n        return _this;\r\n    }\r\n    return Envelope;\r\n}(AIEnvelope));\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * System variables for a telemetry item.\r\n */\r\nvar Envelope = /** @class */ (function () {\r\n    function Envelope() {\r\n        this.ver = 1;\r\n        this.sampleRate = 100.0;\r\n        this.tags = {};\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * The abstract common base of all domains.\r\n */\r\nvar Domain = /** @class */ (function () {\r\n    function Domain() {\r\n    }\r\n    return Domain;\r\n}());\r\nexport { Domain };\r\n//# sourceMappingURL=Domain.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n */\r\nvar EventData = /** @class */ (function (_super) {\r\n    __extends(EventData, _super);\r\n    function EventData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return EventData;\r\n}(Domain));\r\nexport { EventData };\r\n//# sourceMappingURL=EventData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { EventData } from '../Interfaces/Contracts/Generated/EventData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Event = /** @class */ (function (_super) {\r\n    __extends(Event, _super);\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Required,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}(EventData));\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Stack frame information.\r\n */\r\nvar StackFrame = /** @class */ (function () {\r\n    function StackFrame() {\r\n    }\r\n    return StackFrame;\r\n}());\r\nexport { StackFrame };\r\n//# sourceMappingURL=StackFrame.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n */\r\nvar ExceptionData = /** @class */ (function (_super) {\r\n    __extends(ExceptionData, _super);\r\n    function ExceptionData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.exceptions = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return ExceptionData;\r\n}(Domain));\r\nexport { ExceptionData };\r\n//# sourceMappingURL=ExceptionData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n/**\r\n * Exception details of the exception in a chain.\r\n */\r\nvar ExceptionDetails = /** @class */ (function () {\r\n    function ExceptionDetails() {\r\n        this.hasFullStack = true;\r\n        this.parsedStack = [];\r\n    }\r\n    return ExceptionDetails;\r\n}());\r\nexport { ExceptionDetails };\r\n//# sourceMappingURL=ExceptionDetails.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { StackFrame } from '../Interfaces/Contracts/Generated/StackFrame';\r\nimport { ExceptionData } from '../Interfaces/Contracts/Generated/ExceptionData';\r\nimport { ExceptionDetails } from '../Interfaces/Contracts/Generated/ExceptionDetails';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar strError = \"error\";\r\nfunction _isExceptionDetailsInternal(value) {\r\n    return \"hasFullStack\" in value && \"typeName\" in value;\r\n}\r\nfunction _isExceptionInternal(value) {\r\n    return (\"ver\" in value && \"exceptions\" in value && \"properties\" in value);\r\n}\r\nfunction _getErrorType(errorType) {\r\n    // Gets the Error Type by passing the constructor (used to get the true type of native error object).\r\n    var typeName = \"\";\r\n    if (errorType) {\r\n        typeName = errorType.typeName || errorType.name || \"\";\r\n        if (!typeName) {\r\n            try {\r\n                var funcNameRegex = /function (.{1,})\\(/;\r\n                var results = (funcNameRegex).exec((errorType).constructor.toString());\r\n                typeName = (results && results.length > 1) ? results[1] : \"\";\r\n            }\r\n            catch (e) {\r\n                // Ignore\r\n            }\r\n        }\r\n    }\r\n    return typeName;\r\n}\r\nvar Exception = /** @class */ (function (_super) {\r\n    __extends(Exception, _super);\r\n    /**\r\n     * Constructs a new instance of the ExceptionTelemetry object\r\n     */\r\n    function Exception(logger, exception, properties, measurements, severityLevel, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            exceptions: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        if (!_isExceptionInternal(exception)) {\r\n            _this.exceptions = [new _ExceptionDetails(logger, exception)];\r\n            _this.properties = DataSanitizer.sanitizeProperties(logger, properties) || {};\r\n            _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n            if (severityLevel) {\r\n                _this.severityLevel = severityLevel;\r\n            }\r\n            if (id) {\r\n                _this.id = id;\r\n            }\r\n        }\r\n        else {\r\n            _this.exceptions = exception.exceptions;\r\n            _this.properties = exception.properties;\r\n            _this.measurements = exception.measurements;\r\n            if (exception.severityLevel) {\r\n                _this.severityLevel = exception.severityLevel;\r\n            }\r\n            if (exception.id) {\r\n                _this.id = exception.id;\r\n            }\r\n            if (exception.problemGroup) {\r\n                _this.problemGroup = exception.problemGroup;\r\n            }\r\n            // bool/int types, use isNullOrUndefined\r\n            _this.ver = 2; // TODO: handle the CS\"4.0\" ==> breeze 2 conversion in a better way\r\n            if (!CoreUtils.isNullOrUndefined(exception.isManual)) {\r\n                _this.isManual = exception.isManual;\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    Exception.CreateFromInterface = function (logger, exception, properties, measurements) {\r\n        var exceptions = exception.exceptions\r\n            && CoreUtils.arrMap(exception.exceptions, function (ex) { return _ExceptionDetails.CreateFromInterface(logger, ex); });\r\n        var exceptionData = new Exception(logger, __assign({}, exception, { exceptions: exceptions }), properties, measurements);\r\n        return exceptionData;\r\n    };\r\n    Exception.prototype.toInterface = function () {\r\n        var _a = this, exceptions = _a.exceptions, properties = _a.properties, measurements = _a.measurements, severityLevel = _a.severityLevel, ver = _a.ver, problemGroup = _a.problemGroup, id = _a.id, isManual = _a.isManual;\r\n        var exceptionDetailsInterface = exceptions instanceof Array\r\n            && CoreUtils.arrMap(exceptions, function (exception) { return exception.toInterface(); })\r\n            || undefined;\r\n        return {\r\n            ver: \"4.0\",\r\n            exceptions: exceptionDetailsInterface,\r\n            severityLevel: severityLevel,\r\n            properties: properties,\r\n            measurements: measurements,\r\n            problemGroup: problemGroup,\r\n            id: id,\r\n            isManual: isManual\r\n        };\r\n    };\r\n    /**\r\n     * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n     */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        return {\r\n            exceptions: [\r\n                {\r\n                    hasFullStack: true,\r\n                    message: message,\r\n                    stack: details,\r\n                    typeName: typeName\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    return Exception;\r\n}(ExceptionData));\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function (_super) {\r\n    __extends(_ExceptionDetails, _super);\r\n    function _ExceptionDetails(logger, exception) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Default,\r\n            outerId: FieldType.Default,\r\n            typeName: FieldType.Required,\r\n            message: FieldType.Required,\r\n            hasFullStack: FieldType.Default,\r\n            stack: FieldType.Default,\r\n            parsedStack: FieldType.Array\r\n        };\r\n        if (!_isExceptionDetailsInternal(exception)) {\r\n            var error = exception;\r\n            if (!Util.isError(error)) {\r\n                error = error[strError] || error.evt || error;\r\n            }\r\n            _this.typeName = DataSanitizer.sanitizeString(logger, _getErrorType(error)) || Util.NotSpecified;\r\n            _this.message = DataSanitizer.sanitizeMessage(logger, exception.message) || Util.NotSpecified;\r\n            var stack = exception.stack;\r\n            _this.parsedStack = _ExceptionDetails.parseStack(stack);\r\n            _this.stack = DataSanitizer.sanitizeException(logger, stack);\r\n            _this.hasFullStack = Util.isArray(_this.parsedStack) && _this.parsedStack.length > 0;\r\n        }\r\n        else {\r\n            _this.typeName = exception.typeName;\r\n            _this.message = exception.message;\r\n            _this.stack = exception.stack;\r\n            _this.parsedStack = exception.parsedStack;\r\n            _this.hasFullStack = exception.hasFullStack;\r\n        }\r\n        return _this;\r\n    }\r\n    _ExceptionDetails.prototype.toInterface = function () {\r\n        var parsedStack = this.parsedStack instanceof Array\r\n            && CoreUtils.arrMap(this.parsedStack, function (frame) { return frame.toInterface(); });\r\n        var exceptionDetailsInterface = {\r\n            id: this.id,\r\n            outerId: this.outerId,\r\n            typeName: this.typeName,\r\n            message: this.message,\r\n            hasFullStack: this.hasFullStack,\r\n            stack: this.stack,\r\n            parsedStack: parsedStack || undefined\r\n        };\r\n        return exceptionDetailsInterface;\r\n    };\r\n    _ExceptionDetails.CreateFromInterface = function (logger, exception) {\r\n        var parsedStack = (exception.parsedStack instanceof Array\r\n            && CoreUtils.arrMap(exception.parsedStack, function (frame) { return _StackFrame.CreateFromInterface(frame); }))\r\n            || exception.parsedStack;\r\n        var exceptionDetails = new _ExceptionDetails(logger, __assign({}, exception, { parsedStack: parsedStack }));\r\n        return exceptionDetails;\r\n    };\r\n    _ExceptionDetails.parseStack = function (stack) {\r\n        var parsedStack;\r\n        if (CoreUtils.isString(stack)) {\r\n            var frames_1 = stack.split('\\n');\r\n            parsedStack = [];\r\n            var level = 0;\r\n            var totalSizeInBytes = 0;\r\n            for (var i = 0; i <= frames_1.length; i++) {\r\n                var frame = frames_1[i];\r\n                if (_StackFrame.regex.test(frame)) {\r\n                    var parsedFrame = new _StackFrame(frames_1[i], level++);\r\n                    totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                    parsedStack.push(parsedFrame);\r\n                }\r\n            }\r\n            // DP Constraint - exception parsed stack must be < 32KB\r\n            // remove frames from the middle to meet the threshold\r\n            var exceptionParsedStackThreshold = 32 * 1024;\r\n            if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                var left = 0;\r\n                var right = parsedStack.length - 1;\r\n                var size = 0;\r\n                var acceptedLeft = left;\r\n                var acceptedRight = right;\r\n                while (left < right) {\r\n                    // check size\r\n                    var lSize = parsedStack[left].sizeInBytes;\r\n                    var rSize = parsedStack[right].sizeInBytes;\r\n                    size += lSize + rSize;\r\n                    if (size > exceptionParsedStackThreshold) {\r\n                        // remove extra frames from the middle\r\n                        var howMany = acceptedRight - acceptedLeft + 1;\r\n                        parsedStack.splice(acceptedLeft, howMany);\r\n                        break;\r\n                    }\r\n                    // update pointers\r\n                    acceptedLeft = left;\r\n                    acceptedRight = right;\r\n                    left++;\r\n                    right--;\r\n                }\r\n            }\r\n        }\r\n        return parsedStack;\r\n    };\r\n    return _ExceptionDetails;\r\n}(ExceptionDetails));\r\nexport { _ExceptionDetails };\r\nvar _StackFrame = /** @class */ (function (_super) {\r\n    __extends(_StackFrame, _super);\r\n    function _StackFrame(sourceFrame, level) {\r\n        var _this = _super.call(this) || this;\r\n        _this.sizeInBytes = 0;\r\n        _this.aiDataContract = {\r\n            level: FieldType.Required,\r\n            method: FieldType.Required,\r\n            assembly: FieldType.Default,\r\n            fileName: FieldType.Default,\r\n            line: FieldType.Default\r\n        };\r\n        // Not converting this to CoreUtils.isString() as typescript uses this logic to \"understand\" the different\r\n        // types for the 2 different code paths\r\n        if (typeof sourceFrame === \"string\") {\r\n            var frame = sourceFrame;\r\n            _this.level = level;\r\n            _this.method = \"<no_method>\";\r\n            _this.assembly = Util.trim(frame);\r\n            _this.fileName = \"\";\r\n            _this.line = 0;\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches.length >= 5) {\r\n                _this.method = Util.trim(matches[2]) || _this.method;\r\n                _this.fileName = Util.trim(matches[4]);\r\n                _this.line = parseInt(matches[5]) || 0;\r\n            }\r\n        }\r\n        else {\r\n            _this.level = sourceFrame.level;\r\n            _this.method = sourceFrame.method;\r\n            _this.assembly = sourceFrame.assembly;\r\n            _this.fileName = sourceFrame.fileName;\r\n            _this.line = sourceFrame.line;\r\n            _this.sizeInBytes = 0;\r\n        }\r\n        _this.sizeInBytes += _this.method.length;\r\n        _this.sizeInBytes += _this.fileName.length;\r\n        _this.sizeInBytes += _this.assembly.length;\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _this.sizeInBytes += _StackFrame.baseSize;\r\n        _this.sizeInBytes += _this.level.toString().length;\r\n        _this.sizeInBytes += _this.line.toString().length;\r\n        return _this;\r\n    }\r\n    _StackFrame.CreateFromInterface = function (frame) {\r\n        return new _StackFrame(frame, null /* level is available in frame interface */);\r\n    };\r\n    _StackFrame.prototype.toInterface = function () {\r\n        return {\r\n            level: this.level,\r\n            method: this.method,\r\n            assembly: this.assembly,\r\n            fileName: this.fileName,\r\n            line: this.line\r\n        };\r\n    };\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; // '{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}(StackFrame));\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Type of the metric data measurement.\r\n */\r\nexport var DataPointType;\r\n(function (DataPointType) {\r\n    DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n    DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n})(DataPointType || (DataPointType = {}));\r\n//# sourceMappingURL=DataPointType.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n */\r\nvar MetricData = /** @class */ (function (_super) {\r\n    __extends(MetricData, _super);\r\n    function MetricData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.metrics = [];\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return MetricData;\r\n}(Domain));\r\nexport { MetricData };\r\n//# sourceMappingURL=MetricData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { DataPointType } from './DataPointType';\r\n/**\r\n * Metric data single measurement.\r\n */\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        this.kind = DataPointType.Measurement;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\n/**\r\n * Defines the level of severity for the event.\r\n */\r\nexport var SeverityLevel;\r\n(function (SeverityLevel) {\r\n    SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n    SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n    SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n    SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n    SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n})(SeverityLevel || (SeverityLevel = {}));\r\n//# sourceMappingURL=SeverityLevel.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { DataPoint as AIDataPoint } from '../../Interfaces/Contracts/Generated/DataPoint';\r\nimport { FieldType } from '../../Enums';\r\nvar DataPoint = /** @class */ (function (_super) {\r\n    __extends(DataPoint, _super);\r\n    function DataPoint() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            name: FieldType.Required,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Required,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default\r\n        };\r\n        return _this;\r\n    }\r\n    return DataPoint;\r\n}(AIDataPoint));\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { MetricData } from '../Interfaces/Contracts/Generated/MetricData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { DataPoint } from './Common/DataPoint';\r\nimport { Util } from '../Util';\r\nvar Metric = /** @class */ (function (_super) {\r\n    __extends(Metric, _super);\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            metrics: FieldType.Required,\r\n            properties: FieldType.Default\r\n        };\r\n        var dataPoint = new DataPoint();\r\n        dataPoint.count = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        dataPoint.value = value;\r\n        _this.metrics = [dataPoint];\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}(MetricData));\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { EventData } from './EventData';\r\n/**\r\n * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n */\r\nvar PageViewData = /** @class */ (function (_super) {\r\n    __extends(PageViewData, _super);\r\n    function PageViewData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewData;\r\n}(EventData));\r\nexport { PageViewData };\r\n//# sourceMappingURL=PageViewData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { PageViewData } from '../Interfaces/Contracts/Generated/PageViewData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar PageView = /** @class */ (function (_super) {\r\n    __extends(PageView, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            id: FieldType.Default\r\n        };\r\n        _this.id = DataSanitizer.sanitizeId(logger, id);\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _this.duration = Util.msToTimeSpan(durationMs);\r\n        }\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}(PageViewData));\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util, AjaxHelper } from '../Util';\r\nimport { RemoteDependencyData as GeneratedRemoteDependencyData } from '../Interfaces/Contracts/Generated/RemoteDependencyData';\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    __extends(RemoteDependencyData, _super);\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, correlationContext, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            id: FieldType.Required,\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            resultCode: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            success: FieldType.Default,\r\n            data: FieldType.Default,\r\n            target: FieldType.Default,\r\n            type: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default,\r\n            kind: FieldType.Default,\r\n            value: FieldType.Default,\r\n            count: FieldType.Default,\r\n            min: FieldType.Default,\r\n            max: FieldType.Default,\r\n            stdDev: FieldType.Default,\r\n            dependencyKind: FieldType.Default,\r\n            dependencySource: FieldType.Default,\r\n            commandName: FieldType.Default,\r\n            dependencyTypeName: FieldType.Default\r\n        };\r\n        _this.id = id;\r\n        _this.duration = Util.msToTimeSpan(value);\r\n        _this.success = success;\r\n        _this.resultCode = resultCode + \"\";\r\n        _this.type = DataSanitizer.sanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelper.ParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _this.data = DataSanitizer.sanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _this.target = DataSanitizer.sanitizeString(logger, dependencyFields.target);\r\n        if (correlationContext) {\r\n            _this.target = _this.target + \" | \" + correlationContext;\r\n        }\r\n        _this.name = DataSanitizer.sanitizeString(logger, dependencyFields.name);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        return _this;\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}(GeneratedRemoteDependencyData));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n */\r\nvar RemoteDependencyData = /** @class */ (function (_super) {\r\n    __extends(RemoteDependencyData, _super);\r\n    function RemoteDependencyData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.success = true;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return RemoteDependencyData;\r\n}(Domain));\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { MessageData } from '../Interfaces/Contracts/Generated/MessageData';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { FieldType } from '../Enums';\r\nimport { Util } from '../Util';\r\nvar Trace = /** @class */ (function (_super) {\r\n    __extends(Trace, _super);\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties, measurements) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            message: FieldType.Required,\r\n            severityLevel: FieldType.Default,\r\n            properties: FieldType.Default\r\n        };\r\n        message = message || Util.NotSpecified;\r\n        _this.message = DataSanitizer.sanitizeMessage(logger, message);\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        if (severityLevel) {\r\n            _this.severityLevel = severityLevel;\r\n        }\r\n        return _this;\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}(MessageData));\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { Domain } from './Domain';\r\n/**\r\n * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n */\r\nvar MessageData = /** @class */ (function (_super) {\r\n    __extends(MessageData, _super);\r\n    function MessageData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return MessageData;\r\n}(Domain));\r\nexport { MessageData };\r\n//# sourceMappingURL=MessageData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { PageViewPerfData } from '../Interfaces/Contracts/Generated/PageViewPerfData';\r\nimport { FieldType } from '../Enums';\r\nimport { DataSanitizer } from './Common/DataSanitizer';\r\nimport { Util } from '../Util';\r\nvar PageViewPerformance = /** @class */ (function (_super) {\r\n    __extends(PageViewPerformance, _super);\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements, cs4BaseData) {\r\n        var _this = _super.call(this) || this;\r\n        _this.aiDataContract = {\r\n            ver: FieldType.Required,\r\n            name: FieldType.Default,\r\n            url: FieldType.Default,\r\n            duration: FieldType.Default,\r\n            perfTotal: FieldType.Default,\r\n            networkConnect: FieldType.Default,\r\n            sentRequest: FieldType.Default,\r\n            receivedResponse: FieldType.Default,\r\n            domProcessing: FieldType.Default,\r\n            properties: FieldType.Default,\r\n            measurements: FieldType.Default\r\n        };\r\n        _this.url = DataSanitizer.sanitizeUrl(logger, url);\r\n        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;\r\n        _this.properties = DataSanitizer.sanitizeProperties(logger, properties);\r\n        _this.measurements = DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n        if (cs4BaseData) {\r\n            _this.domProcessing = cs4BaseData.domProcessing;\r\n            _this.duration = cs4BaseData.duration;\r\n            _this.networkConnect = cs4BaseData.networkConnect;\r\n            _this.perfTotal = cs4BaseData.perfTotal;\r\n            _this.receivedResponse = cs4BaseData.receivedResponse;\r\n            _this.sentRequest = cs4BaseData.sentRequest;\r\n        }\r\n        return _this;\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}(PageViewPerfData));\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nimport { PageViewData } from './PageViewData';\r\n/**\r\n * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.\r\n */\r\nvar PageViewPerfData = /** @class */ (function (_super) {\r\n    __extends(PageViewPerfData, _super);\r\n    function PageViewPerfData() {\r\n        var _this = _super.call(this) || this;\r\n        _this.ver = 2;\r\n        _this.properties = {};\r\n        _this.measurements = {};\r\n        return _this;\r\n    }\r\n    return PageViewPerfData;\r\n}(PageViewData));\r\nexport { PageViewPerfData };\r\n//# sourceMappingURL=PageViewPerfData.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Data as AIData } from '../../Interfaces/Contracts/Generated/Data';\r\nimport { FieldType } from '../../Enums';\r\nvar Data = /** @class */ (function (_super) {\r\n    __extends(Data, _super);\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        _this.aiDataContract = {\r\n            baseType: FieldType.Required,\r\n            baseData: FieldType.Required\r\n        };\r\n        _this.baseType = baseType;\r\n        _this.baseData = data;\r\n        return _this;\r\n    }\r\n    return Data;\r\n}(AIData));\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar ConfigurationManager = /** @class */ (function () {\r\n    function ConfigurationManager() {\r\n    }\r\n    ConfigurationManager.getConfig = function (config, field, identifier, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var configValue;\r\n        if (identifier && config.extensionConfig && config.extensionConfig[identifier] && !CoreUtils.isNullOrUndefined(config.extensionConfig[identifier][field])) {\r\n            configValue = config.extensionConfig[identifier][field];\r\n        }\r\n        else {\r\n            configValue = config[field];\r\n        }\r\n        return !CoreUtils.isNullOrUndefined(configValue) ? configValue : defaultValue;\r\n    };\r\n    return ConfigurationManager;\r\n}());\r\nexport { ConfigurationManager };\r\n//# sourceMappingURL=IConfig.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n// THIS FILE WAS AUTOGENERATED\r\nvar ContextTagKeys = /** @class */ (function () {\r\n    function ContextTagKeys() {\r\n        this.applicationVersion = \"ai.application.ver\";\r\n        this.applicationBuild = \"ai.application.build\";\r\n        this.applicationTypeId = \"ai.application.typeId\";\r\n        this.applicationId = \"ai.application.applicationId\";\r\n        this.applicationLayer = \"ai.application.layer\";\r\n        this.deviceId = \"ai.device.id\";\r\n        this.deviceIp = \"ai.device.ip\";\r\n        this.deviceLanguage = \"ai.device.language\";\r\n        this.deviceLocale = \"ai.device.locale\";\r\n        this.deviceModel = \"ai.device.model\";\r\n        this.deviceFriendlyName = \"ai.device.friendlyName\";\r\n        this.deviceNetwork = \"ai.device.network\";\r\n        this.deviceNetworkName = \"ai.device.networkName\";\r\n        this.deviceOEMName = \"ai.device.oemName\";\r\n        this.deviceOS = \"ai.device.os\";\r\n        this.deviceOSVersion = \"ai.device.osVersion\";\r\n        this.deviceRoleInstance = \"ai.device.roleInstance\";\r\n        this.deviceRoleName = \"ai.device.roleName\";\r\n        this.deviceScreenResolution = \"ai.device.screenResolution\";\r\n        this.deviceType = \"ai.device.type\";\r\n        this.deviceMachineName = \"ai.device.machineName\";\r\n        this.deviceVMName = \"ai.device.vmName\";\r\n        this.deviceBrowser = \"ai.device.browser\";\r\n        this.deviceBrowserVersion = \"ai.device.browserVersion\";\r\n        this.locationIp = \"ai.location.ip\";\r\n        this.locationCountry = \"ai.location.country\";\r\n        this.locationProvince = \"ai.location.province\";\r\n        this.locationCity = \"ai.location.city\";\r\n        this.operationId = \"ai.operation.id\";\r\n        this.operationName = \"ai.operation.name\";\r\n        this.operationParentId = \"ai.operation.parentId\";\r\n        this.operationRootId = \"ai.operation.rootId\";\r\n        this.operationSyntheticSource = \"ai.operation.syntheticSource\";\r\n        this.operationCorrelationVector = \"ai.operation.correlationVector\";\r\n        this.sessionId = \"ai.session.id\";\r\n        this.sessionIsFirst = \"ai.session.isFirst\";\r\n        this.sessionIsNew = \"ai.session.isNew\";\r\n        this.userAccountAcquisitionDate = \"ai.user.accountAcquisitionDate\";\r\n        this.userAccountId = \"ai.user.accountId\";\r\n        this.userAgent = \"ai.user.userAgent\";\r\n        this.userId = \"ai.user.id\";\r\n        this.userStoreRegion = \"ai.user.storeRegion\";\r\n        this.userAuthUserId = \"ai.user.authUserId\";\r\n        this.userAnonymousUserAcquisitionDate = \"ai.user.anonUserAcquisitionDate\";\r\n        this.userAuthenticatedUserAcquisitionDate = \"ai.user.authUserAcquisitionDate\";\r\n        this.cloudName = \"ai.cloud.name\";\r\n        this.cloudRole = \"ai.cloud.role\";\r\n        this.cloudRoleVer = \"ai.cloud.roleVer\";\r\n        this.cloudRoleInstance = \"ai.cloud.roleInstance\";\r\n        this.cloudEnvironment = \"ai.cloud.environment\";\r\n        this.cloudLocation = \"ai.cloud.location\";\r\n        this.cloudDeploymentUnit = \"ai.cloud.deploymentUnit\";\r\n        this.internalNodeName = \"ai.internal.nodeName\";\r\n        this.internalSdkVersion = \"ai.internal.sdkVersion\";\r\n        this.internalAgentVersion = \"ai.internal.agentVersion\";\r\n        this.internalSnippet = \"ai.internal.snippet\";\r\n        this.internalSdkSrc = \"ai.internal.sdkSrc\";\r\n    }\r\n    return ContextTagKeys;\r\n}());\r\nexport { ContextTagKeys };\r\n//# sourceMappingURL=ContextTagKeys.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from \"./Util\";\r\nimport { DataSanitizer } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { CoreUtils } from \"@microsoft/applicationinsights-core-js\";\r\nvar TelemetryItemCreator = /** @class */ (function () {\r\n    function TelemetryItemCreator() {\r\n    }\r\n    /**\r\n     * Create a telemetry item that the 1DS channel understands\r\n     * @param item domain specific properties; part B\r\n     * @param baseType telemetry item type. ie PageViewData\r\n     * @param envelopeName name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n     * @param customProperties user defined custom properties; part C\r\n     * @param systemProperties system properties that are added to the context; part A\r\n     * @returns ITelemetryItem that is sent to channel\r\n     */\r\n    TelemetryItemCreator.create = function (item, baseType, envelopeName, logger, customProperties, systemProperties) {\r\n        envelopeName = DataSanitizer.sanitizeString(logger, envelopeName) || Util.NotSpecified;\r\n        if (CoreUtils.isNullOrUndefined(item) ||\r\n            CoreUtils.isNullOrUndefined(baseType) ||\r\n            CoreUtils.isNullOrUndefined(envelopeName)) {\r\n            throw Error(\"Input doesn't contain all required fields\");\r\n        }\r\n        var telemetryItem = {\r\n            name: envelopeName,\r\n            time: CoreUtils.toISOString(new Date()),\r\n            iKey: \"\",\r\n            ext: systemProperties ? systemProperties : {},\r\n            tags: [],\r\n            data: {},\r\n            baseType: baseType,\r\n            baseData: item // Part B\r\n        };\r\n        // Part C\r\n        if (!CoreUtils.isNullOrUndefined(customProperties)) {\r\n            for (var prop in customProperties) {\r\n                if (customProperties.hasOwnProperty(prop)) {\r\n                    telemetryItem.data[prop] = customProperties[prop];\r\n                }\r\n            }\r\n        }\r\n        return telemetryItem;\r\n    };\r\n    return TelemetryItemCreator;\r\n}());\r\nexport { TelemetryItemCreator };\r\n//# sourceMappingURL=TelemetryItemCreator.js.map","import { ContextTagKeys } from \"./Contracts/Generated/ContextTagKeys\";\r\nvar Extensions = /** @class */ (function () {\r\n    function Extensions() {\r\n    }\r\n    Extensions.UserExt = \"user\";\r\n    Extensions.DeviceExt = \"device\";\r\n    Extensions.TraceExt = \"trace\";\r\n    Extensions.WebExt = \"web\";\r\n    Extensions.AppExt = \"app\";\r\n    Extensions.OSExt = \"os\";\r\n    Extensions.SessionExt = \"ses\";\r\n    Extensions.SDKExt = \"sdk\";\r\n    return Extensions;\r\n}());\r\nexport { Extensions };\r\nexport var CtxTagKeys = new ContextTagKeys();\r\n//# sourceMappingURL=PartAExtensions.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport '@microsoft/applicationinsights-shims';\r\nexport { Util, CorrelationIdHelper, UrlHelper, DateTimeUtils } from './Util';\r\nexport { ConnectionStringParser } from './ConnectionStringParser';\r\nexport { FieldType } from './Enums';\r\nexport { RequestHeaders } from './RequestResponseHeaders';\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod, DEFAULT_BREEZE_ENDPOINT } from './Constants';\r\nexport { Data as AIData } from './Interfaces/Contracts/Generated/Data';\r\nexport { Base as AIBase } from './Interfaces/Contracts/Generated/Base';\r\nexport { Envelope } from './Telemetry/Common/Envelope';\r\nexport { Event } from './Telemetry/Event';\r\nexport { Exception } from './Telemetry/Exception';\r\nexport { Metric } from './Telemetry/Metric';\r\nexport { PageView } from './Telemetry/PageView';\r\nexport { PageViewData } from './Interfaces/Contracts/Generated/PageViewData';\r\nexport { RemoteDependencyData } from './Telemetry/RemoteDependencyData';\r\nexport { Trace } from './Telemetry/Trace';\r\nexport { PageViewPerformance } from './Telemetry/PageViewPerformance';\r\nexport { Data } from './Telemetry/Common/Data';\r\nexport { SeverityLevel } from './Interfaces/Contracts/Generated/SeverityLevel';\r\nexport { ConfigurationManager } from './Interfaces/IConfig';\r\nexport { ContextTagKeys } from './Interfaces/Contracts/Generated/ContextTagKeys';\r\nexport { DataSanitizer } from './Telemetry/Common/DataSanitizer';\r\nexport { TelemetryItemCreator } from './TelemetryItemCreator';\r\nexport { CtxTagKeys, Extensions } from './Interfaces/PartAExtensions';\r\nexport { DistributedTracingModes } from './Enums';\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\nexport var AnalyticsPluginIdentifier = \"ApplicationInsightsAnalytics\";\r\n//# sourceMappingURL=applicationinsights-common.js.map","/*!\n * Application Insights JavaScript SDK - Web Analytics, 2.5.9\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { DateTimeUtils, Util } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId, getDocument, getLocation } from '@microsoft/applicationinsights-core-js';\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\n/**\r\n * Class encapsulates sending page views and page view performance telemetry.\r\n */\r\nvar PageViewManager = /** @class */ (function () {\r\n    function PageViewManager(appInsights, overridePageViewDuration, core, pageViewPerformanceManager) {\r\n        dynamicProto(PageViewManager, this, function (_self) {\r\n            var arrForEach = CoreUtils.arrForEach;\r\n            var isNullOrUndefined = CoreUtils.isNullOrUndefined;\r\n            var intervalHandle = null;\r\n            var itemQueue = [];\r\n            var pageViewPerformanceSent = false;\r\n            var _logger;\r\n            if (core) {\r\n                _logger = core.logger;\r\n            }\r\n            function _flushChannels() {\r\n                if (core) {\r\n                    arrForEach(core.getTransmissionControls(), function (queues) {\r\n                        arrForEach(queues, function (q) { return q.flush(true); });\r\n                    });\r\n                }\r\n            }\r\n            function _addQueue(cb) {\r\n                itemQueue.push(cb);\r\n                if (!intervalHandle) {\r\n                    intervalHandle = setInterval((function () {\r\n                        var allItems = itemQueue.slice(0);\r\n                        var doFlush = false;\r\n                        itemQueue = [];\r\n                        arrForEach(allItems, function (item) {\r\n                            if (!item()) {\r\n                                // Not processed so rescheduled\r\n                                itemQueue.push(item);\r\n                            }\r\n                            else {\r\n                                doFlush = true;\r\n                            }\r\n                        });\r\n                        if (itemQueue.length === 0) {\r\n                            clearInterval(intervalHandle);\r\n                            intervalHandle = null;\r\n                        }\r\n                        if (doFlush) {\r\n                            // We process at least one item so flush the queue\r\n                            _flushChannels();\r\n                        }\r\n                    }), 100);\r\n                }\r\n            }\r\n            _self.trackPageView = function (pageView, customProperties) {\r\n                var name = pageView.name;\r\n                if (isNullOrUndefined(name) || typeof name !== \"string\") {\r\n                    var doc = getDocument();\r\n                    name = pageView.name = doc && doc.title || \"\";\r\n                }\r\n                var uri = pageView.uri;\r\n                if (isNullOrUndefined(uri) || typeof uri !== \"string\") {\r\n                    var location_1 = getLocation();\r\n                    uri = pageView.uri = location_1 && location_1.href || \"\";\r\n                }\r\n                // case 1a. if performance timing is not supported by the browser, send the page view telemetry with the duration provided by the user. If the user\r\n                // do not provide the duration, set duration to undefined\r\n                // Also this is case 4\r\n                if (!pageViewPerformanceManager.isPerformanceTimingSupported()) {\r\n                    appInsights.sendPageViewInternal(pageView, customProperties);\r\n                    _flushChannels();\r\n                    // no navigation timing (IE 8, iOS Safari 8.4, Opera Mini 8 - see http://caniuse.com/#feat=nav-timing)\r\n                    _logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.NavigationTimingNotSupported, \"trackPageView: navigation timing API used for calculation of page duration is not supported in this browser. This page view will be collected without duration and timing info.\");\r\n                    return;\r\n                }\r\n                var pageViewSent = false;\r\n                var customDuration;\r\n                // if the performance timing is supported by the browser, calculate the custom duration\r\n                var start = pageViewPerformanceManager.getPerformanceTiming().navigationStart;\r\n                if (start > 0) {\r\n                    customDuration = DateTimeUtils.GetDuration(start, +new Date);\r\n                    if (!pageViewPerformanceManager.shouldCollectDuration(customDuration)) {\r\n                        customDuration = undefined;\r\n                    }\r\n                }\r\n                // if the user has provided duration, send a page view telemetry with the provided duration. Otherwise, if\r\n                // overridePageViewDuration is set to true, send a page view telemetry with the custom duration calculated earlier\r\n                var duration;\r\n                if (!isNullOrUndefined(customProperties) &&\r\n                    !isNullOrUndefined(customProperties.duration)) {\r\n                    duration = customProperties.duration;\r\n                }\r\n                if (overridePageViewDuration || !isNaN(duration)) {\r\n                    if (isNaN(duration)) {\r\n                        // case 3\r\n                        if (!customProperties) {\r\n                            customProperties = {};\r\n                        }\r\n                        customProperties[\"duration\"] = customDuration;\r\n                    }\r\n                    // case 2\r\n                    appInsights.sendPageViewInternal(pageView, customProperties);\r\n                    _flushChannels();\r\n                    pageViewSent = true;\r\n                }\r\n                // now try to send the page view performance telemetry\r\n                var maxDurationLimit = 60000;\r\n                if (!customProperties) {\r\n                    customProperties = {};\r\n                }\r\n                // Queue the event for processing\r\n                _addQueue(function () {\r\n                    var processed = false;\r\n                    try {\r\n                        if (pageViewPerformanceManager.isPerformanceTimingDataReady()) {\r\n                            processed = true;\r\n                            var pageViewPerformance = {\r\n                                name: name,\r\n                                uri: uri\r\n                            };\r\n                            pageViewPerformanceManager.populatePageViewPerformanceEvent(pageViewPerformance);\r\n                            if (!pageViewPerformance.isValid && !pageViewSent) {\r\n                                // If navigation timing gives invalid numbers, then go back to \"override page view duration\" mode.\r\n                                // That's the best value we can get that makes sense.\r\n                                customProperties[\"duration\"] = customDuration;\r\n                                appInsights.sendPageViewInternal(pageView, customProperties);\r\n                            }\r\n                            else {\r\n                                if (!pageViewSent) {\r\n                                    customProperties[\"duration\"] = pageViewPerformance.durationMs;\r\n                                    appInsights.sendPageViewInternal(pageView, customProperties);\r\n                                }\r\n                                if (!pageViewPerformanceSent) {\r\n                                    appInsights.sendPageViewPerformanceInternal(pageViewPerformance, customProperties);\r\n                                    pageViewPerformanceSent = true;\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (start > 0 && DateTimeUtils.GetDuration(start, +new Date) > maxDurationLimit) {\r\n                            // if performance timings are not ready but we exceeded the maximum duration limit, just log a page view telemetry\r\n                            // with the maximum duration limit. Otherwise, keep waiting until performance timings are ready\r\n                            processed = true;\r\n                            if (!pageViewSent) {\r\n                                customProperties[\"duration\"] = maxDurationLimit;\r\n                                appInsights.sendPageViewInternal(pageView, customProperties);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        _logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailedCalc, \"trackPageView failed on page load calculation: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                    }\r\n                    return processed;\r\n                });\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for PageViewManager.prototype.trackPageView.\r\n    return PageViewManager;\r\n}());\r\nexport { PageViewManager };\r\n//# sourceMappingURL=PageViewManager.js.map","/*!\n * Application Insights JavaScript SDK - Web Analytics, 2.5.9\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { Util } from '@microsoft/applicationinsights-common';\r\nimport { hasJSON, getJSON, CoreUtils } from '@microsoft/applicationinsights-core-js';\r\n/**\r\n * Used to track page visit durations\r\n */\r\nvar PageVisitTimeManager = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of PageVisitTimeManager\r\n     * @param pageVisitTimeTrackingHandler Delegate that will be called to send telemetry data to AI (when trackPreviousPageVisit is called)\r\n     * @returns {}\r\n     */\r\n    function PageVisitTimeManager(logger, pageVisitTimeTrackingHandler) {\r\n        this.prevPageVisitDataKeyName = \"prevPageVisitData\";\r\n        this.pageVisitTimeTrackingHandler = pageVisitTimeTrackingHandler;\r\n        this._logger = logger;\r\n    }\r\n    /**\r\n     * Tracks the previous page visit time telemetry (if exists) and starts timing of new page visit time\r\n     * @param currentPageName Name of page to begin timing for visit duration\r\n     * @param currentPageUrl Url of page to begin timing for visit duration\r\n     */\r\n    PageVisitTimeManager.prototype.trackPreviousPageVisit = function (currentPageName, currentPageUrl) {\r\n        try {\r\n            // Restart timer for new page view\r\n            var prevPageVisitTimeData = this.restartPageVisitTimer(currentPageName, currentPageUrl);\r\n            // If there was a page already being timed, track the visit time for it now.\r\n            if (prevPageVisitTimeData) {\r\n                this.pageVisitTimeTrackingHandler(prevPageVisitTimeData.pageName, prevPageVisitTimeData.pageUrl, prevPageVisitTimeData.pageVisitTime);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.warnToConsole(\"Auto track page visit time failed, metric will not be collected: \" + Util.dump(e));\r\n        }\r\n    };\r\n    /**\r\n     * Stops timing of current page (if exists) and starts timing for duration of visit to pageName\r\n     * @param pageName Name of page to begin timing visit duration\r\n     * @returns {PageVisitData} Page visit data (including duration) of pageName from last call to start or restart, if exists. Null if not.\r\n     */\r\n    PageVisitTimeManager.prototype.restartPageVisitTimer = function (pageName, pageUrl) {\r\n        try {\r\n            var prevPageVisitData = this.stopPageVisitTimer();\r\n            this.startPageVisitTimer(pageName, pageUrl);\r\n            return prevPageVisitData;\r\n        }\r\n        catch (e) {\r\n            this._logger.warnToConsole(\"Call to restart failed: \" + Util.dump(e));\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Starts timing visit duration of pageName\r\n     * @param pageName\r\n     * @returns {}\r\n     */\r\n    PageVisitTimeManager.prototype.startPageVisitTimer = function (pageName, pageUrl) {\r\n        try {\r\n            if (Util.canUseSessionStorage()) {\r\n                if (Util.getSessionStorage(this._logger, this.prevPageVisitDataKeyName) != null) {\r\n                    throw new Error(\"Cannot call startPageVisit consecutively without first calling stopPageVisit\");\r\n                }\r\n                var currPageVisitData = new PageVisitData(pageName, pageUrl);\r\n                var currPageVisitDataStr = getJSON().stringify(currPageVisitData);\r\n                Util.setSessionStorage(this._logger, this.prevPageVisitDataKeyName, currPageVisitDataStr);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // TODO: Remove this catch in next phase, since if start is called twice in a row the exception needs to be propagated out\r\n            this._logger.warnToConsole(\"Call to start failed: \" + Util.dump(e));\r\n        }\r\n    };\r\n    /**\r\n     * Stops timing of current page, if exists.\r\n     * @returns {PageVisitData} Page visit data (including duration) of pageName from call to start, if exists. Null if not.\r\n     */\r\n    PageVisitTimeManager.prototype.stopPageVisitTimer = function () {\r\n        try {\r\n            if (Util.canUseSessionStorage()) {\r\n                // Define end time of page's visit\r\n                var pageVisitEndTime = CoreUtils.dateNow();\r\n                // Try to retrieve  page name and start time from session storage\r\n                var pageVisitDataJsonStr = Util.getSessionStorage(this._logger, this.prevPageVisitDataKeyName);\r\n                if (pageVisitDataJsonStr && hasJSON()) {\r\n                    // if previous page data exists, set end time of visit\r\n                    var prevPageVisitData = getJSON().parse(pageVisitDataJsonStr);\r\n                    prevPageVisitData.pageVisitTime = pageVisitEndTime - prevPageVisitData.pageVisitStartTime;\r\n                    // Remove data from storage since we already used it\r\n                    Util.removeSessionStorage(this._logger, this.prevPageVisitDataKeyName);\r\n                    // Return page visit data\r\n                    return prevPageVisitData;\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        catch (e) {\r\n            this._logger.warnToConsole(\"Stop page visit timer failed: \" + Util.dump(e));\r\n            return null;\r\n        }\r\n    };\r\n    return PageVisitTimeManager;\r\n}());\r\nexport { PageVisitTimeManager };\r\nvar PageVisitData = /** @class */ (function () {\r\n    function PageVisitData(pageName, pageUrl) {\r\n        this.pageVisitStartTime = CoreUtils.dateNow();\r\n        this.pageName = pageName;\r\n        this.pageUrl = pageUrl;\r\n    }\r\n    return PageVisitData;\r\n}());\r\nexport { PageVisitData };\r\n//# sourceMappingURL=PageVisitTimeManager.js.map","/*!\n * Application Insights JavaScript SDK - Web Analytics, 2.5.9\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { Util, DateTimeUtils } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId, getNavigator, getPerformance } from '@microsoft/applicationinsights-core-js';\r\n/**\r\n * Class encapsulates sending page view performance telemetry.\r\n */\r\nvar PageViewPerformanceManager = /** @class */ (function () {\r\n    function PageViewPerformanceManager(core) {\r\n        this.MAX_DURATION_ALLOWED = 3600000; // 1h\r\n        if (core) {\r\n            this._logger = core.logger;\r\n        }\r\n    }\r\n    PageViewPerformanceManager.prototype.populatePageViewPerformanceEvent = function (pageViewPerformance) {\r\n        pageViewPerformance.isValid = false;\r\n        /*\r\n         * http://www.w3.org/TR/navigation-timing/#processing-model\r\n         *  |-navigationStart\r\n         *  |             |-connectEnd\r\n         *  |             ||-requestStart\r\n         *  |             ||             |-responseStart\r\n         *  |             ||             |              |-responseEnd\r\n         *  |             ||             |              |\r\n         *  |             ||             |              |         |-loadEventEnd\r\n         *  |---network---||---request---|---response---|---dom---|\r\n         *  |--------------------------total----------------------|\r\n         */\r\n        var navigationTiming = this.getPerformanceNavigationTiming();\r\n        var timing = this.getPerformanceTiming();\r\n        if (navigationTiming || timing) {\r\n            if (navigationTiming) {\r\n                var total = navigationTiming.duration;\r\n                var network = DateTimeUtils.GetDuration(navigationTiming.startTime, navigationTiming.connectEnd);\r\n                var request = DateTimeUtils.GetDuration(navigationTiming.requestStart, navigationTiming.responseStart);\r\n                var response = DateTimeUtils.GetDuration(navigationTiming.responseStart, navigationTiming.responseEnd);\r\n                var dom = DateTimeUtils.GetDuration(navigationTiming.responseEnd, navigationTiming.loadEventEnd);\r\n            }\r\n            else {\r\n                var total = DateTimeUtils.GetDuration(timing.navigationStart, timing.loadEventEnd);\r\n                var network = DateTimeUtils.GetDuration(timing.navigationStart, timing.connectEnd);\r\n                var request = DateTimeUtils.GetDuration(timing.requestStart, timing.responseStart);\r\n                var response = DateTimeUtils.GetDuration(timing.responseStart, timing.responseEnd);\r\n                var dom = DateTimeUtils.GetDuration(timing.responseEnd, timing.loadEventEnd);\r\n            }\r\n            if (total === 0) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ErrorPVCalc, \"error calculating page view performance.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else if (!this.shouldCollectDuration(total, network, request, response, dom)) {\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.InvalidDurationValue, \"Invalid page load duration value. Browser perf data won't be sent.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else if (total < Math.floor(network) + Math.floor(request) + Math.floor(response) + Math.floor(dom)) {\r\n                // some browsers may report individual components incorrectly so that the sum of the parts will be bigger than total PLT\r\n                // in this case, don't report client performance from this page\r\n                this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.ClientPerformanceMathError, \"client performance math error.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n            }\r\n            else {\r\n                pageViewPerformance.durationMs = total;\r\n                // // convert to timespans\r\n                pageViewPerformance.perfTotal = pageViewPerformance.duration = Util.msToTimeSpan(total);\r\n                pageViewPerformance.networkConnect = Util.msToTimeSpan(network);\r\n                pageViewPerformance.sentRequest = Util.msToTimeSpan(request);\r\n                pageViewPerformance.receivedResponse = Util.msToTimeSpan(response);\r\n                pageViewPerformance.domProcessing = Util.msToTimeSpan(dom);\r\n                pageViewPerformance.isValid = true;\r\n            }\r\n        }\r\n    };\r\n    PageViewPerformanceManager.prototype.getPerformanceTiming = function () {\r\n        if (this.isPerformanceTimingSupported()) {\r\n            return getPerformance().timing;\r\n        }\r\n        return null;\r\n    };\r\n    PageViewPerformanceManager.prototype.getPerformanceNavigationTiming = function () {\r\n        if (this.isPerformanceNavigationTimingSupported()) {\r\n            return getPerformance().getEntriesByType(\"navigation\")[0];\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns true is window PerformanceNavigationTiming API is supported, false otherwise.\r\n     */\r\n    PageViewPerformanceManager.prototype.isPerformanceNavigationTimingSupported = function () {\r\n        var perf = getPerformance();\r\n        return perf && perf.getEntriesByType && perf.getEntriesByType(\"navigation\").length > 0;\r\n    };\r\n    /**\r\n     * Returns true is window performance timing API is supported, false otherwise.\r\n     */\r\n    PageViewPerformanceManager.prototype.isPerformanceTimingSupported = function () {\r\n        var perf = getPerformance();\r\n        return perf && perf.timing;\r\n    };\r\n    /**\r\n     * As page loads different parts of performance timing numbers get set. When all of them are set we can report it.\r\n     * Returns true if ready, false otherwise.\r\n     */\r\n    PageViewPerformanceManager.prototype.isPerformanceTimingDataReady = function () {\r\n        var perf = getPerformance();\r\n        var timing = perf ? perf.timing : 0;\r\n        return timing\r\n            && timing.domainLookupStart > 0\r\n            && timing.navigationStart > 0\r\n            && timing.responseStart > 0\r\n            && timing.requestStart > 0\r\n            && timing.loadEventEnd > 0\r\n            && timing.responseEnd > 0\r\n            && timing.connectEnd > 0\r\n            && timing.domLoading > 0;\r\n    };\r\n    /**\r\n     * This method tells if given durations should be excluded from collection.\r\n     */\r\n    PageViewPerformanceManager.prototype.shouldCollectDuration = function () {\r\n        var durations = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            durations[_i] = arguments[_i];\r\n        }\r\n        var _navigator = getNavigator() || {};\r\n        // a full list of Google crawlers user agent strings - https://support.google.com/webmasters/answer/1061943?hl=en\r\n        var botAgentNames = ['googlebot', 'adsbot-google', 'apis-google', 'mediapartners-google'];\r\n        var userAgent = _navigator.userAgent;\r\n        var isGoogleBot = false;\r\n        if (userAgent) {\r\n            for (var i = 0; i < botAgentNames.length; i++) {\r\n                isGoogleBot = isGoogleBot || userAgent.toLowerCase().indexOf(botAgentNames[i]) !== -1;\r\n            }\r\n        }\r\n        if (isGoogleBot) {\r\n            // Don't report durations for GoogleBot, it is returning invalid values in performance.timing API.\r\n            return false;\r\n        }\r\n        else {\r\n            // for other page views, don't report if it's outside of a reasonable range\r\n            for (var i = 0; i < durations.length; i++) {\r\n                if (durations[i] < 0 || durations[i] >= this.MAX_DURATION_ALLOWED) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    return PageViewPerformanceManager;\r\n}());\r\nexport { PageViewPerformanceManager };\r\n//# sourceMappingURL=PageViewPerformanceManager.js.map","/*!\n * Application Insights JavaScript SDK - Web Analytics, 2.5.9\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n * ApplicationInsights.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport { Util, PageViewPerformance, PageView, RemoteDependencyData, Event as EventTelemetry, TelemetryItemCreator, Metric, Exception, SeverityLevel, Trace, DateTimeUtils, PropertiesPluginIdentifier, AnalyticsPluginIdentifier } from \"@microsoft/applicationinsights-common\";\r\nimport { BaseTelemetryPlugin, CoreUtils, LoggingSeverity, _InternalMessageId, getWindow, getDocument, getHistory, getLocation, doPerf } from \"@microsoft/applicationinsights-core-js\";\r\nimport { PageViewManager } from \"./Telemetry/PageViewManager\";\r\nimport { PageVisitTimeManager } from \"./Telemetry/PageVisitTimeManager\";\r\nimport { PageViewPerformanceManager } from './Telemetry/PageViewPerformanceManager';\r\n\"use strict\";\r\nvar durationProperty = \"duration\";\r\nfunction _dispatchEvent(target, evnt) {\r\n    if (target && target.dispatchEvent && evnt) {\r\n        target.dispatchEvent(evnt);\r\n    }\r\n}\r\nvar ApplicationInsights = /** @class */ (function (_super) {\r\n    __extends(ApplicationInsights, _super);\r\n    function ApplicationInsights() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = AnalyticsPluginIdentifier; // do not change name or priority\r\n        _this.priority = 180; // take from reserved priority range 100- 200\r\n        _this.autoRoutePVDelay = 500; // ms; Time to wait after a route change before triggering a pageview to allow DOM changes to take place\r\n        // Counts number of trackAjax invokations.\r\n        // By default we only monitor X ajax call per view to avoid too much load.\r\n        // Default value is set in config.\r\n        // This counter keeps increasing even after the limit is reached.\r\n        _this._trackAjaxAttempts = 0;\r\n        var location = getLocation();\r\n        _this._prevUri = location && location.href || \"\";\r\n        return _this;\r\n    }\r\n    ApplicationInsights.getDefaultConfig = function (config) {\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        // set default values\r\n        config.sessionRenewalMs = 30 * 60 * 1000;\r\n        config.sessionExpirationMs = 24 * 60 * 60 * 1000;\r\n        config.disableExceptionTracking = Util.stringToBoolOrDefault(config.disableExceptionTracking);\r\n        config.autoTrackPageVisitTime = Util.stringToBoolOrDefault(config.autoTrackPageVisitTime);\r\n        config.overridePageViewDuration = Util.stringToBoolOrDefault(config.overridePageViewDuration);\r\n        config.enableUnhandledPromiseRejectionTracking = Util.stringToBoolOrDefault(config.enableUnhandledPromiseRejectionTracking);\r\n        if (isNaN(config.samplingPercentage) || config.samplingPercentage <= 0 || config.samplingPercentage >= 100) {\r\n            config.samplingPercentage = 100;\r\n        }\r\n        config.isCookieUseDisabled = Util.stringToBoolOrDefault(config.isCookieUseDisabled);\r\n        config.isStorageUseDisabled = Util.stringToBoolOrDefault(config.isStorageUseDisabled);\r\n        config.isBrowserLinkTrackingEnabled = Util.stringToBoolOrDefault(config.isBrowserLinkTrackingEnabled);\r\n        config.enableAutoRouteTracking = Util.stringToBoolOrDefault(config.enableAutoRouteTracking);\r\n        config.namePrefix = config.namePrefix || \"\";\r\n        return config;\r\n    };\r\n    ApplicationInsights.prototype.processTelemetry = function (env, itemCtx) {\r\n        var _this = this;\r\n        doPerf(this.core, function () { return _this.identifier + \":processTelemetry\"; }, function () {\r\n            var doNotSendItem = false;\r\n            var telemetryInitializersCount = _this._telemetryInitializers.length;\r\n            itemCtx = _this._getTelCtx(itemCtx);\r\n            for (var i = 0; i < telemetryInitializersCount; ++i) {\r\n                var telemetryInitializer = _this._telemetryInitializers[i];\r\n                if (telemetryInitializer) {\r\n                    try {\r\n                        if (telemetryInitializer.apply(null, [env]) === false) {\r\n                            doNotSendItem = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // log error but dont stop executing rest of the telemetry initializers\r\n                        // doNotSendItem = true;\r\n                        itemCtx.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryInitializerFailed, \"One of telemetry initializers failed, telemetry item will not be sent: \" + Util.getExceptionName(e), { exception: Util.dump(e) }, true);\r\n                    }\r\n                }\r\n            }\r\n            if (!doNotSendItem) {\r\n                _this.processNext(env, itemCtx);\r\n            }\r\n        }, function () { return ({ item: env }); }, !(env.sync));\r\n    };\r\n    ApplicationInsights.prototype.trackEvent = function (event, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(event, EventTelemetry.dataType, EventTelemetry.envelopeType, this.diagLog(), customProperties);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this.diagLog().throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TrackTraceFailed, \"trackTrace failed, trace will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Start timing an extended event. Call `stopTrackEvent` to log the event when it ends.\r\n     * @param   name    A string that identifies this event uniquely within the document.\r\n     */\r\n    ApplicationInsights.prototype.startTrackEvent = function (name) {\r\n        try {\r\n            this._eventTracking.start(name);\r\n        }\r\n        catch (e) {\r\n            this.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StartTrackEventFailed, \"startTrackEvent failed, event will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Log an extended event that you started timing with `startTrackEvent`.\r\n     * @param   name    The string you used to identify this event in `startTrackEvent`.\r\n     * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    ApplicationInsights.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        try {\r\n            this._eventTracking.stop(name, undefined, properties); // Todo: Fix to pass measurements once type is updated\r\n        }\r\n        catch (e) {\r\n            this.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StopTrackEventFailed, \"stopTrackEvent failed, event will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Log a diagnostic message\r\n     * @param {ITraceTelemetry} trace\r\n     * @param ICustomProperties.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackTrace = function (trace, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(trace, Trace.dataType, Trace.envelopeType, this.diagLog(), customProperties);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this.diagLog().throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TrackTraceFailed, \"trackTrace failed, trace will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Log a numeric value that is not associated with a specific event. Typically\r\n     * used to send regular reports of performance indicators. To send single measurement, just\r\n     * use the name and average fields of {@link IMetricTelemetry}. If you take measurements\r\n     * frequently, you can reduce the telemetry bandwidth by aggregating multiple measurements\r\n     * and sending the resulting average at intervals\r\n     * @param {IMetricTelemetry} metric input object argument. Only name and average are mandatory.\r\n     * @param {{[key: string]: any}} customProperties additional data used to filter metrics in the\r\n     * portal. Defaults to empty.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackMetric = function (metric, customProperties) {\r\n        try {\r\n            var telemetryItem = TelemetryItemCreator.create(metric, Metric.dataType, Metric.envelopeType, this.diagLog(), customProperties);\r\n            this.core.track(telemetryItem);\r\n        }\r\n        catch (e) {\r\n            this.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackMetricFailed, \"trackMetric failed, metric will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Logs that a page or other item was viewed.\r\n     * @param IPageViewTelemetry The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param customProperties Additional data used to filter events and metrics. Defaults to empty.\r\n     * If a user wants to provide duration for pageLoad, it'll have to be in pageView.properties.duration\r\n     */\r\n    ApplicationInsights.prototype.trackPageView = function (pageView, customProperties) {\r\n        try {\r\n            var inPv = pageView || {};\r\n            this._pageViewManager.trackPageView(inPv, __assign({}, inPv.properties, inPv.measurements, customProperties));\r\n            if (this.config.autoTrackPageVisitTime) {\r\n                this._pageVisitTimeManager.trackPreviousPageVisit(inPv.name, inPv.uri);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailed, \"trackPageView failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Create a page view telemetry item and send it to the SDK pipeline through the core.track API\r\n     * @param pageView Page view item to be sent\r\n     * @param properties Custom properties (Part C) that a user can add to the telemetry item\r\n     * @param systemProperties System level properties (Part A) that a user can add to the telemetry item\r\n     */\r\n    ApplicationInsights.prototype.sendPageViewInternal = function (pageView, properties, systemProperties) {\r\n        var doc = getDocument();\r\n        if (doc) {\r\n            pageView.refUri = pageView.refUri === undefined ? doc.referrer : pageView.refUri;\r\n        }\r\n        var telemetryItem = TelemetryItemCreator.create(pageView, PageView.dataType, PageView.envelopeType, this.diagLog(), properties, systemProperties);\r\n        this.core.track(telemetryItem);\r\n        // reset ajaxes counter\r\n        this._trackAjaxAttempts = 0;\r\n    };\r\n    /**\r\n     * @ignore INTERNAL ONLY\r\n     * @param pageViewPerformance\r\n     * @param properties\r\n     */\r\n    ApplicationInsights.prototype.sendPageViewPerformanceInternal = function (pageViewPerformance, properties, systemProperties) {\r\n        var telemetryItem = TelemetryItemCreator.create(pageViewPerformance, PageViewPerformance.dataType, PageViewPerformance.envelopeType, this.diagLog(), properties, systemProperties);\r\n        this.core.track(telemetryItem);\r\n    };\r\n    /**\r\n     * Send browser performance metrics.\r\n     * @param pageViewPerformance\r\n     * @param customProperties\r\n     */\r\n    ApplicationInsights.prototype.trackPageViewPerformance = function (pageViewPerformance, customProperties) {\r\n        try {\r\n            this._pageViewPerformanceManager.populatePageViewPerformanceEvent(pageViewPerformance);\r\n            this.sendPageViewPerformanceInternal(pageViewPerformance, customProperties);\r\n        }\r\n        catch (e) {\r\n            this.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackPVFailed, \"trackPageViewPerformance failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Starts the timer for tracking a page load time. Use this instead of `trackPageView` if you want to control when the page view timer starts and stops,\r\n     * but don't want to calculate the duration yourself. This method doesn't send any telemetry. Call `stopTrackPage` to log the end of the page view\r\n     * and send the event.\r\n     * @param name A string that idenfities this item, unique within this HTML document. Defaults to the document title.\r\n     */\r\n    ApplicationInsights.prototype.startTrackPage = function (name) {\r\n        try {\r\n            if (typeof name !== \"string\") {\r\n                var doc = getDocument();\r\n                name = doc && doc.title || \"\";\r\n            }\r\n            this._pageTracking.start(name);\r\n        }\r\n        catch (e) {\r\n            this.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StartTrackFailed, \"startTrackPage failed, page view may not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * Stops the timer that was started by calling `startTrackPage` and sends the pageview load time telemetry with the specified properties and measurements.\r\n     * The duration of the page view will be the time between calling `startTrackPage` and `stopTrackPage`.\r\n     * @param   name  The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param   url   String - a relative or absolute URL that identifies the page or other item. Defaults to the window location.\r\n     * @param   properties  map[string, string] - additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this page, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    ApplicationInsights.prototype.stopTrackPage = function (name, url, properties, measurement) {\r\n        try {\r\n            if (typeof name !== \"string\") {\r\n                var doc = getDocument();\r\n                name = doc && doc.title || \"\";\r\n            }\r\n            if (typeof url !== \"string\") {\r\n                var loc = getLocation();\r\n                url = loc && loc.href || \"\";\r\n            }\r\n            this._pageTracking.stop(name, url, properties, measurement);\r\n            if (this.config.autoTrackPageVisitTime) {\r\n                this._pageVisitTimeManager.trackPreviousPageVisit(name, url);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.StopTrackFailed, \"stopTrackPage failed, page view will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @ignore INTERNAL ONLY\r\n     * @param exception\r\n     * @param properties\r\n     * @param systemProperties\r\n     */\r\n    ApplicationInsights.prototype.sendExceptionInternal = function (exception, customProperties, systemProperties) {\r\n        var exceptionPartB = new Exception(this.diagLog(), exception.exception || new Error(Util.NotSpecified), exception.properties, exception.measurements, exception.severityLevel, exception.id).toInterface();\r\n        var telemetryItem = TelemetryItemCreator.create(exceptionPartB, Exception.dataType, Exception.envelopeType, this.diagLog(), customProperties, systemProperties);\r\n        this.core.track(telemetryItem);\r\n    };\r\n    /**\r\n     * Log an exception you have caught.\r\n     *\r\n     * @param {IExceptionTelemetry} exception   Object which contains exception to be sent\r\n     * @param {{[key: string]: any}} customProperties   Additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     *\r\n     * Any property of type double will be considered a measurement, and will be treated by Application Insights as a metric.\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype.trackException = function (exception, customProperties) {\r\n        try {\r\n            this.sendExceptionInternal(exception, customProperties);\r\n        }\r\n        catch (e) {\r\n            this.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TrackExceptionFailed, \"trackException failed, exception will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n    };\r\n    /**\r\n     * @description Custom error handler for Application Insights Analytics\r\n     * @param {IAutoExceptionTelemetry} exception\r\n     * @memberof ApplicationInsights\r\n     */\r\n    ApplicationInsights.prototype._onerror = function (exception) {\r\n        try {\r\n            var properties_1 = {\r\n                url: (exception && exception.url) || (getDocument() || {}).URL,\r\n                lineNumber: exception.lineNumber,\r\n                columnNumber: exception.columnNumber,\r\n                message: exception.message\r\n            };\r\n            if (Util.isCrossOriginError(exception.message, exception.url, exception.lineNumber, exception.columnNumber, exception.error)) {\r\n                this._sendCORSException(properties_1.url);\r\n            }\r\n            else {\r\n                if (!Util.isError(exception.error)) {\r\n                    var stack = \"window.onerror@\" + properties_1.url + \":\" + exception.lineNumber + \":\" + (exception.columnNumber || 0);\r\n                    exception.error = new Error(exception.message);\r\n                    exception.error.stack = stack;\r\n                }\r\n                this.trackException({ exception: exception.error, severityLevel: SeverityLevel.Error }, properties_1);\r\n            }\r\n        }\r\n        catch (e) {\r\n            var errorString = exception.error ?\r\n                (exception.error.name + \", \" + exception.error.message)\r\n                : \"null\";\r\n            this.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ExceptionWhileLoggingError, \"_onError threw exception while logging error, error will not be collected: \"\r\n                + Util.getExceptionName(e), { exception: Util.dump(e), errorString: errorString });\r\n        }\r\n    };\r\n    ApplicationInsights.prototype.addTelemetryInitializer = function (telemetryInitializer) {\r\n        this._telemetryInitializers.push(telemetryInitializer);\r\n    };\r\n    ApplicationInsights.prototype.initialize = function (config, core, extensions, pluginChain) {\r\n        var _this = this;\r\n        if (this.isInitialized()) {\r\n            return;\r\n        }\r\n        if (CoreUtils.isNullOrUndefined(core)) {\r\n            throw Error(\"Error initializing\");\r\n        }\r\n        _super.prototype.initialize.call(this, config, core, extensions, pluginChain);\r\n        this.setInitialized(false); // resetting the initialized state, just in case the following fails\r\n        var ctx = this._getTelCtx();\r\n        var identifier = this.identifier;\r\n        this._globalconfig = {\r\n            instrumentationKey: config.instrumentationKey,\r\n            endpointUrl: config.endpointUrl || \"https://dc.services.visualstudio.com/v2/track\"\r\n        };\r\n        this.config = ctx.getExtCfg(identifier);\r\n        // load default values if specified\r\n        var defaults = ApplicationInsights.getDefaultConfig();\r\n        if (defaults !== undefined) {\r\n            for (var field in defaults) {\r\n                // for each unspecified field, set the default value\r\n                this.config[field] = ctx.getConfig(identifier, field, defaults[field]);\r\n            }\r\n            if (this._globalconfig) {\r\n                for (var field in defaults) {\r\n                    if (this._globalconfig[field] === undefined) {\r\n                        this._globalconfig[field] = defaults[field];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Todo: move this out of static state\r\n        if (this.config.isCookieUseDisabled) {\r\n            Util.disableCookies();\r\n        }\r\n        // Todo: move this out of static state\r\n        if (this.config.isStorageUseDisabled) {\r\n            Util.disableStorage();\r\n        }\r\n        var configGetters = {\r\n            instrumentationKey: function () { return config.instrumentationKey; },\r\n            accountId: function () { return _this.config.accountId || config.accountId; },\r\n            sessionRenewalMs: function () { return _this.config.sessionRenewalMs || config.sessionRenewalMs; },\r\n            sessionExpirationMs: function () { return _this.config.sessionExpirationMs || config.sessionExpirationMs; },\r\n            sampleRate: function () { return _this.config.samplingPercentage || config.samplingPercentage; },\r\n            cookieDomain: function () { return _this.config.cookieDomain || config.cookieDomain; },\r\n            sdkExtension: function () { return _this.config.sdkExtension || config.sdkExtension; },\r\n            isBrowserLinkTrackingEnabled: function () { return _this.config.isBrowserLinkTrackingEnabled || config.isBrowserLinkTrackingEnabled; },\r\n            appId: function () { return _this.config.appId || config.appId; }\r\n        };\r\n        this._pageViewPerformanceManager = new PageViewPerformanceManager(this.core);\r\n        this._pageViewManager = new PageViewManager(this, this.config.overridePageViewDuration, this.core, this._pageViewPerformanceManager);\r\n        this._pageVisitTimeManager = new PageVisitTimeManager(this.diagLog(), function (pageName, pageUrl, pageVisitTime) { return _this.trackPageVisitTime(pageName, pageUrl, pageVisitTime); });\r\n        this._telemetryInitializers = this._telemetryInitializers || [];\r\n        this._addDefaultTelemetryInitializers(configGetters);\r\n        this._eventTracking = new Timing(this.diagLog(), \"trackEvent\");\r\n        this._eventTracking.action =\r\n            function (name, url, duration, properties) {\r\n                if (!properties) {\r\n                    properties = {};\r\n                }\r\n                properties[durationProperty] = duration.toString();\r\n                _this.trackEvent({ name: name, properties: properties });\r\n            };\r\n        // initialize page view timing\r\n        this._pageTracking = new Timing(this.diagLog(), \"trackPageView\");\r\n        this._pageTracking.action = function (name, url, duration, properties, measurements) {\r\n            // duration must be a custom property in order for the collector to extract it\r\n            if (CoreUtils.isNullOrUndefined(properties)) {\r\n                properties = {};\r\n            }\r\n            properties[durationProperty] = duration.toString();\r\n            var pageViewItem = {\r\n                name: name,\r\n                uri: url,\r\n                properties: properties,\r\n                measurements: measurements\r\n            };\r\n            _this.sendPageViewInternal(pageViewItem, properties);\r\n        };\r\n        var _window = getWindow();\r\n        var _history = getHistory();\r\n        var _location = getLocation();\r\n        var instance = this;\r\n        if (this.config.disableExceptionTracking === false &&\r\n            !this.config.autoExceptionInstrumented && _window) {\r\n            // We want to enable exception auto collection and it has not been done so yet\r\n            var onerror_1 = \"onerror\";\r\n            var originalOnError_1 = _window[onerror_1];\r\n            _window.onerror = function (message, url, lineNumber, columnNumber, error) {\r\n                var handled = originalOnError_1 && originalOnError_1(message, url, lineNumber, columnNumber, error);\r\n                if (handled !== true) {\r\n                    instance._onerror({\r\n                        message: message,\r\n                        url: url,\r\n                        lineNumber: lineNumber,\r\n                        columnNumber: columnNumber,\r\n                        error: error\r\n                    });\r\n                }\r\n                return handled;\r\n            };\r\n            this.config.autoExceptionInstrumented = true;\r\n        }\r\n        if (this.config.disableExceptionTracking === false &&\r\n            this.config.enableUnhandledPromiseRejectionTracking === true &&\r\n            !this.config.autoUnhandledPromiseInstrumented && _window) {\r\n            // We want to enable exception auto collection and it has not been done so yet\r\n            var onunhandledrejection = \"onunhandledrejection\";\r\n            var originalOnUnhandledRejection_1 = _window[onunhandledrejection];\r\n            _window[onunhandledrejection] = function (error) {\r\n                var handled = originalOnUnhandledRejection_1 && originalOnUnhandledRejection_1.call(_window, error);\r\n                if (handled !== true) {\r\n                    instance._onerror({\r\n                        message: error.reason.toString(),\r\n                        error: error.reason instanceof Error ? error.reason : new Error(error.reason.toString()),\r\n                        url: _location ? _location.href : \"\",\r\n                        lineNumber: 0,\r\n                        columnNumber: 0\r\n                    });\r\n                }\r\n                return handled;\r\n            };\r\n            this.config.autoUnhandledPromiseInstrumented = true;\r\n        }\r\n        /**\r\n         * Create a custom \"locationchange\" event which is triggered each time the history object is changed\r\n         */\r\n        if (this.config.enableAutoRouteTracking === true\r\n            && _history && CoreUtils.isFunction(_history.pushState) && CoreUtils.isFunction(_history.replaceState)\r\n            && _window\r\n            && typeof Event !== \"undefined\") {\r\n            var _self_1 = this;\r\n            // Find the properties plugin\r\n            CoreUtils.arrForEach(extensions, function (extension) {\r\n                if (extension.identifier === PropertiesPluginIdentifier) {\r\n                    _this._properties = extension;\r\n                }\r\n            });\r\n            _history.pushState = (function (f) { return function pushState() {\r\n                var ret = f.apply(this, arguments);\r\n                _dispatchEvent(_window, Util.createDomEvent(_self_1.config.namePrefix + \"pushState\"));\r\n                _dispatchEvent(_window, Util.createDomEvent(_self_1.config.namePrefix + \"locationchange\"));\r\n                return ret;\r\n            }; })(_history.pushState);\r\n            _history.replaceState = (function (f) { return function replaceState() {\r\n                var ret = f.apply(this, arguments);\r\n                _dispatchEvent(_window, Util.createDomEvent(_self_1.config.namePrefix + \"replaceState\"));\r\n                _dispatchEvent(_window, Util.createDomEvent(_self_1.config.namePrefix + \"locationchange\"));\r\n                return ret;\r\n            }; })(_history.replaceState);\r\n            if (_window.addEventListener) {\r\n                _window.addEventListener(_self_1.config.namePrefix + \"popstate\", function () {\r\n                    _dispatchEvent(_window, Util.createDomEvent(_self_1.config.namePrefix + \"locationchange\"));\r\n                });\r\n                _window.addEventListener(_self_1.config.namePrefix + \"locationchange\", function () {\r\n                    if (_self_1._properties && _self_1._properties.context && _self_1._properties.context.telemetryTrace) {\r\n                        _self_1._properties.context.telemetryTrace.traceID = Util.generateW3CId();\r\n                        _self_1._properties.context.telemetryTrace.name = _location && _location.pathname || \"_unknown_\";\r\n                    }\r\n                    if (_this._currUri) {\r\n                        _this._prevUri = _this._currUri;\r\n                        _this._currUri = _location && _location.href || \"\";\r\n                    }\r\n                    else {\r\n                        _this._currUri = _location && _location.href || \"\";\r\n                    }\r\n                    setTimeout((function (uri) {\r\n                        // todo: override start time so that it is not affected by autoRoutePVDelay\r\n                        _self_1.trackPageView({ refUri: uri, properties: { duration: 0 } }); // SPA route change loading durations are undefined, so send 0\r\n                    }).bind(_this, _this._prevUri), _self_1.autoRoutePVDelay);\r\n                });\r\n            }\r\n        }\r\n        this.setInitialized(true);\r\n    };\r\n    /**\r\n     * Log a page visit time\r\n     * @param    pageName    Name of page\r\n     * @param    pageVisitDuration Duration of visit to the page in milleseconds\r\n     */\r\n    ApplicationInsights.prototype.trackPageVisitTime = function (pageName, pageUrl, pageVisitTime) {\r\n        var properties = { PageName: pageName, PageUrl: pageUrl };\r\n        this.trackMetric({\r\n            name: \"PageVisitTime\",\r\n            average: pageVisitTime,\r\n            max: pageVisitTime,\r\n            min: pageVisitTime,\r\n            sampleCount: 1\r\n        }, properties);\r\n    };\r\n    ApplicationInsights.prototype._addDefaultTelemetryInitializers = function (configGetters) {\r\n        if (!configGetters.isBrowserLinkTrackingEnabled()) {\r\n            var browserLinkPaths_1 = ['/browserLinkSignalR/', '/__browserLink/'];\r\n            var dropBrowserLinkRequests = function (envelope) {\r\n                if (envelope.baseType === RemoteDependencyData.dataType) {\r\n                    var remoteData = envelope.baseData;\r\n                    if (remoteData) {\r\n                        for (var i = 0; i < browserLinkPaths_1.length; i++) {\r\n                            if (remoteData.target && remoteData.target.indexOf(browserLinkPaths_1[i]) >= 0) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return true;\r\n            };\r\n            this._addTelemetryInitializer(dropBrowserLinkRequests);\r\n        }\r\n    };\r\n    ApplicationInsights.prototype._addTelemetryInitializer = function (telemetryInitializer) {\r\n        this._telemetryInitializers.push(telemetryInitializer);\r\n    };\r\n    ApplicationInsights.prototype._sendCORSException = function (url) {\r\n        var exception = {\r\n            message: \"Script error: The browser's same-origin policy prevents us from getting the details of this exception. Consider using the 'crossorigin' attribute.\",\r\n            url: url,\r\n            lineNumber: 0,\r\n            columnNumber: 0,\r\n            error: undefined\r\n        };\r\n        var telemetryItem = TelemetryItemCreator.create(exception, Exception.dataType, Exception.envelopeType, this.diagLog(), { url: url });\r\n        this.core.track(telemetryItem);\r\n    };\r\n    ApplicationInsights.Version = \"2.5.9\"; // Not currently used anywhere\r\n    return ApplicationInsights;\r\n}(BaseTelemetryPlugin));\r\nexport { ApplicationInsights };\r\n/**\r\n * Used to record timed events and page views.\r\n */\r\nvar Timing = /** @class */ (function () {\r\n    function Timing(logger, name) {\r\n        this._name = name;\r\n        this._events = {};\r\n        this._logger = logger;\r\n    }\r\n    Timing.prototype.start = function (name) {\r\n        if (typeof this._events[name] !== \"undefined\") {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StartCalledMoreThanOnce, \"start was called more than once for this event without calling stop.\", { name: this._name, key: name }, true);\r\n        }\r\n        this._events[name] = +new Date;\r\n    };\r\n    Timing.prototype.stop = function (name, url, properties, measurements) {\r\n        var start = this._events[name];\r\n        if (isNaN(start)) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.StopCalledWithoutStart, \"stop was called without a corresponding start.\", { name: this._name, key: name }, true);\r\n        }\r\n        else {\r\n            var end = +new Date;\r\n            var duration = DateTimeUtils.GetDuration(start, end);\r\n            this.action(name, url, duration, properties, measurements);\r\n        }\r\n        delete this._events[name];\r\n        this._events[name] = undefined;\r\n    };\r\n    return Timing;\r\n}());\r\n//# sourceMappingURL=ApplicationInsights.js.map","/*!\n * Application Insights JavaScript SDK - Channel, 2.5.9\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { Util } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId, getJSON, CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nimport dynamicProto from '@microsoft/dynamicproto-js';\r\n/*\r\n * An array based send buffer.\r\n */\r\nvar ArraySendBuffer = /** @class */ (function () {\r\n    function ArraySendBuffer(config) {\r\n        var _buffer = [];\r\n        dynamicProto(ArraySendBuffer, this, function (_self) {\r\n            _self.enqueue = function (payload) {\r\n                _buffer.push(payload);\r\n            };\r\n            _self.count = function () {\r\n                return _buffer.length;\r\n            };\r\n            _self.clear = function () {\r\n                _buffer.length = 0;\r\n            };\r\n            _self.getItems = function () {\r\n                return _buffer.slice(0);\r\n            };\r\n            _self.batchPayloads = function (payload) {\r\n                if (payload && payload.length > 0) {\r\n                    var batch = config.emitLineDelimitedJson() ?\r\n                        payload.join(\"\\n\") :\r\n                        \"[\" + payload.join(\",\") + \"]\";\r\n                    return batch;\r\n                }\r\n                return null;\r\n            };\r\n            _self.markAsSent = function (payload) {\r\n                _self.clear();\r\n            };\r\n            _self.clearSent = function (payload) {\r\n                // not supported\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for ArraySendBuffer.prototype.enqueue.\r\n// Removed Stub for ArraySendBuffer.prototype.count.\r\n// Removed Stub for ArraySendBuffer.prototype.clear.\r\n// Removed Stub for ArraySendBuffer.prototype.getItems.\r\n// Removed Stub for ArraySendBuffer.prototype.batchPayloads.\r\n// Removed Stub for ArraySendBuffer.prototype.markAsSent.\r\n// Removed Stub for ArraySendBuffer.prototype.clearSent.\r\n    return ArraySendBuffer;\r\n}());\r\nexport { ArraySendBuffer };\r\n/*\r\n * Session storage buffer holds a copy of all unsent items in the browser session storage.\r\n */\r\nvar SessionStorageSendBuffer = /** @class */ (function () {\r\n    function SessionStorageSendBuffer(logger, config) {\r\n        var _bufferFullMessageSent = false;\r\n        // An in-memory copy of the buffer. A copy is saved to the session storage on enqueue() and clear().\r\n        // The buffer is restored in a constructor and contains unsent events from a previous page.\r\n        var _buffer;\r\n        dynamicProto(SessionStorageSendBuffer, this, function (_self) {\r\n            var bufferItems = _getBuffer(SessionStorageSendBuffer.BUFFER_KEY);\r\n            var notDeliveredItems = _getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n            _buffer = bufferItems.concat(notDeliveredItems);\r\n            // If the buffer has too many items, drop items from the end.\r\n            if (_buffer.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n                _buffer.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n            }\r\n            _setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n            _setBuffer(SessionStorageSendBuffer.BUFFER_KEY, _buffer);\r\n            _self.enqueue = function (payload) {\r\n                if (_buffer.length >= SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n                    // sent internal log only once per page view\r\n                    if (!_bufferFullMessageSent) {\r\n                        logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SessionStorageBufferFull, \"Maximum buffer size reached: \" + _buffer.length, true);\r\n                        _bufferFullMessageSent = true;\r\n                    }\r\n                    return;\r\n                }\r\n                _buffer.push(payload);\r\n                _setBuffer(SessionStorageSendBuffer.BUFFER_KEY, _buffer);\r\n            };\r\n            _self.count = function () {\r\n                return _buffer.length;\r\n            };\r\n            _self.clear = function () {\r\n                _buffer = [];\r\n                _setBuffer(SessionStorageSendBuffer.BUFFER_KEY, []);\r\n                _setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n                _bufferFullMessageSent = false;\r\n            };\r\n            _self.getItems = function () {\r\n                return _buffer.slice(0);\r\n            };\r\n            _self.batchPayloads = function (payload) {\r\n                if (payload && payload.length > 0) {\r\n                    var batch = config.emitLineDelimitedJson() ?\r\n                        payload.join(\"\\n\") :\r\n                        \"[\" + payload.join(\",\") + \"]\";\r\n                    return batch;\r\n                }\r\n                return null;\r\n            };\r\n            _self.markAsSent = function (payload) {\r\n                _buffer = _removePayloadsFromBuffer(payload, _buffer);\r\n                _setBuffer(SessionStorageSendBuffer.BUFFER_KEY, _buffer);\r\n                var sentElements = _getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n                if (sentElements instanceof Array && payload instanceof Array) {\r\n                    sentElements = sentElements.concat(payload);\r\n                    if (sentElements.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n                        // We send telemetry normally. If the SENT_BUFFER is too big we don't add new elements\r\n                        // until we receive a response from the backend and the buffer has free space again (see clearSent method)\r\n                        logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.SessionStorageBufferFull, \"Sent buffer reached its maximum size: \" + sentElements.length, true);\r\n                        sentElements.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n                    }\r\n                    _setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n                }\r\n            };\r\n            _self.clearSent = function (payload) {\r\n                var sentElements = _getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n                sentElements = _removePayloadsFromBuffer(payload, sentElements);\r\n                _setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n            };\r\n            function _removePayloadsFromBuffer(payloads, buffer) {\r\n                var remaining = [];\r\n                CoreUtils.arrForEach(buffer, function (value) {\r\n                    if (!CoreUtils.isFunction(value) && CoreUtils.arrIndexOf(payloads, value) === -1) {\r\n                        remaining.push(value);\r\n                    }\r\n                });\r\n                return remaining;\r\n            }\r\n            function _getBuffer(key) {\r\n                var prefixedKey = key;\r\n                try {\r\n                    prefixedKey = config.namePrefix && config.namePrefix() ? config.namePrefix() + \"_\" + prefixedKey : prefixedKey;\r\n                    var bufferJson = Util.getSessionStorage(logger, prefixedKey);\r\n                    if (bufferJson) {\r\n                        var buffer = getJSON().parse(bufferJson);\r\n                        if (CoreUtils.isString(buffer)) {\r\n                            // When using some version prototype.js the stringify / parse cycle does not decode array's correctly\r\n                            buffer = getJSON().parse(buffer);\r\n                        }\r\n                        if (buffer && Util.isArray(buffer)) {\r\n                            return buffer;\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedToRestoreStorageBuffer, \" storage key: \" + prefixedKey + \", \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n                return [];\r\n            }\r\n            function _setBuffer(key, buffer) {\r\n                var prefixedKey = key;\r\n                try {\r\n                    prefixedKey = config.namePrefix && config.namePrefix() ? config.namePrefix() + \"_\" + prefixedKey : prefixedKey;\r\n                    var bufferJson = JSON.stringify(buffer);\r\n                    Util.setSessionStorage(logger, prefixedKey, bufferJson);\r\n                }\r\n                catch (e) {\r\n                    // if there was an error, clear the buffer\r\n                    // telemetry is stored in the _buffer array so we won't loose any items\r\n                    Util.setSessionStorage(logger, prefixedKey, JSON.stringify([]));\r\n                    logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedToSetStorageBuffer, \" storage key: \" + prefixedKey + \", \" + Util.getExceptionName(e) + \". Buffer cleared\", { exception: Util.dump(e) });\r\n                }\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for SessionStorageSendBuffer.prototype.enqueue.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.count.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.clear.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.getItems.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.batchPayloads.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.markAsSent.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.clearSent.\r\n    SessionStorageSendBuffer.BUFFER_KEY = \"AI_buffer\";\r\n    SessionStorageSendBuffer.SENT_BUFFER_KEY = \"AI_sentBuffer\";\r\n    // Maximum number of payloads stored in the buffer. If the buffer is full, new elements will be dropped.\r\n    SessionStorageSendBuffer.MAX_BUFFER_SIZE = 2000;\r\n    return SessionStorageSendBuffer;\r\n}());\r\nexport { SessionStorageSendBuffer };\r\n//# sourceMappingURL=SendBuffer.js.map","/*!\n * Application Insights JavaScript SDK - Channel, 2.5.9\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { Data, Envelope, RemoteDependencyData, Event, Exception, Metric, PageView, Trace, PageViewPerformance, CtxTagKeys, HttpMethod, SampleRate, } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId, hasJSON, getJSON } from '@microsoft/applicationinsights-core-js';\r\n// these two constants are used to filter out properties not needed when trying to extract custom properties and measurements from the incoming payload\r\nvar strBaseType = 'baseType';\r\nvar strBaseData = 'baseData';\r\nvar strProperties = 'properties';\r\nvar strTrue = 'true';\r\nvar arrForEach = CoreUtils.arrForEach;\r\nvar objKeys = CoreUtils.objKeys;\r\nvar isNullOrUndefined = CoreUtils.isNullOrUndefined;\r\nfunction _setValueIf(target, field, value) {\r\n    if (target && value) {\r\n        target[field] = value;\r\n        return target[field];\r\n    }\r\n    return null;\r\n}\r\nvar EnvelopeCreator = /** @class */ (function () {\r\n    function EnvelopeCreator() {\r\n    }\r\n    EnvelopeCreator.extractPropsAndMeasurements = function (data, properties, measurements) {\r\n        if (!isNullOrUndefined(data)) {\r\n            arrForEach(objKeys(data), function (key) {\r\n                var value = data[key];\r\n                if (CoreUtils.isNumber(value)) {\r\n                    measurements[key] = value;\r\n                }\r\n                else if (CoreUtils.isString(value)) {\r\n                    properties[key] = value;\r\n                }\r\n                else if (hasJSON()) {\r\n                    properties[key] = getJSON().stringify(value);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    // TODO: Do we want this to take logger as arg or use this._logger as nonstatic?\r\n    EnvelopeCreator.createEnvelope = function (logger, envelopeType, telemetryItem, data) {\r\n        var envelope = new Envelope(logger, data, envelopeType);\r\n        _setValueIf(envelope, 'sampleRate', telemetryItem[SampleRate]);\r\n        if ((telemetryItem[strBaseData] || {}).startTime) {\r\n            envelope.time = CoreUtils.toISOString(telemetryItem[strBaseData].startTime);\r\n        }\r\n        envelope.iKey = telemetryItem.iKey;\r\n        var iKeyNoDashes = telemetryItem.iKey.replace(/-/g, \"\");\r\n        envelope.name = envelope.name.replace(\"{0}\", iKeyNoDashes);\r\n        // extract all extensions from ctx\r\n        EnvelopeCreator.extractPartAExtensions(telemetryItem, envelope);\r\n        // loop through the envelope tags (extension of Part A) and pick out the ones that should go in outgoing envelope tags\r\n        telemetryItem.tags = telemetryItem.tags || [];\r\n        return envelope;\r\n    };\r\n    /*\r\n     * Maps Part A data from CS 4.0\r\n     */\r\n    EnvelopeCreator.extractPartAExtensions = function (item, env) {\r\n        // todo: switch to keys from common in this method\r\n        var envTags = env.tags = env.tags || {};\r\n        var itmExt = item.ext = item.ext || {};\r\n        var itmTags = item.tags = item.tags || [];\r\n        var extUser = itmExt.user;\r\n        if (extUser) {\r\n            _setValueIf(envTags, CtxTagKeys.userAuthUserId, extUser.authId);\r\n            _setValueIf(envTags, CtxTagKeys.userId, extUser.id || extUser.localId);\r\n        }\r\n        var extApp = itmExt.app;\r\n        if (extApp) {\r\n            _setValueIf(envTags, CtxTagKeys.sessionId, extApp.sesId);\r\n        }\r\n        var extDevice = itmExt.device;\r\n        if (extDevice) {\r\n            _setValueIf(envTags, CtxTagKeys.deviceId, extDevice.id || extDevice.localId);\r\n            _setValueIf(envTags, CtxTagKeys.deviceType, extDevice.deviceClass);\r\n            _setValueIf(envTags, CtxTagKeys.deviceIp, extDevice.ip);\r\n            _setValueIf(envTags, CtxTagKeys.deviceModel, extDevice.model);\r\n            _setValueIf(envTags, CtxTagKeys.deviceType, extDevice.deviceType);\r\n        }\r\n        var web = item.ext.web;\r\n        if (web) {\r\n            _setValueIf(envTags, CtxTagKeys.deviceLanguage, web.browserLang);\r\n            _setValueIf(envTags, CtxTagKeys.deviceBrowserVersion, web.browserVer);\r\n            _setValueIf(envTags, CtxTagKeys.deviceBrowser, web.browser);\r\n            var envData = env.data = env.data || {};\r\n            var envBaseData = envData[strBaseData] = envData[strBaseData] || {};\r\n            var envProps = envBaseData[strProperties] = envBaseData[strProperties] || {};\r\n            _setValueIf(envProps, 'domain', web.domain);\r\n            _setValueIf(envProps, 'isManual', web.isManual ? strTrue : null);\r\n            _setValueIf(envProps, 'screenRes', web.screenRes);\r\n            _setValueIf(envProps, 'userConsent', web.userConsent ? strTrue : null);\r\n        }\r\n        var extOs = itmExt.os;\r\n        if (extOs) {\r\n            _setValueIf(envTags, CtxTagKeys.deviceOS, extOs.name);\r\n        }\r\n        // No support for mapping Trace.traceState to 2.0 as it is currently empty\r\n        var extTrace = itmExt.trace;\r\n        if (extTrace) {\r\n            _setValueIf(envTags, CtxTagKeys.operationParentId, extTrace.parentID);\r\n            _setValueIf(envTags, CtxTagKeys.operationName, extTrace.name);\r\n            _setValueIf(envTags, CtxTagKeys.operationId, extTrace.traceID);\r\n        }\r\n        // Sample 4.0 schema\r\n        //  {\r\n        //     \"time\" : \"2018-09-05T22:51:22.4936Z\",\r\n        //     \"name\" : \"MetricWithNamespace\",\r\n        //     \"iKey\" : \"ABC-5a4cbd20-e601-4ef5-a3c6-5d6577e4398e\",\r\n        //     \"ext\": {  \"cloud\": {\r\n        //          \"role\": \"WATSON3\",\r\n        //          \"roleInstance\": \"CO4AEAP00000260\"\r\n        //      },\r\n        //      \"device\": {}, \"correlation\": {} },\r\n        //      \"tags\": [\r\n        //        { \"amazon.region\" : \"east2\" },\r\n        //        { \"os.expid\" : \"wp:02df239\" }\r\n        //     ]\r\n        //   }\r\n        var tgs = {};\r\n        var _loop_1 = function (i) {\r\n            var tg = itmTags[i];\r\n            // CoreUtils.objKeys returns an array of keys\r\n            arrForEach(objKeys(tg), function (key) {\r\n                tgs[key] = tg[key];\r\n            });\r\n            itmTags.splice(i, 1);\r\n        };\r\n        // deals with tags.push({object})\r\n        for (var i = itmTags.length - 1; i >= 0; i--) {\r\n            _loop_1(i);\r\n        }\r\n        // deals with tags[key]=value (and handles hasOwnProperty)\r\n        arrForEach(objKeys(itmTags), function (tg) {\r\n            tgs[tg] = itmTags[tg];\r\n        });\r\n        env.tags = __assign({}, envTags, tgs);\r\n        if (!env.tags[CtxTagKeys.internalSdkVersion]) {\r\n            // Append a version in case it is not already set\r\n            env.tags[CtxTagKeys.internalSdkVersion] = \"javascript:\" + EnvelopeCreator.Version;\r\n        }\r\n    };\r\n    EnvelopeCreator.prototype.Init = function (logger, telemetryItem) {\r\n        this._logger = logger;\r\n        if (isNullOrUndefined(telemetryItem[strBaseData])) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n    };\r\n    EnvelopeCreator.Version = \"2.5.9\";\r\n    return EnvelopeCreator;\r\n}());\r\nexport { EnvelopeCreator };\r\nvar DependencyEnvelopeCreator = /** @class */ (function (_super) {\r\n    __extends(DependencyEnvelopeCreator, _super);\r\n    function DependencyEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DependencyEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        _super.prototype.Init.call(this, logger, telemetryItem);\r\n        var customMeasurements = telemetryItem[strBaseData].measurements || {};\r\n        var customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n        var bd = telemetryItem[strBaseData];\r\n        if (isNullOrUndefined(bd)) {\r\n            logger.warnToConsole(\"Invalid input for dependency data\");\r\n            return null;\r\n        }\r\n        var method = bd[strProperties] && bd[strProperties][HttpMethod] ? bd[strProperties][HttpMethod] : \"GET\";\r\n        var remoteDepData = new RemoteDependencyData(logger, bd.id, bd.target, bd.name, bd.duration, bd.success, bd.responseCode, method, bd.type, bd.correlationContext, customProperties, customMeasurements);\r\n        var data = new Data(RemoteDependencyData.dataType, remoteDepData);\r\n        return EnvelopeCreator.createEnvelope(logger, RemoteDependencyData.envelopeType, telemetryItem, data);\r\n    };\r\n    DependencyEnvelopeCreator.DependencyEnvelopeCreator = new DependencyEnvelopeCreator();\r\n    return DependencyEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { DependencyEnvelopeCreator };\r\nvar EventEnvelopeCreator = /** @class */ (function (_super) {\r\n    __extends(EventEnvelopeCreator, _super);\r\n    function EventEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    EventEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        _super.prototype.Init.call(this, logger, telemetryItem);\r\n        var customProperties = {};\r\n        var customMeasurements = {};\r\n        if (telemetryItem[strBaseType] !== Event.dataType) {\r\n            customProperties['baseTypeSource'] = telemetryItem[strBaseType]; // save the passed in base type as a property\r\n        }\r\n        if (telemetryItem[strBaseType] === Event.dataType) {\r\n            customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n            customMeasurements = telemetryItem[strBaseData].measurements || {};\r\n        }\r\n        else {\r\n            if (telemetryItem[strBaseData]) {\r\n                EnvelopeCreator.extractPropsAndMeasurements(telemetryItem[strBaseData], customProperties, customMeasurements);\r\n            }\r\n        }\r\n        // Extract root level properties from part C telemetryItem.data\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n        var eventName = telemetryItem[strBaseData].name;\r\n        var eventData = new Event(logger, eventName, customProperties, customMeasurements);\r\n        var data = new Data(Event.dataType, eventData);\r\n        return EnvelopeCreator.createEnvelope(logger, Event.envelopeType, telemetryItem, data);\r\n    };\r\n    EventEnvelopeCreator.EventEnvelopeCreator = new EventEnvelopeCreator();\r\n    return EventEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { EventEnvelopeCreator };\r\nvar ExceptionEnvelopeCreator = /** @class */ (function (_super) {\r\n    __extends(ExceptionEnvelopeCreator, _super);\r\n    function ExceptionEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ExceptionEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        _super.prototype.Init.call(this, logger, telemetryItem);\r\n        // Extract root level properties from part C telemetryItem.data\r\n        var customMeasurements = telemetryItem[strBaseData].measurements || {};\r\n        var customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n        var bd = telemetryItem[strBaseData];\r\n        var exData = Exception.CreateFromInterface(logger, bd, customProperties, customMeasurements);\r\n        var data = new Data(Exception.dataType, exData);\r\n        return EnvelopeCreator.createEnvelope(logger, Exception.envelopeType, telemetryItem, data);\r\n    };\r\n    ExceptionEnvelopeCreator.ExceptionEnvelopeCreator = new ExceptionEnvelopeCreator();\r\n    return ExceptionEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { ExceptionEnvelopeCreator };\r\nvar MetricEnvelopeCreator = /** @class */ (function (_super) {\r\n    __extends(MetricEnvelopeCreator, _super);\r\n    function MetricEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    MetricEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        _super.prototype.Init.call(this, logger, telemetryItem);\r\n        var baseData = telemetryItem[strBaseData];\r\n        var props = baseData[strProperties] || {};\r\n        var measurements = baseData.measurements || {};\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, props, measurements);\r\n        var baseMetricData = new Metric(logger, baseData.name, baseData.average, baseData.sampleCount, baseData.min, baseData.max, props, measurements);\r\n        var data = new Data(Metric.dataType, baseMetricData);\r\n        return EnvelopeCreator.createEnvelope(logger, Metric.envelopeType, telemetryItem, data);\r\n    };\r\n    MetricEnvelopeCreator.MetricEnvelopeCreator = new MetricEnvelopeCreator();\r\n    return MetricEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { MetricEnvelopeCreator };\r\nvar PageViewEnvelopeCreator = /** @class */ (function (_super) {\r\n    __extends(PageViewEnvelopeCreator, _super);\r\n    function PageViewEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PageViewEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        _super.prototype.Init.call(this, logger, telemetryItem);\r\n        // Since duration is not part of the domain properties in Common Schema, extract it from part C\r\n        var strDuration = \"duration\";\r\n        var duration;\r\n        var baseData = telemetryItem[strBaseData];\r\n        if (!isNullOrUndefined(baseData) &&\r\n            !isNullOrUndefined(baseData[strProperties]) &&\r\n            !isNullOrUndefined(baseData[strProperties][strDuration])) {\r\n            duration = baseData[strProperties][strDuration];\r\n            delete baseData[strProperties][strDuration];\r\n        }\r\n        else if (!isNullOrUndefined(telemetryItem.data) &&\r\n            !isNullOrUndefined(telemetryItem.data[strDuration])) {\r\n            duration = telemetryItem.data[strDuration];\r\n            delete telemetryItem.data[strDuration];\r\n        }\r\n        var bd = telemetryItem[strBaseData];\r\n        // special case: pageview.id is grabbed from current operation id. Analytics plugin is decoupled from properties plugin, so this is done here instead. This can be made a default telemetry intializer instead if needed to be decoupled from channel\r\n        var currentContextId;\r\n        if (((telemetryItem.ext || {}).trace || {}).traceID) {\r\n            currentContextId = telemetryItem.ext.trace.traceID;\r\n        }\r\n        var id = bd.id || currentContextId;\r\n        var name = bd.name;\r\n        var url = bd.uri;\r\n        var properties = bd[strProperties] || {};\r\n        var measurements = bd.measurements || {};\r\n        // refUri is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!isNullOrUndefined(bd.refUri)) {\r\n            properties[\"refUri\"] = bd.refUri;\r\n        }\r\n        // pageType is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!isNullOrUndefined(bd.pageType)) {\r\n            properties[\"pageType\"] = bd.pageType;\r\n        }\r\n        // isLoggedIn is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!isNullOrUndefined(bd.isLoggedIn)) {\r\n            properties[\"isLoggedIn\"] = bd.isLoggedIn.toString();\r\n        }\r\n        // pageTags is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!isNullOrUndefined(bd[strProperties])) {\r\n            var pageTags_1 = bd[strProperties];\r\n            arrForEach(objKeys(pageTags_1), function (key) {\r\n                properties[key] = pageTags_1[key];\r\n            });\r\n        }\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, properties, measurements);\r\n        var pageViewData = new PageView(logger, name, url, duration, properties, measurements, id);\r\n        var data = new Data(PageView.dataType, pageViewData);\r\n        return EnvelopeCreator.createEnvelope(logger, PageView.envelopeType, telemetryItem, data);\r\n    };\r\n    PageViewEnvelopeCreator.PageViewEnvelopeCreator = new PageViewEnvelopeCreator();\r\n    return PageViewEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { PageViewEnvelopeCreator };\r\nvar PageViewPerformanceEnvelopeCreator = /** @class */ (function (_super) {\r\n    __extends(PageViewPerformanceEnvelopeCreator, _super);\r\n    function PageViewPerformanceEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PageViewPerformanceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        _super.prototype.Init.call(this, logger, telemetryItem);\r\n        var bd = telemetryItem[strBaseData];\r\n        var name = bd.name;\r\n        var url = bd.uri || bd.url;\r\n        var properties = bd[strProperties] || {};\r\n        var measurements = bd.measurements || {};\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, properties, measurements);\r\n        var baseData = new PageViewPerformance(logger, name, url, undefined, properties, measurements, bd);\r\n        var data = new Data(PageViewPerformance.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, PageViewPerformance.envelopeType, telemetryItem, data);\r\n    };\r\n    PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator = new PageViewPerformanceEnvelopeCreator();\r\n    return PageViewPerformanceEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { PageViewPerformanceEnvelopeCreator };\r\nvar TraceEnvelopeCreator = /** @class */ (function (_super) {\r\n    __extends(TraceEnvelopeCreator, _super);\r\n    function TraceEnvelopeCreator() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TraceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n        _super.prototype.Init.call(this, logger, telemetryItem);\r\n        var message = telemetryItem[strBaseData].message;\r\n        var severityLevel = telemetryItem[strBaseData].severityLevel;\r\n        var props = telemetryItem[strBaseData][strProperties] || {};\r\n        var measurements = telemetryItem[strBaseData].measurements || {};\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, props, measurements);\r\n        var baseData = new Trace(logger, message, severityLevel, props, measurements);\r\n        var data = new Data(Trace.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope(logger, Trace.envelopeType, telemetryItem, data);\r\n    };\r\n    TraceEnvelopeCreator.TraceEnvelopeCreator = new TraceEnvelopeCreator();\r\n    return TraceEnvelopeCreator;\r\n}(EnvelopeCreator));\r\nexport { TraceEnvelopeCreator };\r\n//# sourceMappingURL=EnvelopeCreator.js.map","/*!\n * Application Insights JavaScript SDK - Channel, 2.5.9\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { Util, FieldType } from '@microsoft/applicationinsights-common';\r\nimport { LoggingSeverity, _InternalMessageId, CoreUtils, getJSON } from '@microsoft/applicationinsights-core-js';\r\nimport dynamicProto from '@microsoft/dynamicproto-js';\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer(logger) {\r\n        dynamicProto(Serializer, this, function (_self) {\r\n            /**\r\n             * Serializes the current object to a JSON string.\r\n             */\r\n            _self.serialize = function (input) {\r\n                var output = _serializeObject(input, \"root\");\r\n                try {\r\n                    return getJSON().stringify(output);\r\n                }\r\n                catch (e) {\r\n                    // if serialization fails return an empty string\r\n                    logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSerializeObject, (e && CoreUtils.isFunction(e.toString)) ? e.toString() : \"Error serializing object\", null, true);\r\n                }\r\n            };\r\n            function _serializeObject(source, name) {\r\n                var circularReferenceCheck = \"__aiCircularRefCheck\";\r\n                var output = {};\r\n                if (!source) {\r\n                    logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSerializeObject, \"cannot serialize object because it is null or undefined\", { name: name }, true);\r\n                    return output;\r\n                }\r\n                if (source[circularReferenceCheck]) {\r\n                    logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CircularReferenceDetected, \"Circular reference detected while serializing object\", { name: name }, true);\r\n                    return output;\r\n                }\r\n                if (!source.aiDataContract) {\r\n                    // special case for measurements/properties/tags\r\n                    if (name === \"measurements\") {\r\n                        output = _serializeStringMap(source, \"number\", name);\r\n                    }\r\n                    else if (name === \"properties\") {\r\n                        output = _serializeStringMap(source, \"string\", name);\r\n                    }\r\n                    else if (name === \"tags\") {\r\n                        output = _serializeStringMap(source, \"string\", name);\r\n                    }\r\n                    else if (Util.isArray(source)) {\r\n                        output = _serializeArray(source, name);\r\n                    }\r\n                    else {\r\n                        logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.CannotSerializeObjectNonSerializable, \"Attempting to serialize an object which does not implement ISerializable\", { name: name }, true);\r\n                        try {\r\n                            // verify that the object can be stringified\r\n                            getJSON().stringify(source);\r\n                            output = source;\r\n                        }\r\n                        catch (e) {\r\n                            // if serialization fails return an empty string\r\n                            logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSerializeObject, (e && CoreUtils.isFunction(e.toString)) ? e.toString() : \"Error serializing object\", null, true);\r\n                        }\r\n                    }\r\n                    return output;\r\n                }\r\n                source[circularReferenceCheck] = true;\r\n                for (var field in source.aiDataContract) {\r\n                    var contract = source.aiDataContract[field];\r\n                    var isRequired = (CoreUtils.isFunction(contract)) ? (contract() & FieldType.Required) : (contract & FieldType.Required);\r\n                    var isHidden = (CoreUtils.isFunction(contract)) ? (contract() & FieldType.Hidden) : (contract & FieldType.Hidden);\r\n                    var isArray = contract & FieldType.Array;\r\n                    var isPresent = source[field] !== undefined;\r\n                    var isObject = CoreUtils.isObject(source[field]) && source[field] !== null;\r\n                    if (isRequired && !isPresent && !isArray) {\r\n                        logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.MissingRequiredFieldSpecification, \"Missing required field specification. The field is required but not present on source\", { field: field, name: name });\r\n                        // If not in debug mode, continue and hope the error is permissible\r\n                        continue;\r\n                    }\r\n                    if (isHidden) {\r\n                        // Don't serialize hidden fields\r\n                        continue;\r\n                    }\r\n                    var value = void 0;\r\n                    if (isObject) {\r\n                        if (isArray) {\r\n                            // special case; recurse on each object in the source array\r\n                            value = _serializeArray(source[field], field);\r\n                        }\r\n                        else {\r\n                            // recurse on the source object in this field\r\n                            value = _serializeObject(source[field], field);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // assign the source field to the output even if undefined or required\r\n                        value = source[field];\r\n                    }\r\n                    // only emit this field if the value is defined\r\n                    if (value !== undefined) {\r\n                        output[field] = value;\r\n                    }\r\n                }\r\n                delete source[circularReferenceCheck];\r\n                return output;\r\n            }\r\n            function _serializeArray(sources, name) {\r\n                var output;\r\n                if (!!sources) {\r\n                    if (!Util.isArray(sources)) {\r\n                        logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ItemNotInArray, \"This field was specified as an array in the contract but the item is not an array.\\r\\n\", { name: name }, true);\r\n                    }\r\n                    else {\r\n                        output = [];\r\n                        for (var i = 0; i < sources.length; i++) {\r\n                            var source = sources[i];\r\n                            var item = _serializeObject(source, name + \"[\" + i + \"]\");\r\n                            output.push(item);\r\n                        }\r\n                    }\r\n                }\r\n                return output;\r\n            }\r\n            function _serializeStringMap(map, expectedType, name) {\r\n                var output;\r\n                if (map) {\r\n                    output = {};\r\n                    for (var field in map) {\r\n                        var value = map[field];\r\n                        if (expectedType === \"string\") {\r\n                            if (value === undefined) {\r\n                                output[field] = \"undefined\";\r\n                            }\r\n                            else if (value === null) {\r\n                                output[field] = \"null\";\r\n                            }\r\n                            else if (!value.toString) {\r\n                                output[field] = \"invalid field: toString() is not defined.\";\r\n                            }\r\n                            else {\r\n                                output[field] = value.toString();\r\n                            }\r\n                        }\r\n                        else if (expectedType === \"number\") {\r\n                            if (value === undefined) {\r\n                                output[field] = \"undefined\";\r\n                            }\r\n                            else if (value === null) {\r\n                                output[field] = \"null\";\r\n                            }\r\n                            else {\r\n                                var num = parseFloat(value);\r\n                                if (isNaN(num)) {\r\n                                    output[field] = \"NaN\";\r\n                                }\r\n                                else {\r\n                                    output[field] = num;\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            output[field] = \"invalid field: \" + name + \" is of unknown type.\";\r\n                            logger.throwInternal(LoggingSeverity.CRITICAL, output[field], null, true);\r\n                        }\r\n                    }\r\n                }\r\n                return output;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for Serializer.prototype.serialize.\r\n    return Serializer;\r\n}());\r\nexport { Serializer };\r\n//# sourceMappingURL=Serializer.js.map","/*!\n * Application Insights JavaScript SDK - Channel, 2.5.9\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { CoreUtils, EventHelper, getWindow, getDocument, getNavigator } from '@microsoft/applicationinsights-core-js';\r\nimport dynamicProto from '@microsoft/dynamicproto-js';\r\n/**\r\n * @description Monitors browser for offline events\r\n * @export default - Offline: Static instance of OfflineListener\r\n * @class OfflineListener\r\n */\r\nvar OfflineListener = /** @class */ (function () {\r\n    function OfflineListener() {\r\n        var _window = getWindow();\r\n        var _document = getDocument();\r\n        var isListening = false;\r\n        var _onlineStatus = true;\r\n        dynamicProto(OfflineListener, this, function (_self) {\r\n            try {\r\n                if (_window) {\r\n                    if (EventHelper.Attach(_window, 'online', _setOnline)) {\r\n                        EventHelper.Attach(_window, 'offline', _setOffline);\r\n                        isListening = true;\r\n                    }\r\n                }\r\n                if (_document) {\r\n                    // Also attach to the document.body or document\r\n                    var target = _document.body || _document;\r\n                    if (!CoreUtils.isUndefined(target.ononline)) {\r\n                        target.ononline = _setOnline;\r\n                        target.onoffline = _setOffline;\r\n                        isListening = true;\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                // this makes react-native less angry\r\n                isListening = false;\r\n            }\r\n            _self.isListening = isListening;\r\n            _self.isOnline = function () {\r\n                var result = true;\r\n                var _navigator = getNavigator();\r\n                if (isListening) {\r\n                    result = _onlineStatus;\r\n                }\r\n                else if (_navigator && !CoreUtils.isNullOrUndefined(_navigator.onLine)) {\r\n                    result = _navigator.onLine;\r\n                }\r\n                return result;\r\n            };\r\n            _self.isOffline = function () {\r\n                return !_self.isOnline();\r\n            };\r\n            function _setOnline() {\r\n                _onlineStatus = true;\r\n            }\r\n            function _setOffline() {\r\n                _onlineStatus = false;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for OfflineListener.prototype.isOnline.\r\n// Removed Stub for OfflineListener.prototype.isOffline.\r\n    OfflineListener.Offline = new OfflineListener;\r\n    return OfflineListener;\r\n}());\r\nexport { OfflineListener };\r\nexport var Offline = OfflineListener.Offline;\r\n//# sourceMappingURL=Offline.js.map","/*!\n * Application Insights JavaScript SDK - Channel, 2.5.9\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar HashCodeScoreGenerator = /** @class */ (function () {\r\n    function HashCodeScoreGenerator() {\r\n    }\r\n    HashCodeScoreGenerator.prototype.getHashCodeScore = function (key) {\r\n        var score = this.getHashCode(key) / HashCodeScoreGenerator.INT_MAX_VALUE;\r\n        return score * 100;\r\n    };\r\n    HashCodeScoreGenerator.prototype.getHashCode = function (input) {\r\n        if (input === \"\") {\r\n            return 0;\r\n        }\r\n        while (input.length < HashCodeScoreGenerator.MIN_INPUT_LENGTH) {\r\n            input = input.concat(input);\r\n        }\r\n        // 5381 is a magic number: http://stackoverflow.com/questions/10696223/reason-for-5381-number-in-djb-hash-function\r\n        var hash = 5381;\r\n        for (var i = 0; i < input.length; ++i) {\r\n            hash = ((hash << 5) + hash) + input.charCodeAt(i);\r\n            // 'hash' is of number type which means 53 bit integer (http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types-number-type)\r\n            // 'hash & hash' will keep it 32 bit integer - just to make it clearer what the result is.\r\n            hash = hash & hash;\r\n        }\r\n        return Math.abs(hash);\r\n    };\r\n    // We're using 32 bit math, hence max value is (2^31 - 1)\r\n    HashCodeScoreGenerator.INT_MAX_VALUE = 2147483647;\r\n    // (Magic number) DJB algorithm can't work on shorter strings (results in poor distribution\r\n    HashCodeScoreGenerator.MIN_INPUT_LENGTH = 8;\r\n    return HashCodeScoreGenerator;\r\n}());\r\nexport { HashCodeScoreGenerator };\r\n//# sourceMappingURL=HashCodeScoreGenerator.js.map","/*!\n * Application Insights JavaScript SDK - Channel, 2.5.9\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { HashCodeScoreGenerator } from './HashCodeScoreGenerator';\r\nimport { ContextTagKeys } from '@microsoft/applicationinsights-common';\r\nvar SamplingScoreGenerator = /** @class */ (function () {\r\n    function SamplingScoreGenerator() {\r\n        this.hashCodeGeneragor = new HashCodeScoreGenerator();\r\n        this.keys = new ContextTagKeys();\r\n    }\r\n    SamplingScoreGenerator.prototype.getSamplingScore = function (item) {\r\n        var score = 0;\r\n        if (item.tags && item.tags[this.keys.userId]) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.tags[this.keys.userId]);\r\n        }\r\n        else if (item.ext && item.ext.user && item.ext.user.id) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.ext.user.id);\r\n        }\r\n        else if (item.tags && item.tags[this.keys.operationId]) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.tags[this.keys.operationId]);\r\n        }\r\n        else if (item.ext && item.ext.telemetryTrace && item.ext.telemetryTrace.traceID) {\r\n            score = this.hashCodeGeneragor.getHashCodeScore(item.ext.telemetryTrace.traceID);\r\n        }\r\n        else {\r\n            // tslint:disable-next-line:insecure-random\r\n            score = (Math.random() * 100);\r\n        }\r\n        return score;\r\n    };\r\n    return SamplingScoreGenerator;\r\n}());\r\nexport { SamplingScoreGenerator };\r\n//# sourceMappingURL=SamplingScoreGenerator.js.map","/*!\n * Application Insights JavaScript SDK - Channel, 2.5.9\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { SamplingScoreGenerator } from './SamplingScoreGenerators/SamplingScoreGenerator';\r\nimport { Metric } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity, DiagnosticLogger, CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar Sample = /** @class */ (function () {\r\n    function Sample(sampleRate, logger) {\r\n        // We're using 32 bit math, hence max value is (2^31 - 1)\r\n        this.INT_MAX_VALUE = 2147483647;\r\n        this._logger = CoreUtils.isNullOrUndefined(logger) ? new DiagnosticLogger() : logger;\r\n        if (sampleRate > 100 || sampleRate < 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SampleRateOutOfRange, \"Sampling rate is out of range (0..100). Sampling will be disabled, you may be sending too much data which may affect your AI service level.\", { samplingRate: sampleRate }, true);\r\n            this.sampleRate = 100;\r\n        }\r\n        this.sampleRate = sampleRate;\r\n        this.samplingScoreGenerator = new SamplingScoreGenerator();\r\n    }\r\n    /**\r\n     * Determines if an envelope is sampled in (i.e. will be sent) or not (i.e. will be dropped).\r\n     */\r\n    Sample.prototype.isSampledIn = function (envelope) {\r\n        var samplingPercentage = this.sampleRate; // 0 - 100\r\n        var isSampledIn = false;\r\n        if (samplingPercentage === null || samplingPercentage === undefined || samplingPercentage >= 100) {\r\n            return true;\r\n        }\r\n        else if (envelope.baseType === Metric.dataType) {\r\n            // exclude MetricData telemetry from sampling\r\n            return true;\r\n        }\r\n        isSampledIn = this.samplingScoreGenerator.getSamplingScore(envelope) < samplingPercentage;\r\n        return isSampledIn;\r\n    };\r\n    return Sample;\r\n}());\r\nexport { Sample };\r\n//# sourceMappingURL=Sample.js.map","/*!\n * Application Insights JavaScript SDK - Channel, 2.5.9\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { SessionStorageSendBuffer, ArraySendBuffer } from './SendBuffer';\r\nimport { DependencyEnvelopeCreator, EventEnvelopeCreator, ExceptionEnvelopeCreator, MetricEnvelopeCreator, PageViewEnvelopeCreator, PageViewPerformanceEnvelopeCreator, TraceEnvelopeCreator } from './EnvelopeCreator';\r\nimport { Serializer } from './Serializer'; // todo move to channel\r\nimport { DisabledPropertyName, RequestHeaders, Util, PageView, Event, Trace, Exception, Metric, PageViewPerformance, RemoteDependencyData, ProcessLegacy, BreezeChannelIdentifier, SampleRate } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, _InternalMessageId, LoggingSeverity, getWindow, getNavigator, getJSON, BaseTelemetryPlugin, getGlobalInst } from '@microsoft/applicationinsights-core-js';\r\nimport { Offline } from './Offline';\r\nimport { Sample } from './TelemetryProcessors/Sample';\r\nimport dynamicProto from '@microsoft/dynamicproto-js';\r\nfunction _getResponseText(xhr) {\r\n    try {\r\n        return xhr.responseText;\r\n    }\r\n    catch (e) {\r\n        // Best effort, as XHR may throw while XDR wont so just ignore\r\n    }\r\n    return null;\r\n}\r\nvar Sender = /** @class */ (function (_super) {\r\n    __extends(Sender, _super);\r\n    function Sender() {\r\n        var _this = _super.call(this) || this;\r\n        _this.priority = 1001;\r\n        _this.identifier = BreezeChannelIdentifier;\r\n        /**\r\n         * Whether XMLHttpRequest object is supported. Older version of IE (8,9) do not support it.\r\n         */\r\n        _this._XMLHttpRequestSupported = false;\r\n        /**\r\n         * How many times in a row a retryable error condition has occurred.\r\n         */\r\n        var _consecutiveErrors;\r\n        /**\r\n         * The time to retry at in milliseconds from 1970/01/01 (this makes the timer calculation easy).\r\n         */\r\n        var _retryAt;\r\n        /**\r\n         * The time of the last send operation.\r\n         */\r\n        var _lastSend;\r\n        /**\r\n         * Handle to the timer for delayed sending of batches of data.\r\n         */\r\n        var _timeoutHandle;\r\n        var _serializer;\r\n        dynamicProto(Sender, _this, function (_self, _base) {\r\n            function _notImplemented() {\r\n                throw new Error(\"Method not implemented.\");\r\n            }\r\n            _self.pause = _notImplemented;\r\n            _self.resume = _notImplemented;\r\n            _self.flush = function () {\r\n                try {\r\n                    _self.triggerSend(true, null, 1 /* ManualFlush */);\r\n                }\r\n                catch (e) {\r\n                    _self.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FlushFailed, \"flush failed, telemetry will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n            };\r\n            _self.onunloadFlush = function () {\r\n                if ((_self._senderConfig.onunloadDisableBeacon() === false || _self._senderConfig.isBeaconApiDisabled() === false) && Util.IsBeaconApiSupported()) {\r\n                    try {\r\n                        _self.triggerSend(true, _beaconSender, 2 /* Unload */);\r\n                    }\r\n                    catch (e) {\r\n                        _self.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedToSendQueuedTelemetry, \"failed to flush with beacon sender on page unload, telemetry will not be collected: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                    }\r\n                }\r\n                else {\r\n                    _self.flush();\r\n                }\r\n            };\r\n            _self.teardown = _notImplemented;\r\n            _self.initialize = function (config, core, extensions, pluginChain) {\r\n                _base.initialize(config, core, extensions, pluginChain);\r\n                var ctx = _self._getTelCtx();\r\n                var identifier = _self.identifier;\r\n                _serializer = new Serializer(core.logger);\r\n                _consecutiveErrors = 0;\r\n                _retryAt = null;\r\n                _lastSend = 0;\r\n                _self._sender = null;\r\n                var defaultConfig = Sender._getDefaultAppInsightsChannelConfig();\r\n                _self._senderConfig = Sender._getEmptyAppInsightsChannelConfig();\r\n                var _loop_1 = function (field) {\r\n                    _self._senderConfig[field] = function () { return ctx.getConfig(identifier, field, defaultConfig[field]()); };\r\n                };\r\n                for (var field in defaultConfig) {\r\n                    _loop_1(field);\r\n                }\r\n                _self._buffer = (_self._senderConfig.enableSessionStorageBuffer() && Util.canUseSessionStorage())\r\n                    ? new SessionStorageSendBuffer(_self.diagLog(), _self._senderConfig) : new ArraySendBuffer(_self._senderConfig);\r\n                _self._sample = new Sample(_self._senderConfig.samplingPercentage(), _self.diagLog());\r\n                if (!_validateInstrumentationKey(config)) {\r\n                    _self.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.InvalidInstrumentationKey, \"Invalid Instrumentation key \" + config.instrumentationKey);\r\n                }\r\n                if (!_self._senderConfig.isBeaconApiDisabled() && Util.IsBeaconApiSupported()) {\r\n                    _self._sender = _beaconSender;\r\n                }\r\n                else {\r\n                    if (typeof XMLHttpRequest !== undefined) {\r\n                        var xhr = getGlobalInst(\"XMLHttpRequest\");\r\n                        if (xhr) {\r\n                            var testXhr = new xhr();\r\n                            if (\"withCredentials\" in testXhr) {\r\n                                _self._sender = _xhrSender;\r\n                                _self._XMLHttpRequestSupported = true;\r\n                            }\r\n                            else if (typeof XDomainRequest !== undefined) {\r\n                                _self._sender = _xdrSender; // IE 8 and 9\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            _self.processTelemetry = function (telemetryItem, itemCtx) {\r\n                itemCtx = _self._getTelCtx(itemCtx);\r\n                try {\r\n                    // if master off switch is set, don't send any data\r\n                    if (_self._senderConfig.disableTelemetry()) {\r\n                        // Do not send/save data\r\n                        return;\r\n                    }\r\n                    // validate input\r\n                    if (!telemetryItem) {\r\n                        itemCtx.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CannotSendEmptyTelemetry, \"Cannot send empty telemetry\");\r\n                        return;\r\n                    }\r\n                    // validate event\r\n                    if (telemetryItem.baseData && !telemetryItem.baseType) {\r\n                        itemCtx.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.InvalidEvent, \"Cannot send telemetry without baseData and baseType\");\r\n                        return;\r\n                    }\r\n                    if (!telemetryItem.baseType) {\r\n                        // Default\r\n                        telemetryItem.baseType = \"EventData\";\r\n                    }\r\n                    // ensure a sender was constructed\r\n                    if (!_self._sender) {\r\n                        itemCtx.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.SenderNotInitialized, \"Sender was not initialized\");\r\n                        return;\r\n                    }\r\n                    // check if this item should be sampled in, else add sampleRate tag\r\n                    if (!_isSampledIn(telemetryItem)) {\r\n                        // Item is sampled out, do not send it\r\n                        itemCtx.diagLog().throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TelemetrySampledAndNotSent, \"Telemetry item was sampled out and not sent\", { SampleRate: _self._sample.sampleRate });\r\n                        return;\r\n                    }\r\n                    else {\r\n                        telemetryItem[SampleRate] = _self._sample.sampleRate;\r\n                    }\r\n                    // construct an envelope that Application Insights endpoint can understand\r\n                    var aiEnvelope_1 = Sender.constructEnvelope(telemetryItem, _self._senderConfig.instrumentationKey(), itemCtx.diagLog());\r\n                    if (!aiEnvelope_1) {\r\n                        itemCtx.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.CreateEnvelopeError, \"Unable to create an AppInsights envelope\");\r\n                        return;\r\n                    }\r\n                    var doNotSendItem_1 = false;\r\n                    // this is for running in legacy mode, where customer may already have a custom initializer present\r\n                    if (telemetryItem.tags && telemetryItem.tags[ProcessLegacy]) {\r\n                        CoreUtils.arrForEach(telemetryItem.tags[ProcessLegacy], function (callBack) {\r\n                            try {\r\n                                if (callBack && callBack(aiEnvelope_1) === false) {\r\n                                    doNotSendItem_1 = true;\r\n                                    itemCtx.diagLog().warnToConsole(\"Telemetry processor check returns false\");\r\n                                }\r\n                            }\r\n                            catch (e) {\r\n                                // log error but dont stop executing rest of the telemetry initializers\r\n                                // doNotSendItem = true;\r\n                                itemCtx.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TelemetryInitializerFailed, \"One of telemetry initializers failed, telemetry item will not be sent: \" + Util.getExceptionName(e), { exception: Util.dump(e) }, true);\r\n                            }\r\n                        });\r\n                        delete telemetryItem.tags[ProcessLegacy];\r\n                    }\r\n                    if (doNotSendItem_1) {\r\n                        return; // do not send, no need to execute next plugin\r\n                    }\r\n                    // check if the incoming payload is too large, truncate if necessary\r\n                    var payload = _serializer.serialize(aiEnvelope_1);\r\n                    // flush if we would exceed the max-size limit by adding this item\r\n                    var bufferPayload = _self._buffer.getItems();\r\n                    var batch = _self._buffer.batchPayloads(bufferPayload);\r\n                    if (batch && (batch.length + payload.length > _self._senderConfig.maxBatchSizeInBytes())) {\r\n                        _self.triggerSend(true, null, 10 /* MaxBatchSize */);\r\n                    }\r\n                    // enqueue the payload\r\n                    _self._buffer.enqueue(payload);\r\n                    // ensure an invocation timeout is set\r\n                    _setupTimer();\r\n                }\r\n                catch (e) {\r\n                    itemCtx.diagLog().throwInternal(LoggingSeverity.WARNING, _InternalMessageId.FailedAddingTelemetryToBuffer, \"Failed adding telemetry to the sender's buffer, some telemetry will be lost: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n                // hand off the telemetry item to the next plugin\r\n                _self.processNext(telemetryItem, itemCtx);\r\n            };\r\n            /**\r\n             * xhr state changes\r\n             */\r\n            _self._xhrReadyStateChange = function (xhr, payload, countOfItemsInPayload) {\r\n                if (xhr.readyState === 4) {\r\n                    var response = null;\r\n                    if (!_self._appId) {\r\n                        response = _parseResponse(_getResponseText(xhr) || xhr.response);\r\n                        if (response && response.appId) {\r\n                            _self._appId = response.appId;\r\n                        }\r\n                    }\r\n                    if ((xhr.status < 200 || xhr.status >= 300) && xhr.status !== 0) {\r\n                        if (!_self._senderConfig.isRetryDisabled() && _isRetriable(xhr.status)) {\r\n                            _resendPayload(payload);\r\n                            _self.diagLog().throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" +\r\n                                \"Response code \" + xhr.status + \". Will retry to send \" + payload.length + \" items.\");\r\n                        }\r\n                        else {\r\n                            _self._onError(payload, _formatErrorMessageXhr(xhr));\r\n                        }\r\n                    }\r\n                    else if (Offline.isOffline()) {\r\n                        // Note: Don't check for status == 0, since adblock gives this code\r\n                        if (!_self._senderConfig.isRetryDisabled()) {\r\n                            var offlineBackOffMultiplier = 10; // arbritrary number\r\n                            _resendPayload(payload, offlineBackOffMultiplier);\r\n                            _self.diagLog().throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". Offline - Response Code: \" + xhr.status + \". Offline status: \" + Offline.isOffline() + \". Will retry to send \" + payload.length + \" items.\");\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (xhr.status === 206) {\r\n                            if (!response) {\r\n                                response = _parseResponse(_getResponseText(xhr) || xhr.response);\r\n                            }\r\n                            if (response && !_self._senderConfig.isRetryDisabled()) {\r\n                                _self._onPartialSuccess(payload, response);\r\n                            }\r\n                            else {\r\n                                _self._onError(payload, _formatErrorMessageXhr(xhr));\r\n                            }\r\n                        }\r\n                        else {\r\n                            _consecutiveErrors = 0;\r\n                            _self._onSuccess(payload, countOfItemsInPayload);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            /**\r\n             * Immediately send buffered data\r\n             * @param async {boolean} - Indicates if the events should be sent asynchronously\r\n             * @param forcedSender {SenderFunction} - Indicates the forcedSender, undefined if not passed\r\n             */\r\n            _self.triggerSend = function (async, forcedSender, sendReason) {\r\n                if (async === void 0) { async = true; }\r\n                try {\r\n                    // Send data only if disableTelemetry is false\r\n                    if (!_self._senderConfig.disableTelemetry()) {\r\n                        if (_self._buffer.count() > 0) {\r\n                            var payload = _self._buffer.getItems();\r\n                            _notifySendRequest(sendReason || 0 /* Undefined */, async);\r\n                            // invoke send\r\n                            if (forcedSender) {\r\n                                forcedSender.call(_this, payload, async);\r\n                            }\r\n                            else {\r\n                                _self._sender(payload, async);\r\n                            }\r\n                        }\r\n                        // update lastSend time to enable throttling\r\n                        _lastSend = +new Date;\r\n                    }\r\n                    else {\r\n                        _self._buffer.clear();\r\n                    }\r\n                    clearTimeout(_timeoutHandle);\r\n                    _timeoutHandle = null;\r\n                    _retryAt = null;\r\n                }\r\n                catch (e) {\r\n                    /* Ignore this error for IE under v10 */\r\n                    var ieVer = Util.getIEVersion();\r\n                    if (!ieVer || ieVer > 9) {\r\n                        _self.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.TransmissionFailed, \"Telemetry transmission failed, some telemetry will be lost: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                    }\r\n                }\r\n            };\r\n            /**\r\n             * error handler\r\n             */\r\n            _self._onError = function (payload, message, event) {\r\n                _self.diagLog().throwInternal(LoggingSeverity.WARNING, _InternalMessageId.OnError, \"Failed to send telemetry.\", { message: message });\r\n                _self._buffer.clearSent(payload);\r\n            };\r\n            /**\r\n             * partial success handler\r\n             */\r\n            _self._onPartialSuccess = function (payload, results) {\r\n                var failed = [];\r\n                var retry = [];\r\n                // Iterate through the reversed array of errors so that splicing doesn't have invalid indexes after the first item.\r\n                var errors = results.errors.reverse();\r\n                for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\r\n                    var error = errors_1[_i];\r\n                    var extracted = payload.splice(error.index, 1)[0];\r\n                    if (_isRetriable(error.statusCode)) {\r\n                        retry.push(extracted);\r\n                    }\r\n                    else {\r\n                        // All other errors, including: 402 (Monthly quota exceeded) and 439 (Too many requests and refresh cache).\r\n                        failed.push(extracted);\r\n                    }\r\n                }\r\n                if (payload.length > 0) {\r\n                    _self._onSuccess(payload, results.itemsAccepted);\r\n                }\r\n                if (failed.length > 0) {\r\n                    _self._onError(failed, _formatErrorMessageXhr(null, ['partial success', results.itemsAccepted, 'of', results.itemsReceived].join(' ')));\r\n                }\r\n                if (retry.length > 0) {\r\n                    _resendPayload(retry);\r\n                    _self.diagLog().throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \"Partial success. \" +\r\n                        \"Delivered: \" + payload.length + \", Failed: \" + failed.length +\r\n                        \". Will retry to send \" + retry.length + \" our of \" + results.itemsReceived + \" items\");\r\n                }\r\n            };\r\n            /**\r\n             * success handler\r\n             */\r\n            _self._onSuccess = function (payload, countOfItemsInPayload) {\r\n                _self._buffer.clearSent(payload);\r\n            };\r\n            /**\r\n             * xdr state changes\r\n             */\r\n            _self._xdrOnLoad = function (xdr, payload) {\r\n                var responseText = _getResponseText(xdr);\r\n                if (xdr && (responseText + \"\" === \"200\" || responseText === \"\")) {\r\n                    _consecutiveErrors = 0;\r\n                    _self._onSuccess(payload, 0);\r\n                }\r\n                else {\r\n                    var results = _parseResponse(responseText);\r\n                    if (results && results.itemsReceived && results.itemsReceived > results.itemsAccepted\r\n                        && !_self._senderConfig.isRetryDisabled()) {\r\n                        _self._onPartialSuccess(payload, results);\r\n                    }\r\n                    else {\r\n                        _self._onError(payload, _formatErrorMessageXdr(xdr));\r\n                    }\r\n                }\r\n            };\r\n            function _isSampledIn(envelope) {\r\n                return _self._sample.isSampledIn(envelope);\r\n            }\r\n            /**\r\n             * Send Beacon API request\r\n             * @param payload {string} - The data payload to be sent.\r\n             * @param isAsync {boolean} - not used\r\n             * Note: Beacon API does not support custom headers and we are not able to get\r\n             * appId from the backend for the correct correlation.\r\n             */\r\n            function _beaconSender(payload, isAsync) {\r\n                var url = _self._senderConfig.endpointUrl();\r\n                var batch = _self._buffer.batchPayloads(payload);\r\n                // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n                // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n                var plainTextBatch = new Blob([batch], { type: 'text/plain;charset=UTF-8' });\r\n                // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n                var queued = getNavigator().sendBeacon(url, plainTextBatch);\r\n                if (queued) {\r\n                    _self._buffer.markAsSent(payload);\r\n                    // no response from beaconSender, clear buffer\r\n                    _self._onSuccess(payload, payload.length);\r\n                }\r\n                else {\r\n                    _xhrSender(payload, true);\r\n                    _self.diagLog().throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" + \"Failed to send telemetry with Beacon API, retried with xhrSender.\");\r\n                }\r\n            }\r\n            /**\r\n             * Send XMLHttpRequest\r\n             * @param payload {string} - The data payload to be sent.\r\n             * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n             */\r\n            function _xhrSender(payload, isAsync) {\r\n                var xhr = new XMLHttpRequest();\r\n                var endPointUrl = _self._senderConfig.endpointUrl();\r\n                try {\r\n                    xhr[DisabledPropertyName] = true;\r\n                }\r\n                catch (e) {\r\n                    // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n                    // cause the request to fail and we no telemetry would be sent\r\n                }\r\n                xhr.open(\"POST\", endPointUrl, isAsync);\r\n                xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n                // append Sdk-Context request header only in case of breeze endpoint\r\n                if (Util.isInternalApplicationInsightsEndpoint(endPointUrl)) {\r\n                    xhr.setRequestHeader(RequestHeaders.sdkContextHeader, RequestHeaders.sdkContextHeaderAppIdRequest);\r\n                }\r\n                xhr.onreadystatechange = function () { return _self._xhrReadyStateChange(xhr, payload, payload.length); };\r\n                xhr.onerror = function (event) { return _self._onError(payload, _formatErrorMessageXhr(xhr), event); };\r\n                // compose an array of payloads\r\n                var batch = _self._buffer.batchPayloads(payload);\r\n                xhr.send(batch);\r\n                _self._buffer.markAsSent(payload);\r\n            }\r\n            /**\r\n             * Parses the response from the backend.\r\n             * @param response - XMLHttpRequest or XDomainRequest response\r\n             */\r\n            function _parseResponse(response) {\r\n                try {\r\n                    if (response && response !== \"\") {\r\n                        var result = getJSON().parse(response);\r\n                        if (result && result.itemsReceived && result.itemsReceived >= result.itemsAccepted &&\r\n                            result.itemsReceived - result.itemsAccepted === result.errors.length) {\r\n                            return result;\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _self.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.InvalidBackendResponse, \"Cannot parse the response. \" + Util.getExceptionName(e), {\r\n                        response: response\r\n                    });\r\n                }\r\n                return null;\r\n            }\r\n            /**\r\n             * Resend payload. Adds payload back to the send buffer and setup a send timer (with exponential backoff).\r\n             * @param payload\r\n             */\r\n            function _resendPayload(payload, linearFactor) {\r\n                if (linearFactor === void 0) { linearFactor = 1; }\r\n                if (!payload || payload.length === 0) {\r\n                    return;\r\n                }\r\n                _self._buffer.clearSent(payload);\r\n                _consecutiveErrors++;\r\n                for (var _i = 0, payload_1 = payload; _i < payload_1.length; _i++) {\r\n                    var item = payload_1[_i];\r\n                    _self._buffer.enqueue(item);\r\n                }\r\n                // setup timer\r\n                _setRetryTime(linearFactor);\r\n                _setupTimer();\r\n            }\r\n            /**\r\n             * Calculates the time to wait before retrying in case of an error based on\r\n             * http://en.wikipedia.org/wiki/Exponential_backoff\r\n             */\r\n            function _setRetryTime(linearFactor) {\r\n                var SlotDelayInSeconds = 10;\r\n                var delayInSeconds;\r\n                if (_consecutiveErrors <= 1) {\r\n                    delayInSeconds = SlotDelayInSeconds;\r\n                }\r\n                else {\r\n                    var backOffSlot = (Math.pow(2, _consecutiveErrors) - 1) / 2;\r\n                    // tslint:disable-next-line:insecure-random\r\n                    var backOffDelay = Math.floor(Math.random() * backOffSlot * SlotDelayInSeconds) + 1;\r\n                    backOffDelay = linearFactor * backOffDelay;\r\n                    delayInSeconds = Math.max(Math.min(backOffDelay, 3600), SlotDelayInSeconds);\r\n                }\r\n                // TODO: Log the backoff time like the C# version does.\r\n                var retryAfterTimeSpan = CoreUtils.dateNow() + (delayInSeconds * 1000);\r\n                // TODO: Log the retry at time like the C# version does.\r\n                _retryAt = retryAfterTimeSpan;\r\n            }\r\n            /**\r\n             * Sets up the timer which triggers actually sending the data.\r\n             */\r\n            function _setupTimer() {\r\n                if (!_timeoutHandle) {\r\n                    var retryInterval = _retryAt ? Math.max(0, _retryAt - CoreUtils.dateNow()) : 0;\r\n                    var timerValue = Math.max(_self._senderConfig.maxBatchInterval(), retryInterval);\r\n                    _timeoutHandle = setTimeout(function () {\r\n                        _self.triggerSend(true, null, 1 /* NormalSchedule */);\r\n                    }, timerValue);\r\n                }\r\n            }\r\n            /**\r\n             * Checks if the SDK should resend the payload after receiving this status code from the backend.\r\n             * @param statusCode\r\n             */\r\n            function _isRetriable(statusCode) {\r\n                return statusCode === 408 // Timeout\r\n                    || statusCode === 429 // Too many requests.\r\n                    || statusCode === 500 // Internal server error.\r\n                    || statusCode === 503; // Service unavailable.\r\n            }\r\n            function _formatErrorMessageXhr(xhr, message) {\r\n                if (xhr) {\r\n                    return \"XMLHttpRequest,Status:\" + xhr.status + \",Response:\" + _getResponseText(xhr) || xhr.response || \"\";\r\n                }\r\n                return message;\r\n            }\r\n            /**\r\n             * Send XDomainRequest\r\n             * @param payload {string} - The data payload to be sent.\r\n             * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n             *\r\n             * Note: XDomainRequest does not support sync requests. This 'isAsync' parameter is added\r\n             * to maintain consistency with the xhrSender's contract\r\n             * Note: XDomainRequest does not support custom headers and we are not able to get\r\n             * appId from the backend for the correct correlation.\r\n             */\r\n            function _xdrSender(payload, isAsync) {\r\n                var _window = getWindow();\r\n                var xdr = new XDomainRequest();\r\n                xdr.onload = function () { return _self._xdrOnLoad(xdr, payload); };\r\n                xdr.onerror = function (event) { return _self._onError(payload, _formatErrorMessageXdr(xdr), event); };\r\n                // XDomainRequest requires the same protocol as the hosting page.\r\n                // If the protocol doesn't match, we can't send the telemetry :(.\r\n                var hostingProtocol = _window && _window.location && _window.location.protocol || \"\";\r\n                if (_self._senderConfig.endpointUrl().lastIndexOf(hostingProtocol, 0) !== 0) {\r\n                    _self.diagLog().throwInternal(LoggingSeverity.WARNING, _InternalMessageId.TransmissionFailed, \". \" +\r\n                        \"Cannot send XDomain request. The endpoint URL protocol doesn't match the hosting page protocol.\");\r\n                    _self._buffer.clear();\r\n                    return;\r\n                }\r\n                var endpointUrl = _self._senderConfig.endpointUrl().replace(/^(https?:)/, \"\");\r\n                xdr.open('POST', endpointUrl);\r\n                // compose an array of payloads\r\n                var batch = _self._buffer.batchPayloads(payload);\r\n                xdr.send(batch);\r\n                _self._buffer.markAsSent(payload);\r\n            }\r\n            function _formatErrorMessageXdr(xdr, message) {\r\n                if (xdr) {\r\n                    return \"XDomainRequest,Response:\" + _getResponseText(xdr) || \"\";\r\n                }\r\n                return message;\r\n            }\r\n            // Using function lookups for backward compatibility as the getNotifyMgr() did not exist until after v2.5.6\r\n            function _getNotifyMgr() {\r\n                var func = 'getNotifyMgr';\r\n                if (_self.core[func]) {\r\n                    return _self.core[func]();\r\n                }\r\n                // using _self.core['_notificationManager'] for backward compatibility\r\n                return _self.core['_notificationManager'];\r\n            }\r\n            function _notifySendRequest(sendRequest, isAsync) {\r\n                var manager = _getNotifyMgr();\r\n                if (manager && manager.eventsSendRequest) {\r\n                    try {\r\n                        manager.eventsSendRequest(sendRequest, isAsync);\r\n                    }\r\n                    catch (e) {\r\n                        _self.diagLog().throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.NotificationException, \"send request notification failed: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                    }\r\n                }\r\n            }\r\n            /**\r\n             * Validate UUID Format\r\n             * Specs taken from https://tools.ietf.org/html/rfc4122 and breeze repo\r\n             */\r\n            function _validateInstrumentationKey(config) {\r\n                var disableIKeyValidationFlag = CoreUtils.isNullOrUndefined(config.disableInstrumentaionKeyValidation) ? false : config.disableInstrumentaionKeyValidation;\r\n                if (disableIKeyValidationFlag) {\r\n                    return true;\r\n                }\r\n                var UUID_Regex = '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$';\r\n                var regexp = new RegExp(UUID_Regex);\r\n                return regexp.test(config.instrumentationKey);\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n    Sender.constructEnvelope = function (orig, iKey, logger) {\r\n        var envelope;\r\n        if (iKey !== orig.iKey && !CoreUtils.isNullOrUndefined(iKey)) {\r\n            envelope = __assign({}, orig, { iKey: iKey });\r\n        }\r\n        else {\r\n            envelope = orig;\r\n        }\r\n        switch (envelope.baseType) {\r\n            case Event.dataType:\r\n                return EventEnvelopeCreator.EventEnvelopeCreator.Create(logger, envelope);\r\n            case Trace.dataType:\r\n                return TraceEnvelopeCreator.TraceEnvelopeCreator.Create(logger, envelope);\r\n            case PageView.dataType:\r\n                return PageViewEnvelopeCreator.PageViewEnvelopeCreator.Create(logger, envelope);\r\n            case PageViewPerformance.dataType:\r\n                return PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator.Create(logger, envelope);\r\n            case Exception.dataType:\r\n                return ExceptionEnvelopeCreator.ExceptionEnvelopeCreator.Create(logger, envelope);\r\n            case Metric.dataType:\r\n                return MetricEnvelopeCreator.MetricEnvelopeCreator.Create(logger, envelope);\r\n            case RemoteDependencyData.dataType:\r\n                return DependencyEnvelopeCreator.DependencyEnvelopeCreator.Create(logger, envelope);\r\n            default:\r\n                return EventEnvelopeCreator.EventEnvelopeCreator.Create(logger, envelope);\r\n        }\r\n    };\r\n    Sender._getDefaultAppInsightsChannelConfig = function () {\r\n        // set default values\r\n        return {\r\n            endpointUrl: function () { return \"https://dc.services.visualstudio.com/v2/track\"; },\r\n            emitLineDelimitedJson: function () { return false; },\r\n            maxBatchInterval: function () { return 15000; },\r\n            maxBatchSizeInBytes: function () { return 102400; },\r\n            disableTelemetry: function () { return false; },\r\n            enableSessionStorageBuffer: function () { return true; },\r\n            isRetryDisabled: function () { return false; },\r\n            isBeaconApiDisabled: function () { return true; },\r\n            onunloadDisableBeacon: function () { return false; },\r\n            instrumentationKey: function () { return undefined; },\r\n            namePrefix: function () { return undefined; },\r\n            samplingPercentage: function () { return 100; }\r\n        };\r\n    };\r\n    Sender._getEmptyAppInsightsChannelConfig = function () {\r\n        return {\r\n            endpointUrl: undefined,\r\n            emitLineDelimitedJson: undefined,\r\n            maxBatchInterval: undefined,\r\n            maxBatchSizeInBytes: undefined,\r\n            disableTelemetry: undefined,\r\n            enableSessionStorageBuffer: undefined,\r\n            isRetryDisabled: undefined,\r\n            isBeaconApiDisabled: undefined,\r\n            onunloadDisableBeacon: undefined,\r\n            instrumentationKey: undefined,\r\n            namePrefix: undefined,\r\n            samplingPercentage: undefined\r\n        };\r\n    };\r\n// Removed Stub for Sender.prototype.pause.\r\n// Removed Stub for Sender.prototype.resume.\r\n// Removed Stub for Sender.prototype.flush.\r\n// Removed Stub for Sender.prototype.onunloadFlush.\r\n// Removed Stub for Sender.prototype.teardown.\r\n// Removed Stub for Sender.prototype.initialize.\r\n// Removed Stub for Sender.prototype.processTelemetry.\r\n// Removed Stub for Sender.prototype._xhrReadyStateChange.\r\n// Removed Stub for Sender.prototype.triggerSend.\r\n// Removed Stub for Sender.prototype._onError.\r\n// Removed Stub for Sender.prototype._onPartialSuccess.\r\n// Removed Stub for Sender.prototype._onSuccess.\r\n// Removed Stub for Sender.prototype._xdrOnLoad.\r\n    return Sender;\r\n}(BaseTelemetryPlugin));\r\nexport { Sender };\r\n//# sourceMappingURL=Sender.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity, CoreUtils, DiagnosticLogger } from '@microsoft/applicationinsights-core-js';\r\nvar Session = /** @class */ (function () {\r\n    function Session() {\r\n    }\r\n    return Session;\r\n}());\r\nexport { Session };\r\nvar _SessionManager = /** @class */ (function () {\r\n    function _SessionManager(config, logger) {\r\n        var _this = this;\r\n        if (CoreUtils.isNullOrUndefined(logger)) {\r\n            this._logger = new DiagnosticLogger();\r\n        }\r\n        else {\r\n            this._logger = logger;\r\n        }\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        if (!(typeof config.sessionExpirationMs === \"function\")) {\r\n            config.sessionExpirationMs = function () { return _SessionManager.acquisitionSpan; };\r\n        }\r\n        if (!(typeof config.sessionRenewalMs === \"function\")) {\r\n            config.sessionRenewalMs = function () { return _SessionManager.renewalSpan; };\r\n        }\r\n        this.config = config;\r\n        this._storageNamePrefix = function () { return _this.config.namePrefix && _this.config.namePrefix() ? _SessionManager.cookieNameConst + _this.config.namePrefix() : _SessionManager.cookieNameConst; };\r\n        this.automaticSession = new Session();\r\n    }\r\n    _SessionManager.prototype.update = function () {\r\n        if (!this.automaticSession.id) {\r\n            this.initializeAutomaticSession();\r\n        }\r\n        // Always using Date getTime() as there is a bug in older IE instances that causes the performance timings to have the hi-bit set eg 0x800000000 causing\r\n        // the number to be incorrect.\r\n        var now = new Date().getTime();\r\n        var acquisitionExpired = this.config.sessionExpirationMs() === 0 ? false : now - this.automaticSession.acquisitionDate > this.config.sessionExpirationMs();\r\n        var renewalExpired = this.config.sessionExpirationMs() === 0 ? false : now - this.automaticSession.renewalDate > this.config.sessionRenewalMs();\r\n        // renew if acquisitionSpan or renewalSpan has elapsed\r\n        if (acquisitionExpired || renewalExpired) {\r\n            // update automaticSession so session state has correct id\r\n            this.renew();\r\n        }\r\n        else {\r\n            // do not update the cookie more often than cookieUpdateInterval\r\n            if (!this.cookieUpdatedTimestamp || now - this.cookieUpdatedTimestamp > _SessionManager.cookieUpdateInterval) {\r\n                this.automaticSession.renewalDate = now;\r\n                this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *  Record the current state of the automatic session and store it in our cookie string format\r\n     *  into the browser's local storage. This is used to restore the session data when the cookie\r\n     *  expires.\r\n     */\r\n    _SessionManager.prototype.backup = function () {\r\n        this.setStorage(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n    };\r\n    /**\r\n     *  Use config.namePrefix + ai_session cookie data or local storage data (when the cookie is unavailable) to\r\n     *  initialize the automatic session.\r\n     */\r\n    _SessionManager.prototype.initializeAutomaticSession = function () {\r\n        var cookie = Util.getCookie(this._logger, this._storageNamePrefix());\r\n        if (cookie && typeof cookie.split === \"function\") {\r\n            this.initializeAutomaticSessionWithData(cookie);\r\n        }\r\n        else {\r\n            // There's no cookie, but we might have session data in local storage\r\n            // This can happen if the session expired or the user actively deleted the cookie\r\n            // We only want to recover data if the cookie is missing from expiry. We should respect the user's wishes if the cookie was deleted actively.\r\n            // The User class handles this for us and deletes our local storage object if the persistent user cookie was removed.\r\n            var storage = Util.getStorage(this._logger, this._storageNamePrefix());\r\n            if (storage) {\r\n                this.initializeAutomaticSessionWithData(storage);\r\n            }\r\n        }\r\n        if (!this.automaticSession.id) {\r\n            this.renew();\r\n        }\r\n    };\r\n    /**\r\n     *  Extract id, acquisitionDate, and renewalDate from an ai_session payload string and\r\n     *  use this data to initialize automaticSession.\r\n     *\r\n     *  @param {string} sessionData - The string stored in an ai_session cookie or local storage backup\r\n     */\r\n    _SessionManager.prototype.initializeAutomaticSessionWithData = function (sessionData) {\r\n        var params = sessionData.split(\"|\");\r\n        if (params.length > 0) {\r\n            this.automaticSession.id = params[0];\r\n        }\r\n        try {\r\n            if (params.length > 1) {\r\n                var acq = +params[1];\r\n                this.automaticSession.acquisitionDate = +new Date(acq);\r\n                this.automaticSession.acquisitionDate = this.automaticSession.acquisitionDate > 0 ? this.automaticSession.acquisitionDate : 0;\r\n            }\r\n            if (params.length > 2) {\r\n                var renewal = +params[2];\r\n                this.automaticSession.renewalDate = +new Date(renewal);\r\n                this.automaticSession.renewalDate = this.automaticSession.renewalDate > 0 ? this.automaticSession.renewalDate : 0;\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.ErrorParsingAISessionCookie, \"Error parsing ai_session cookie, session will be reset: \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n        }\r\n        if (this.automaticSession.renewalDate === 0) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SessionRenewalDateIsZero, \"AI session renewal date is 0, session will be reset.\");\r\n        }\r\n    };\r\n    _SessionManager.prototype.renew = function () {\r\n        var now = new Date().getTime();\r\n        this.automaticSession.id = Util.newId((this.config && this.config.idLength) ? this.config.idLength() : 22);\r\n        this.automaticSession.acquisitionDate = now;\r\n        this.automaticSession.renewalDate = now;\r\n        this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n        // If this browser does not support local storage, fire an internal log to keep track of it at this point\r\n        if (!Util.canUseLocalStorage()) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.BrowserDoesNotSupportLocalStorage, \"Browser does not support local storage. Session durations will be inaccurate.\");\r\n        }\r\n    };\r\n    _SessionManager.prototype.setCookie = function (guid, acq, renewal) {\r\n        // Set cookie to expire after the session expiry time passes or the session renewal deadline, whichever is sooner\r\n        // Expiring the cookie will cause the session to expire even if the user isn't on the page\r\n        var acquisitionExpiry = acq + this.config.sessionExpirationMs();\r\n        var renewalExpiry = renewal + this.config.sessionRenewalMs();\r\n        var cookieExpiry = new Date();\r\n        var cookie = [guid, acq, renewal];\r\n        if (acquisitionExpiry < renewalExpiry) {\r\n            cookieExpiry.setTime(acquisitionExpiry);\r\n        }\r\n        else {\r\n            cookieExpiry.setTime(renewalExpiry);\r\n        }\r\n        var cookieDomain = this.config.cookieDomain ? this.config.cookieDomain() : null;\r\n        // if sessionExpirationMs is set to 0, it means the expiry is set to 0 for this session cookie\r\n        // A cookie with 0 expiry in the session cookie will never expire for that browser session.  If the browser is closed the cookie expires.  \r\n        // Another browser instance does not inherit this cookie.\r\n        var UTCString = this.config.sessionExpirationMs() === 0 ? '0' : cookieExpiry.toUTCString();\r\n        Util.setCookie(this._logger, this._storageNamePrefix(), cookie.join('|') + ';expires=' + UTCString, cookieDomain);\r\n        this.cookieUpdatedTimestamp = new Date().getTime();\r\n    };\r\n    _SessionManager.prototype.setStorage = function (guid, acq, renewal) {\r\n        // Keep data in local storage to retain the last session id, allowing us to cleanly end the session when it expires\r\n        // Browsers that don't support local storage won't be able to end sessions cleanly from the client\r\n        // The server will notice this and end the sessions itself, with loss of accurate session duration\r\n        Util.setStorage(this._logger, this._storageNamePrefix(), [guid, acq, renewal].join('|'));\r\n    };\r\n    _SessionManager.acquisitionSpan = 86400000; // 24 hours in ms\r\n    _SessionManager.renewalSpan = 1800000; // 30 minutes in ms\r\n    _SessionManager.cookieUpdateInterval = 60000; // 1 minute in ms\r\n    _SessionManager.cookieNameConst = 'ai_session';\r\n    return _SessionManager;\r\n}());\r\nexport { _SessionManager };\r\n//# sourceMappingURL=Session.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Application = /** @class */ (function () {\r\n    function Application() {\r\n    }\r\n    return Application;\r\n}());\r\nexport { Application };\r\n//# sourceMappingURL=Application.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Device = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the Device class\r\n     */\r\n    function Device() {\r\n        // don't attempt to fingerprint browsers\r\n        this.id = \"browser\";\r\n        // Device type is a dimension in our data platform\r\n        // Setting it to 'Browser' allows to separate client and server dependencies/exceptions\r\n        this.deviceClass = \"Browser\";\r\n    }\r\n    return Device;\r\n}());\r\nexport { Device };\r\n//# sourceMappingURL=Device.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Version = \"2.5.9\";\r\nvar Internal = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the internal telemetry data class.\r\n     */\r\n    function Internal(config) {\r\n        this.sdkVersion = (config.sdkExtension && config.sdkExtension() ? config.sdkExtension() + \"_\" : \"\") + \"javascript:\" + Version;\r\n    }\r\n    return Internal;\r\n}());\r\nexport { Internal };\r\n//# sourceMappingURL=Internal.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util } from '@microsoft/applicationinsights-common';\r\nimport { _InternalMessageId, LoggingSeverity, CoreUtils } from '@microsoft/applicationinsights-core-js';\r\nvar User = /** @class */ (function () {\r\n    function User(config, logger) {\r\n        this.isNewUser = false;\r\n        this._logger = logger;\r\n        // get userId or create new one if none exists\r\n        var cookie = Util.getCookie(this._logger, User.userCookieName);\r\n        if (cookie) {\r\n            this.isNewUser = false;\r\n            var params = cookie.split(User.cookieSeparator);\r\n            if (params.length > 0) {\r\n                this.id = params[0];\r\n            }\r\n        }\r\n        this.config = config;\r\n        if (!this.id) {\r\n            this.id = CoreUtils.newId(config && config.idLength ? config.idLength() : 22);\r\n            var date = new Date();\r\n            var acqStr = CoreUtils.toISOString(date);\r\n            this.accountAcquisitionDate = acqStr;\r\n            this.isNewUser = true;\r\n            // without expiration, cookies expire at the end of the session\r\n            // set it to 365 days from now\r\n            // 365 * 24 * 60 * 60 * 1000 = 31536000000 \r\n            date.setTime(date.getTime() + 31536000000);\r\n            var newCookie = [this.id, acqStr];\r\n            var cookieDomain = this.config.cookieDomain ? this.config.cookieDomain() : undefined;\r\n            Util.setCookie(this._logger, User.userCookieName, newCookie.join(User.cookieSeparator) + ';expires=' + date.toUTCString(), cookieDomain);\r\n            // If we have an config.namePrefix() + ai_session in local storage this means the user actively removed our cookies.\r\n            // We should respect their wishes and clear ourselves from local storage\r\n            var name_1 = config.namePrefix && config.namePrefix() ? config.namePrefix() + 'ai_session' : 'ai_session';\r\n            Util.removeStorage(this._logger, name_1);\r\n        }\r\n        // We still take the account id from the ctor param for backward compatibility. \r\n        // But if the the customer set the accountId through the newer setAuthenticatedUserContext API, we will override it.\r\n        this.accountId = config.accountId ? config.accountId() : undefined;\r\n        // Get the auth user id and account id from the cookie if exists\r\n        // Cookie is in the pattern: <authenticatedId>|<accountId>\r\n        var authCookie = Util.getCookie(this._logger, User.authUserCookieName);\r\n        if (authCookie) {\r\n            authCookie = decodeURI(authCookie);\r\n            var authCookieString = authCookie.split(User.cookieSeparator);\r\n            if (authCookieString[0]) {\r\n                this.authenticatedId = authCookieString[0];\r\n            }\r\n            if (authCookieString.length > 1 && authCookieString[1]) {\r\n                this.accountId = authCookieString[1];\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Sets the authenticated user id and the account id in this session.\r\n     *\r\n     * @param authenticatedUserId {string} - The authenticated user id. A unique and persistent string that represents each authenticated user in the service.\r\n     * @param accountId {string} - An optional string to represent the account associated with the authenticated user.\r\n     */\r\n    User.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n        if (storeInCookie === void 0) { storeInCookie = false; }\r\n        // Validate inputs to ensure no cookie control characters.\r\n        var isInvalidInput = !this.validateUserInput(authenticatedUserId) || (accountId && !this.validateUserInput(accountId));\r\n        if (isInvalidInput) {\r\n            this._logger.throwInternal(LoggingSeverity.WARNING, _InternalMessageId.SetAuthContextFailedAccountName, \"Setting auth user context failed. \" +\r\n                \"User auth/account id should be of type string, and not contain commas, semi-colons, equal signs, spaces, or vertical-bars.\", true);\r\n            return;\r\n        }\r\n        // Create cookie string.\r\n        this.authenticatedId = authenticatedUserId;\r\n        var authCookie = this.authenticatedId;\r\n        if (accountId) {\r\n            this.accountId = accountId;\r\n            authCookie = [this.authenticatedId, this.accountId].join(User.cookieSeparator);\r\n        }\r\n        if (storeInCookie) {\r\n            // Set the cookie. No expiration date because this is a session cookie (expires when browser closed).\r\n            // Encoding the cookie to handle unexpected unicode characters.\r\n            Util.setCookie(this._logger, User.authUserCookieName, encodeURI(authCookie), this.config.cookieDomain());\r\n        }\r\n    };\r\n    /**\r\n     * Clears the authenticated user id and the account id from the user context.\r\n     * @returns {}\r\n     */\r\n    User.prototype.clearAuthenticatedUserContext = function () {\r\n        this.authenticatedId = null;\r\n        this.accountId = null;\r\n        Util.deleteCookie(this._logger, User.authUserCookieName);\r\n    };\r\n    User.prototype.validateUserInput = function (id) {\r\n        // Validate:\r\n        // 1. Id is a non-empty string.\r\n        // 2. It does not contain special characters for cookies.\r\n        if (typeof id !== 'string' ||\r\n            !id ||\r\n            id.match(/,|;|=| |\\|/)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    User.cookieSeparator = '|';\r\n    User.userCookieName = 'ai_user';\r\n    User.authUserCookieName = 'ai_authUser';\r\n    return User;\r\n}());\r\nexport { User };\r\n//# sourceMappingURL=User.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar Location = /** @class */ (function () {\r\n    function Location() {\r\n    }\r\n    return Location;\r\n}());\r\nexport { Location };\r\n//# sourceMappingURL=Location.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { Util, DataSanitizer } from '@microsoft/applicationinsights-common';\r\nimport { getLocation } from '@microsoft/applicationinsights-core-js';\r\nvar TelemetryTrace = /** @class */ (function () {\r\n    function TelemetryTrace(id, parentId, name, logger) {\r\n        this.traceID = id || Util.generateW3CId();\r\n        this.parentID = parentId;\r\n        this.name = name;\r\n        var location = getLocation();\r\n        if (!name && location && location.pathname) {\r\n            this.name = location.pathname;\r\n        }\r\n        this.name = DataSanitizer.sanitizeString(logger, this.name);\r\n    }\r\n    return TelemetryTrace;\r\n}());\r\nexport { TelemetryTrace };\r\n//# sourceMappingURL=TelemetryTrace.js.map","/**\r\n * PropertiesPlugin.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport { CoreUtils, hasWindow, _InternalLogMessage } from '@microsoft/applicationinsights-core-js';\r\nimport { Session, _SessionManager } from './Context/Session';\r\nimport { Extensions, CtxTagKeys, PageView } from '@microsoft/applicationinsights-common';\r\nimport { Application } from './Context/Application';\r\nimport { Device } from './Context/Device';\r\nimport { Internal } from './Context/Internal';\r\nimport { User } from './Context/User';\r\nimport { Location } from './Context/Location';\r\nimport { TelemetryTrace } from './Context/TelemetryTrace';\r\nvar TelemetryContext = /** @class */ (function () {\r\n    function TelemetryContext(logger, defaultConfig) {\r\n        var _self = this;\r\n        _self.application = new Application();\r\n        _self.internal = new Internal(defaultConfig);\r\n        if (hasWindow()) {\r\n            _self.sessionManager = new _SessionManager(defaultConfig, logger);\r\n            _self.device = new Device();\r\n            _self.location = new Location();\r\n            _self.user = new User(defaultConfig, logger);\r\n            _self.telemetryTrace = new TelemetryTrace(undefined, undefined, undefined, logger);\r\n            _self.session = new Session();\r\n        }\r\n        _self.appId = function () { return null; };\r\n    }\r\n    TelemetryContext.prototype.applySessionContext = function (event, itemCtx) {\r\n        var session = this.session;\r\n        var sessionManager = this.sessionManager;\r\n        var sessionContext = session || (sessionManager && sessionManager.automaticSession);\r\n        if (sessionContext) {\r\n            if (CoreUtils.isString(sessionContext.id)) {\r\n                event.ext.app.sesId = sessionContext.id;\r\n            }\r\n        }\r\n        if (session) {\r\n            // If customer set session info, apply his context; otherwise apply context automatically generated\r\n            if (CoreUtils.isString(session.id)) {\r\n                event.ext.app.sesId = session.id;\r\n            }\r\n            else {\r\n                event.ext.app.sesId = sessionManager.automaticSession.id;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyOperatingSystemContxt = function (event, itemCtx) {\r\n        var os = this.os;\r\n        if (os && os.name) {\r\n            event.ext.os = os;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyApplicationContext = function (event, itemCtx) {\r\n        var application = this.application;\r\n        if (application) {\r\n            if (CoreUtils.isString(application.ver)) {\r\n                event.tags[CtxTagKeys.applicationVersion] = application.ver;\r\n            }\r\n            if (CoreUtils.isString(application.build)) {\r\n                event.tags[CtxTagKeys.applicationBuild] = application.build;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyDeviceContext = function (event, itemCtx) {\r\n        var device = this.device;\r\n        if (device) {\r\n            if (CoreUtils.isString(device.id)) {\r\n                event.ext.device.localId = device.id;\r\n            }\r\n            if (CoreUtils.isString(device.ip)) {\r\n                event.ext.device.ip = device.ip;\r\n            }\r\n            if (CoreUtils.isString(device.model)) {\r\n                event.ext.device.model = device.model;\r\n            }\r\n            if (CoreUtils.isString(device.deviceClass)) {\r\n                event.ext.device.deviceClass = device.deviceClass;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyInternalContext = function (event, itemCtx) {\r\n        var internal = this.internal;\r\n        if (internal) {\r\n            if (CoreUtils.isString(internal.agentVersion)) {\r\n                event.tags[CtxTagKeys.internalAgentVersion] = internal.agentVersion; // not mapped in CS 4.0\r\n            }\r\n            if (CoreUtils.isString(internal.sdkVersion)) {\r\n                event.tags[CtxTagKeys.internalSdkVersion] = internal.sdkVersion;\r\n            }\r\n            if (event.baseType === _InternalLogMessage.dataType || event.baseType === PageView.dataType) {\r\n                if (CoreUtils.isString(internal.snippetVer)) {\r\n                    event.tags[CtxTagKeys.internalSnippet] = internal.snippetVer;\r\n                }\r\n                if (CoreUtils.isString(internal.sdkSrc)) {\r\n                    event.tags[CtxTagKeys.internalSdkSrc] = internal.sdkSrc;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyLocationContext = function (event, itemCtx) {\r\n        var location = this.location;\r\n        if (location) {\r\n            if (CoreUtils.isString(location.ip)) {\r\n                event.tags[CtxTagKeys.locationIp] = location.ip;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyOperationContext = function (event, itemCtx) {\r\n        var telemetryTrace = this.telemetryTrace;\r\n        if (telemetryTrace) {\r\n            var trace = event.ext.trace || { traceID: undefined, parentID: undefined };\r\n            if (CoreUtils.isString(telemetryTrace.traceID)) {\r\n                trace.traceID = telemetryTrace.traceID;\r\n            }\r\n            if (CoreUtils.isString(telemetryTrace.name)) {\r\n                trace.name = telemetryTrace.name;\r\n            }\r\n            if (CoreUtils.isString(telemetryTrace.parentID)) {\r\n                trace.parentID = telemetryTrace.parentID;\r\n            }\r\n            event.ext.trace = trace;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyWebContext = function (event, itemCtx) {\r\n        var web = this.web;\r\n        if (web) {\r\n            event.ext.web = event.ext.web || {};\r\n            event.ext.web = web;\r\n        }\r\n    };\r\n    TelemetryContext.prototype.applyUserContext = function (event, itemCtx) {\r\n        var user = this.user;\r\n        if (user) {\r\n            if (!event.tags) {\r\n                event.tags = [];\r\n            }\r\n            // stays in tags\r\n            if (CoreUtils.isString(user.accountId)) {\r\n                event.tags[CtxTagKeys.userAccountId] = user.accountId;\r\n            }\r\n            // CS 4.0\r\n            if (CoreUtils.isString(user.id)) {\r\n                event.ext.user.id = user.id;\r\n            }\r\n            if (CoreUtils.isString(user.authenticatedId)) {\r\n                event.ext.user.authId = user.authenticatedId;\r\n            }\r\n        }\r\n    };\r\n    TelemetryContext.prototype.cleanUp = function (event, itemCtx) {\r\n        if (event.ext[Extensions.DeviceExt] && CoreUtils.objKeys(event.ext[Extensions.DeviceExt]).length === 0) {\r\n            delete event.ext[Extensions.DeviceExt];\r\n        }\r\n        if (event.ext[Extensions.UserExt] && CoreUtils.objKeys(event.ext[Extensions.UserExt]).length === 0) {\r\n            delete event.ext[Extensions.UserExt];\r\n        }\r\n        if (event.ext[Extensions.WebExt] && CoreUtils.objKeys(event.ext[Extensions.WebExt]).length === 0) {\r\n            delete event.ext[Extensions.WebExt];\r\n        }\r\n        if (event.ext[Extensions.OSExt] && CoreUtils.objKeys(event.ext[Extensions.OSExt]).length === 0) {\r\n            delete event.ext[Extensions.OSExt];\r\n        }\r\n        if (event.ext[Extensions.AppExt] && CoreUtils.objKeys(event.ext[Extensions.AppExt]).length === 0) {\r\n            delete event.ext[Extensions.AppExt];\r\n        }\r\n        if (event.ext[Extensions.TraceExt] && CoreUtils.objKeys(event.ext[Extensions.TraceExt]).length === 0) {\r\n            delete event.ext[Extensions.TraceExt];\r\n        }\r\n    };\r\n    return TelemetryContext;\r\n}());\r\nexport { TelemetryContext };\r\n//# sourceMappingURL=TelemetryContext.js.map","/**\r\n * PropertiesPlugin.ts\r\n * @copyright Microsoft 2018\r\n */\r\nimport { BaseTelemetryPlugin, CoreUtils, _InternalLogMessage, LoggingSeverity, _InternalMessageId, getNavigator } from '@microsoft/applicationinsights-core-js';\r\nimport { TelemetryContext } from './TelemetryContext';\r\nimport { PageView, BreezeChannelIdentifier, PropertiesPluginIdentifier, Extensions, Util } from '@microsoft/applicationinsights-common';\r\nvar PropertiesPlugin = /** @class */ (function (_super) {\r\n    __extends(PropertiesPlugin, _super);\r\n    function PropertiesPlugin() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.priority = 110;\r\n        _this.identifier = PropertiesPluginIdentifier;\r\n        return _this;\r\n    }\r\n    PropertiesPlugin.getDefaultConfig = function () {\r\n        var defaultConfig = {\r\n            instrumentationKey: function () { return undefined; },\r\n            accountId: function () { return null; },\r\n            sessionRenewalMs: function () { return 30 * 60 * 1000; },\r\n            samplingPercentage: function () { return 100; },\r\n            sessionExpirationMs: function () { return 24 * 60 * 60 * 1000; },\r\n            cookieDomain: function () { return null; },\r\n            sdkExtension: function () { return null; },\r\n            isBrowserLinkTrackingEnabled: function () { return false; },\r\n            appId: function () { return null; },\r\n            namePrefix: function () { return undefined; },\r\n            idLength: function () { return 22; }\r\n        };\r\n        return defaultConfig;\r\n    };\r\n    PropertiesPlugin.prototype.initialize = function (config, core, extensions, pluginChain) {\r\n        var _this = this;\r\n        _super.prototype.initialize.call(this, config, core, extensions, pluginChain);\r\n        var ctx = this._getTelCtx();\r\n        var identifier = this.identifier;\r\n        var defaultConfig = PropertiesPlugin.getDefaultConfig();\r\n        this._extensionConfig = this._extensionConfig || PropertiesPlugin.getDefaultConfig();\r\n        var _loop_1 = function (field) {\r\n            this_1._extensionConfig[field] = function () { return ctx.getConfig(identifier, field, defaultConfig[field]()); };\r\n        };\r\n        var this_1 = this;\r\n        for (var field in defaultConfig) {\r\n            _loop_1(field);\r\n        }\r\n        this.context = new TelemetryContext(core.logger, this._extensionConfig);\r\n        this._breezeChannel = Util.getExtension(extensions, BreezeChannelIdentifier);\r\n        this.context.appId = function () { return _this._breezeChannel ? _this._breezeChannel[\"_appId\"] : null; };\r\n    };\r\n    /**\r\n     * Add Part A fields to the event\r\n     * @param event The event that needs to be processed\r\n     */\r\n    PropertiesPlugin.prototype.processTelemetry = function (event, itemCtx) {\r\n        if (CoreUtils.isNullOrUndefined(event)) {\r\n            // TODO(barustum): throw an internal event once we have support for internal logging\r\n        }\r\n        else {\r\n            itemCtx = this._getTelCtx(itemCtx);\r\n            // If the envelope is PageView, reset the internal message count so that we can send internal telemetry for the new page.\r\n            if (event.name === PageView.envelopeType) {\r\n                itemCtx.diagLog().resetInternalMessageCount();\r\n            }\r\n            if (this.context.session) {\r\n                // If customer did not provide custom session id update the session manager\r\n                if (typeof this.context.session.id !== \"string\") {\r\n                    this.context.sessionManager.update();\r\n                }\r\n            }\r\n            this._processTelemetryInternal(event, itemCtx);\r\n            if (this.context && this.context.user && this.context.user.isNewUser) {\r\n                this.context.user.isNewUser = false;\r\n                var message = new _InternalLogMessage(_InternalMessageId.SendBrowserInfoOnUserInit, ((getNavigator() || {}).userAgent || \"\"));\r\n                itemCtx.diagLog().logInternalMessage(LoggingSeverity.CRITICAL, message);\r\n            }\r\n            this.processNext(event, itemCtx);\r\n        }\r\n    };\r\n    PropertiesPlugin.prototype._processTelemetryInternal = function (event, itemCtx) {\r\n        // set part A  fields\r\n        if (!event.tags) {\r\n            event.tags = [];\r\n        }\r\n        if (!event.ext) {\r\n            event.ext = {};\r\n        }\r\n        var ext = event.ext;\r\n        ext[Extensions.DeviceExt] = ext[Extensions.DeviceExt] || {};\r\n        ext[Extensions.WebExt] = ext[Extensions.WebExt] || {};\r\n        ext[Extensions.UserExt] = ext[Extensions.UserExt] || {};\r\n        ext[Extensions.OSExt] = ext[Extensions.OSExt] || {};\r\n        ext[Extensions.AppExt] = ext[Extensions.AppExt] || {};\r\n        ext[Extensions.TraceExt] = ext[Extensions.TraceExt] || {};\r\n        var context = this.context;\r\n        context.applySessionContext(event, itemCtx);\r\n        context.applyApplicationContext(event, itemCtx);\r\n        context.applyDeviceContext(event, itemCtx);\r\n        context.applyOperationContext(event, itemCtx);\r\n        context.applyUserContext(event, itemCtx);\r\n        context.applyOperatingSystemContxt(event, itemCtx);\r\n        context.applyWebContext(event, itemCtx);\r\n        context.applyLocationContext(event, itemCtx); // legacy tags\r\n        context.applyInternalContext(event, itemCtx); // legacy tags\r\n        context.cleanUp(event, itemCtx);\r\n    };\r\n    return PropertiesPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport default PropertiesPlugin;\r\n//# sourceMappingURL=PropertiesPlugin.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { strFunction, strPrototype } from \"./EnvUtils\";\r\nimport { CoreUtils } from './CoreUtils';\r\nvar aiInstrumentHooks = \"_aiHooks\";\r\n;\r\nvar cbNames = [\r\n    \"req\", \"rsp\", \"hkErr\", \"fnErr\"\r\n];\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar str__Proto = \"__proto__\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strConstructor = \"constructor\";\r\n/** @ignore */\r\nfunction _arrLoop(arr, fn) {\r\n    if (arr) {\r\n        for (var lp = 0; lp < arr.length; lp++) {\r\n            if (fn(arr[lp], lp)) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/** @ignore */\r\nfunction _doCallbacks(hooks, callDetails, cbArgs, hookCtx, type) {\r\n    if (type >= 0 /* Request */ && type <= 2 /* HookError */) {\r\n        _arrLoop(hooks, function (hook, idx) {\r\n            var cbks = hook.cbks;\r\n            var cb = cbks[cbNames[type]];\r\n            if (cb) {\r\n                // Set the specific hook context implementation using a lazy creation pattern\r\n                callDetails.ctx = function () {\r\n                    var ctx = hookCtx[idx] = (hookCtx[idx] || {});\r\n                    return ctx;\r\n                };\r\n                try {\r\n                    cb.apply(callDetails.inst, cbArgs);\r\n                }\r\n                catch (err) {\r\n                    var orgEx = callDetails.err;\r\n                    try {\r\n                        // Report Hook error via the callback\r\n                        var hookErrorCb = cbks[cbNames[2 /* HookError */]];\r\n                        if (hookErrorCb) {\r\n                            callDetails.err = err;\r\n                            hookErrorCb.apply(callDetails.inst, cbArgs);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // Not much we can do here -- swallowing the exception to avoid crashing the hosting app\r\n                    }\r\n                    finally {\r\n                        // restore the original exception (if any)\r\n                        callDetails.err = orgEx;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n/** @ignore */\r\nfunction _createFunctionHook(aiHook) {\r\n    // Define a temporary method that queues-up a the real method call\r\n    return function () {\r\n        var funcThis = this;\r\n        // Capture the original arguments passed to the method\r\n        var orgArgs = arguments;\r\n        var hooks = aiHook.h;\r\n        var funcArgs = {\r\n            name: aiHook.n,\r\n            inst: funcThis,\r\n            ctx: null,\r\n            set: _replaceArg\r\n        };\r\n        var hookCtx = [];\r\n        var cbArgs = _createArgs([funcArgs], orgArgs);\r\n        function _createArgs(target, theArgs) {\r\n            _arrLoop(theArgs, function (arg) {\r\n                target.push(arg);\r\n            });\r\n            return target;\r\n        }\r\n        function _replaceArg(idx, value) {\r\n            orgArgs = _createArgs([], orgArgs);\r\n            orgArgs[idx] = value;\r\n            cbArgs = _createArgs([funcArgs], orgArgs);\r\n        }\r\n        // Call the pre-request hooks\r\n        _doCallbacks(hooks, funcArgs, cbArgs, hookCtx, 0 /* Request */);\r\n        // Call the original function was called\r\n        var theFunc = aiHook.f;\r\n        try {\r\n            funcArgs.rslt = theFunc.apply(funcThis, orgArgs);\r\n        }\r\n        catch (err) {\r\n            // Report the request callback\r\n            funcArgs.err = err;\r\n            _doCallbacks(hooks, funcArgs, cbArgs, hookCtx, 3 /* FunctionError */);\r\n            // rethrow the original exception so anyone listening for it can catch the exception\r\n            throw err;\r\n        }\r\n        // Call the post-request hooks\r\n        _doCallbacks(hooks, funcArgs, cbArgs, hookCtx, 1 /* Response */);\r\n        return funcArgs.rslt;\r\n    };\r\n}\r\n/**\r\n * Pre-lookup to check if we are running on a modern browser (i.e. not IE8)\r\n * @ignore\r\n */\r\nvar _objGetPrototypeOf = Object[\"getPrototypeOf\"];\r\n/**\r\n * Helper used to get the prototype of the target object as getPrototypeOf is not available in an ES3 environment.\r\n * @ignore\r\n */\r\nfunction _getObjProto(target) {\r\n    if (target) {\r\n        // This method doesn't existing in older browsers (e.g. IE8)\r\n        if (_objGetPrototypeOf) {\r\n            return _objGetPrototypeOf(target);\r\n        }\r\n        // target[Constructor] May break if the constructor has been changed or removed\r\n        var newProto = target[str__Proto] || target[strPrototype] || target[strConstructor];\r\n        if (newProto) {\r\n            return newProto;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/** @ignore */\r\nfunction _getOwner(target, name, checkPrototype) {\r\n    var owner = null;\r\n    if (target) {\r\n        if (CoreUtils.hasOwnProperty(target, name)) {\r\n            owner = target;\r\n        }\r\n        else if (checkPrototype) {\r\n            owner = _getOwner(_getObjProto(target), name, false);\r\n        }\r\n    }\r\n    return owner;\r\n}\r\n/**\r\n * Intercept the named prototype functions for the target class / object\r\n * @param target - The target object\r\n * @param funcName - The function name\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n */\r\nexport function InstrumentProto(target, funcName, callbacks) {\r\n    if (target) {\r\n        return InstrumentFunc(target[strPrototype], funcName, callbacks, false);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Intercept the named prototype functions for the target class / object\r\n * @param target - The target object\r\n * @param funcNames - The function names to intercept and call\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n */\r\nexport function InstrumentProtos(target, funcNames, callbacks) {\r\n    if (target) {\r\n        return InstrumentFuncs(target[strPrototype], funcNames, callbacks, false);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Intercept the named prototype functions for the target class / object\r\n * @param target - The target object\r\n * @param funcName - The function name\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n * @param checkPrototype - If the function doesn't exist on the target should it attempt to hook the prototype function\r\n */\r\nexport function InstrumentFunc(target, funcName, callbacks, checkPrototype) {\r\n    if (checkPrototype === void 0) { checkPrototype = true; }\r\n    if (target && funcName && callbacks) {\r\n        var owner = _getOwner(target, funcName, checkPrototype);\r\n        if (owner) {\r\n            var fn = owner[funcName];\r\n            if (typeof fn === strFunction) {\r\n                var aiHook_1 = fn[aiInstrumentHooks];\r\n                if (!aiHook_1) {\r\n                    // Only hook the function once\r\n                    aiHook_1 = {\r\n                        i: 0,\r\n                        n: funcName,\r\n                        f: fn,\r\n                        h: []\r\n                    };\r\n                    // Override (hook) the original function\r\n                    var newFunc = _createFunctionHook(aiHook_1);\r\n                    newFunc[aiInstrumentHooks] = aiHook_1; // Tag and store the function hooks\r\n                    owner[funcName] = newFunc;\r\n                }\r\n                var theHook = {\r\n                    // tslint:disable:object-literal-shorthand\r\n                    id: aiHook_1.i,\r\n                    cbks: callbacks,\r\n                    rm: function () {\r\n                        // DO NOT Use () => { shorthand for the function as the this gets replaced\r\n                        // with the outer this and not the this for theHook instance.\r\n                        var id = this.id;\r\n                        _arrLoop(aiHook_1.h, function (hook, idx) {\r\n                            if (hook.id === id) {\r\n                                aiHook_1.h.splice(idx, 1);\r\n                                return 1;\r\n                            }\r\n                        });\r\n                    }\r\n                    // tslint:enable:object-literal-shorthand\r\n                };\r\n                aiHook_1.i++;\r\n                aiHook_1.h.push(theHook);\r\n                return theHook;\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Intercept the named functions for the target class / object\r\n * @param target - The target object\r\n * @param funcNames - The function names to intercept and call\r\n * @param callbacks - The callbacks to configure and call whenever the function is called\r\n * @param checkPrototype - If the function doesn't exist on the target should it attempt to hook the prototype function\r\n */\r\nexport function InstrumentFuncs(target, funcNames, callbacks, checkPrototype) {\r\n    if (checkPrototype === void 0) { checkPrototype = true; }\r\n    var hooks = null;\r\n    _arrLoop(funcNames, function (funcName) {\r\n        var hook = InstrumentFunc(target, funcName, callbacks, checkPrototype);\r\n        if (hook) {\r\n            if (!hooks) {\r\n                hooks = [];\r\n            }\r\n            hooks.push(hook);\r\n        }\r\n    });\r\n    return hooks;\r\n}\r\n//# sourceMappingURL=InstrumentHooks.js.map","/*!\n * Application Insights JavaScript SDK - Dependencies Plugin, 2.5.9\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { DataSanitizer, UrlHelper, DateTimeUtils, Util } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, normalizeJsName } from '@microsoft/applicationinsights-core-js';\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nvar strProperties = \"properties\";\r\nvar _objKeys = CoreUtils.objKeys;\r\nvar _arrForEach = CoreUtils.arrForEach;\r\n/** @ignore */\r\nfunction _calcPerfDuration(resourceEntry, start, end) {\r\n    var result = 0;\r\n    var from = resourceEntry[start];\r\n    var to = resourceEntry[end];\r\n    if (from && to) {\r\n        result = DateTimeUtils.GetDuration(from, to);\r\n    }\r\n    return result;\r\n}\r\n/** @ignore */\r\nfunction _setPerfDuration(props, name, resourceEntry, start, end) {\r\n    var result = 0;\r\n    var value = _calcPerfDuration(resourceEntry, start, end);\r\n    if (value) {\r\n        result = _setPerfValue(props, name, Util.msToTimeSpan(value));\r\n    }\r\n    return result;\r\n}\r\n/** @ignore */\r\nfunction _setPerfValue(props, name, value) {\r\n    var strPerf = \"ajaxPerf\";\r\n    var result = 0;\r\n    if (props && name && value) {\r\n        var perfData = props[strPerf] = (props[strPerf] || {});\r\n        perfData[name] = value;\r\n        result = 1;\r\n    }\r\n    return result;\r\n}\r\n/** @ignore */\r\nfunction _populatePerfData(ajaxData, dependency) {\r\n    /*\r\n    * https://developer.mozilla.org/en-US/docs/Web/API/Resource_Timing_API/Using_the_Resource_Timing_API\r\n    *  | -startTime\r\n    *  | -redirectStart\r\n    *  |            | -redirectEnd\r\n    *  |            | | -fetchStart\r\n    *  |            | |   | -domainLookupStart\r\n    *  |            | |   |                |- domainLookupEnd\r\n    *  |            | |   |                | | -connectStart\r\n    *  |            | |   |                | |  | -secureConnectionStart\r\n    *  |            | |   |                | |  |        | -connectEnd\r\n    *  |            | |   |                | |  |        | | -requestStart\r\n    *  |            | |   |                | |  |        | |           | | -responseStart\r\n    *  |            | |   |                | |  |        | |           | |            | | -responseEnd\r\n    *  +------------+-+---+----------------+-+--+--------+-+-----------+-+------------+-+\r\n    *  |--redirect--| |---|--domainLookup--| |--connect--| |--request--| |--response--| |\r\n    *  |-------------------networkConnect----------------|\r\n    *  |                                                   |---------sentRequest--------|\r\n    *  |------------------------------------perfTotal-----------------------------------|\r\n    */\r\n    var resourceEntry = ajaxData.perfTiming;\r\n    var props = dependency[strProperties] || {};\r\n    var propsSet = 0;\r\n    var _isString = CoreUtils.isString;\r\n    var strName = \"name\";\r\n    var strStart = \"Start\";\r\n    var strEnd = \"End\";\r\n    var strDomainLookup = \"domainLookup\";\r\n    var strConnect = \"connect\";\r\n    var strRedirect = \"redirect\";\r\n    var strRequest = \"request\";\r\n    var strResponse = \"response\";\r\n    var strDuration = \"duration\";\r\n    var strStartTime = \"startTime\";\r\n    var strDomainLookupStart = strDomainLookup + strStart;\r\n    var strDomainLookupEnd = strDomainLookup + strEnd;\r\n    var strConnectStart = strConnect + strStart;\r\n    var strConnectEnd = strConnect + strEnd;\r\n    var strRequestStart = strRequest + strStart;\r\n    var strRequestEnd = strRequest + strEnd;\r\n    var strResponseStart = strResponse + strStart;\r\n    var strResponseEnd = strResponse + strEnd;\r\n    var strRedirectStart = strRedirect + strStart;\r\n    var strRedirectEnd = strRedirect = strEnd;\r\n    var strTransferSize = \"transferSize\";\r\n    var strEncodedBodySize = \"encodedBodySize\";\r\n    var strDecodedBodySize = \"decodedBodySize\";\r\n    var strServerTiming = \"serverTiming\";\r\n    if (resourceEntry) {\r\n        // redirect\r\n        propsSet |= _setPerfDuration(props, strRedirect, resourceEntry, strRedirectStart, strRedirectEnd);\r\n        // domainLookup\r\n        propsSet |= _setPerfDuration(props, strDomainLookup, resourceEntry, strDomainLookupStart, strDomainLookupEnd);\r\n        // connect\r\n        propsSet |= _setPerfDuration(props, strConnect, resourceEntry, strConnectStart, strConnectEnd);\r\n        // request\r\n        propsSet |= _setPerfDuration(props, strRequest, resourceEntry, strRequestStart, strRequestEnd);\r\n        // response\r\n        propsSet |= _setPerfDuration(props, strResponse, resourceEntry, strResponseStart, strResponseEnd);\r\n        // Network connection time\r\n        propsSet |= _setPerfDuration(props, \"networkConnect\", resourceEntry, strStartTime, strConnectEnd);\r\n        // Sent Request\r\n        propsSet |= _setPerfDuration(props, \"sentRequest\", resourceEntry, strRequestStart, strResponseEnd);\r\n        // PerfTotal / Duration\r\n        var duration = resourceEntry[strDuration];\r\n        if (!duration) {\r\n            duration = _calcPerfDuration(resourceEntry, strStartTime, strResponseEnd) || 0;\r\n        }\r\n        propsSet |= _setPerfValue(props, strDuration, duration);\r\n        propsSet |= _setPerfValue(props, \"perfTotal\", duration);\r\n        var serverTiming = resourceEntry[strServerTiming];\r\n        if (serverTiming) {\r\n            var server_1 = {};\r\n            _arrForEach(serverTiming, function (value, idx) {\r\n                var name = normalizeJsName(value[strName] || \"\" + idx);\r\n                var newValue = server_1[name] || {};\r\n                _arrForEach(_objKeys(value), function (key) {\r\n                    var val = value[key];\r\n                    if (key !== strName && _isString(val) || CoreUtils.isNumber(val)) {\r\n                        if (newValue[key]) {\r\n                            val = newValue[key] + \";\" + val;\r\n                        }\r\n                        if (val || !_isString(val)) {\r\n                            // Only set the value if it has a value and it's not an empty string\r\n                            newValue[key] = val;\r\n                        }\r\n                    }\r\n                });\r\n                server_1[name] = newValue;\r\n            });\r\n            propsSet |= _setPerfValue(props, strServerTiming, server_1);\r\n        }\r\n        propsSet |= _setPerfValue(props, strTransferSize, resourceEntry[strTransferSize]);\r\n        propsSet |= _setPerfValue(props, strEncodedBodySize, resourceEntry[strEncodedBodySize]);\r\n        propsSet |= _setPerfValue(props, strDecodedBodySize, resourceEntry[strDecodedBodySize]);\r\n    }\r\n    else {\r\n        if (ajaxData.perfMark) {\r\n            propsSet |= _setPerfValue(props, \"missing\", ajaxData.perfAttempts);\r\n        }\r\n    }\r\n    if (propsSet) {\r\n        dependency[strProperties] = props;\r\n    }\r\n}\r\nvar XHRMonitoringState = /** @class */ (function () {\r\n    function XHRMonitoringState() {\r\n        var self = this;\r\n        self.openDone = false;\r\n        self.setRequestHeaderDone = false;\r\n        self.sendDone = false;\r\n        self.abortDone = false;\r\n        // <summary>True, if onreadyStateChangeCallback function attached to xhr, otherwise false</summary>\r\n        self.stateChangeAttached = false;\r\n    }\r\n    return XHRMonitoringState;\r\n}());\r\nexport { XHRMonitoringState };\r\nvar ajaxRecord = /** @class */ (function () {\r\n    function ajaxRecord(traceID, spanID, logger) {\r\n        var self = this;\r\n        var _logger = logger;\r\n        var strResponseText = \"responseText\";\r\n        // Assigning the initial/default values within the constructor to avoid typescript from creating a bunch of\r\n        // this.XXXX = null\r\n        self.perfMark = null;\r\n        self.completed = false;\r\n        self.requestHeadersSize = null;\r\n        self.requestHeaders = null;\r\n        self.responseReceivingDuration = null;\r\n        self.callbackDuration = null;\r\n        self.ajaxTotalDuration = null;\r\n        self.aborted = 0;\r\n        self.pageUrl = null;\r\n        self.requestUrl = null;\r\n        self.requestSize = 0;\r\n        self.method = null;\r\n        self.status = null;\r\n        self.requestSentTime = null;\r\n        self.responseStartedTime = null;\r\n        self.responseFinishedTime = null;\r\n        self.callbackFinishedTime = null;\r\n        self.endTime = null;\r\n        self.xhrMonitoringState = new XHRMonitoringState();\r\n        self.clientFailure = 0;\r\n        self.traceID = traceID;\r\n        self.spanID = spanID;\r\n        dynamicProto(ajaxRecord, self, function (self) {\r\n            self.getAbsoluteUrl = function () {\r\n                return self.requestUrl ? UrlHelper.getAbsoluteUrl(self.requestUrl) : null;\r\n            };\r\n            self.getPathName = function () {\r\n                return self.requestUrl ? DataSanitizer.sanitizeUrl(_logger, UrlHelper.getCompleteUrl(self.method, self.requestUrl)) : null;\r\n            };\r\n            self.CreateTrackItem = function (ajaxType, enableRequestHeaderTracking, getResponse) {\r\n                // round to 3 decimal points\r\n                self.ajaxTotalDuration = Math.round(DateTimeUtils.GetDuration(self.requestSentTime, self.responseFinishedTime) * 1000) / 1000;\r\n                if (self.ajaxTotalDuration < 0) {\r\n                    return null;\r\n                }\r\n                var dependency = (_a = {\r\n                        id: \"|\" + self.traceID + \".\" + self.spanID,\r\n                        target: self.getAbsoluteUrl(),\r\n                        name: self.getPathName(),\r\n                        type: ajaxType,\r\n                        duration: self.ajaxTotalDuration,\r\n                        success: (+(self.status)) >= 200 && (+(self.status)) < 400,\r\n                        responseCode: (+(self.status)),\r\n                        method: self.method\r\n                    },\r\n                    _a[strProperties] = { HttpMethod: self.method },\r\n                    _a);\r\n                // Add Ajax perf details if available\r\n                _populatePerfData(self, dependency);\r\n                if (enableRequestHeaderTracking) {\r\n                    if (_objKeys(self.requestHeaders).length > 0) {\r\n                        dependency[strProperties] = dependency[strProperties] || {};\r\n                        dependency[strProperties].requestHeaders = self.requestHeaders;\r\n                    }\r\n                }\r\n                if (getResponse) {\r\n                    var response = getResponse();\r\n                    if (response) {\r\n                        // enrich dependency target with correlation context from the server\r\n                        var correlationContext = response.correlationContext;\r\n                        if (correlationContext) {\r\n                            dependency.correlationContext = /* dependency.target + \" | \" + */ correlationContext;\r\n                        }\r\n                        if (response.headerMap) {\r\n                            if (_objKeys(response.headerMap).length > 0) {\r\n                                dependency[strProperties] = dependency[strProperties] || {};\r\n                                dependency[strProperties].responseHeaders = response.headerMap;\r\n                            }\r\n                        }\r\n                        if (self.status >= 400) {\r\n                            var responseType = response.type;\r\n                            dependency[strProperties] = dependency[strProperties] || {};\r\n                            if (responseType === \"\" || responseType === \"text\") {\r\n                                dependency[strProperties][strResponseText] = response[strResponseText] ? response.statusText + \" - \" + response[strResponseText] : response.statusText;\r\n                            }\r\n                            if (responseType === \"json\") {\r\n                                dependency[strProperties][strResponseText] = response.response ? response.statusText + \" - \" + JSON.stringify(response.response) : response.statusText;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return dependency;\r\n                var _a;\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for ajaxRecord.prototype.getAbsoluteUrl.\r\n// Removed Stub for ajaxRecord.prototype.getPathName.\r\n// Removed Stub for ajaxRecord.prototype.CreateTrackItem.\r\n    return ajaxRecord;\r\n}());\r\nexport { ajaxRecord };\r\n;\r\n//# sourceMappingURL=ajaxRecord.js.map","/*!\n * Application Insights JavaScript SDK - Dependencies Plugin, 2.5.9\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { Util } from '@microsoft/applicationinsights-common';\r\nvar Traceparent = /** @class */ (function () {\r\n    function Traceparent(traceId, spanId) {\r\n        var self = this;\r\n        self.traceFlag = Traceparent.DEFAULT_TRACE_FLAG;\r\n        self.version = Traceparent.DEFAULT_VERSION;\r\n        if (traceId && Traceparent.isValidTraceId(traceId)) {\r\n            self.traceId = traceId;\r\n        }\r\n        else {\r\n            self.traceId = Util.generateW3CId();\r\n        }\r\n        if (spanId && Traceparent.isValidSpanId(spanId)) {\r\n            self.spanId = spanId;\r\n        }\r\n        else {\r\n            self.spanId = Util.generateW3CId().substr(0, 16);\r\n        }\r\n    }\r\n    Traceparent.isValidTraceId = function (id) {\r\n        return id.match(/^[0-9a-f]{32}$/) && id !== \"00000000000000000000000000000000\";\r\n    };\r\n    Traceparent.isValidSpanId = function (id) {\r\n        return id.match(/^[0-9a-f]{16}$/) && id !== \"0000000000000000\";\r\n    };\r\n    Traceparent.prototype.toString = function () {\r\n        var self = this;\r\n        return self.version + \"-\" + self.traceId + \"-\" + self.spanId + \"-\" + self.traceFlag;\r\n    };\r\n    Traceparent.DEFAULT_TRACE_FLAG = \"01\";\r\n    Traceparent.DEFAULT_VERSION = \"00\";\r\n    return Traceparent;\r\n}());\r\nexport { Traceparent };\r\n//# sourceMappingURL=TraceParent.js.map","/*!\n * Application Insights JavaScript SDK - Dependencies Plugin, 2.5.9\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { RequestHeaders, Util, CorrelationIdHelper, TelemetryItemCreator, RemoteDependencyData, DateTimeUtils, DisabledPropertyName, PropertiesPluginIdentifier, DistributedTracingModes } from '@microsoft/applicationinsights-common';\r\nimport { CoreUtils, LoggingSeverity, _InternalMessageId, BaseTelemetryPlugin, getLocation, getGlobal, strUndefined, strPrototype, InstrumentFunc, InstrumentProto, getPerformance } from '@microsoft/applicationinsights-core-js';\r\nimport { ajaxRecord } from './ajaxRecord';\r\nimport { EventHelper } from './ajaxUtils';\r\nimport { Traceparent } from './TraceParent';\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nvar AJAX_MONITOR_PREFIX = \"ai.ajxmn.\";\r\nvar strDiagLog = \"diagLog\";\r\nvar strAjaxData = \"ajaxData\";\r\nvar strThrowInternal = \"throwInternal\";\r\nvar strFetch = \"fetch\";\r\nvar _isNullOrUndefined = CoreUtils.isNullOrUndefined;\r\nvar _arrForEach = CoreUtils.arrForEach;\r\nvar _objKeys = CoreUtils.objKeys;\r\n// Using a global value so that to handle same iKey with multiple app insights instances (mostly for testing)\r\nvar _markCount = 0;\r\n/** @Ignore */\r\nfunction _supportsFetch() {\r\n    var _global = getGlobal();\r\n    if (!_global ||\r\n        _isNullOrUndefined(_global.Request) ||\r\n        _isNullOrUndefined(_global.Request[strPrototype]) ||\r\n        _isNullOrUndefined(_global[strFetch])) {\r\n        return null;\r\n    }\r\n    return _global[strFetch];\r\n}\r\n/**\r\n * Determines whether ajax monitoring can be enabled on this document\r\n * @returns True if Ajax monitoring is supported on this page, otherwise false\r\n * @ignore\r\n */\r\nfunction _supportsAjaxMonitoring(ajaxMonitorInstance) {\r\n    var result = false;\r\n    if (typeof XMLHttpRequest !== strUndefined && !_isNullOrUndefined(XMLHttpRequest)) {\r\n        var proto = XMLHttpRequest[strPrototype];\r\n        result = !_isNullOrUndefined(proto) &&\r\n            !_isNullOrUndefined(proto.open) &&\r\n            !_isNullOrUndefined(proto.send) &&\r\n            !_isNullOrUndefined(proto.abort);\r\n    }\r\n    var ieVer = Util.getIEVersion();\r\n    if (ieVer && ieVer < 9) {\r\n        result = false;\r\n    }\r\n    if (result) {\r\n        // Disable if the XmlHttpRequest can't be extended or hooked\r\n        try {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr[strAjaxData] = {};\r\n            // Check that we can update the prototype\r\n            var theOpen = XMLHttpRequest[strPrototype].open;\r\n            XMLHttpRequest[strPrototype].open = theOpen;\r\n        }\r\n        catch (e) {\r\n            // We can't decorate the xhr object so disable monitoring\r\n            result = false;\r\n            _throwInternalCritical(ajaxMonitorInstance, _InternalMessageId.FailedMonitorAjaxOpen, \"Failed to enable XMLHttpRequest monitoring, extension is not supported\", {\r\n                exception: Util.dump(e)\r\n            });\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/** @Ignore */\r\nfunction _getFailedAjaxDiagnosticsMessage(xhr) {\r\n    var result = \"\";\r\n    try {\r\n        if (!_isNullOrUndefined(xhr) &&\r\n            !_isNullOrUndefined(xhr[strAjaxData]) &&\r\n            !_isNullOrUndefined(xhr[strAjaxData].requestUrl)) {\r\n            result += \"(url: '\" + xhr[strAjaxData].requestUrl + \"')\";\r\n        }\r\n    }\r\n    catch (e) { }\r\n    return result;\r\n}\r\n/** @ignore */\r\nfunction _throwInternalCritical(ajaxMonitorInstance, msgId, message, properties, isUserAct) {\r\n    ajaxMonitorInstance[strDiagLog]()[strThrowInternal](LoggingSeverity.CRITICAL, msgId, message, properties, isUserAct);\r\n}\r\n/** @ignore */\r\nfunction _throwInternalWarning(ajaxMonitorInstance, msgId, message, properties, isUserAct) {\r\n    ajaxMonitorInstance[strDiagLog]()[strThrowInternal](LoggingSeverity.WARNING, msgId, message, properties, isUserAct);\r\n}\r\n/** @Ignore */\r\nfunction _createErrorCallbackFunc(ajaxMonitorInstance, internalMessage, message) {\r\n    // tslint:disable-next-line\r\n    return function (args) {\r\n        _throwInternalCritical(ajaxMonitorInstance, internalMessage, message, {\r\n            ajaxDiagnosticsMessage: _getFailedAjaxDiagnosticsMessage(args.inst),\r\n            exception: Util.dump(args.err)\r\n        });\r\n    };\r\n}\r\nfunction _indexOf(value, match) {\r\n    if (value && match) {\r\n        return value.indexOf(match);\r\n    }\r\n    return -1;\r\n}\r\nvar AjaxMonitor = /** @class */ (function (_super) {\r\n    __extends(AjaxMonitor, _super);\r\n    function AjaxMonitor() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = AjaxMonitor.identifier;\r\n        _this.priority = 120;\r\n        var strTrackDependencyDataInternal = \"trackDependencyDataInternal\"; // Using string to help with minification\r\n        var location = getLocation();\r\n        var _fetchInitialized = false; // fetch monitoring initialized\r\n        var _xhrInitialized = false; // XHR monitoring initialized\r\n        var _currentWindowHost = location && location.host && location.host.toLowerCase();\r\n        var _config = AjaxMonitor.getEmptyConfig();\r\n        var _enableRequestHeaderTracking = false;\r\n        var _trackAjaxAttempts = 0;\r\n        var _context;\r\n        var _isUsingW3CHeaders;\r\n        var _isUsingAIHeaders;\r\n        var _markPrefix;\r\n        var _enableAjaxPerfTracking = false;\r\n        var _maxAjaxCallsPerView = 0;\r\n        var _enableResponseHeaderTracking = false;\r\n        var _hooks = [];\r\n        var _disabledUrls = {};\r\n        dynamicProto(AjaxMonitor, _this, function (_self, base) {\r\n            _self.initialize = function (config, core, extensions, pluginChain) {\r\n                if (!_self.isInitialized()) {\r\n                    base.initialize(config, core, extensions, pluginChain);\r\n                    var ctx_1 = _self._getTelCtx();\r\n                    var defaultConfig_1 = AjaxMonitor.getDefaultConfig();\r\n                    _arrForEach(_objKeys(defaultConfig_1), function (field) {\r\n                        _config[field] = ctx_1.getConfig(AjaxMonitor.identifier, field, defaultConfig_1[field]);\r\n                    });\r\n                    var distributedTracingMode = _config.distributedTracingMode;\r\n                    _enableRequestHeaderTracking = _config.enableRequestHeaderTracking;\r\n                    _enableAjaxPerfTracking = _config.enableAjaxPerfTracking;\r\n                    _maxAjaxCallsPerView = _config.maxAjaxCallsPerView;\r\n                    _enableResponseHeaderTracking = _config.enableResponseHeaderTracking;\r\n                    _isUsingAIHeaders = distributedTracingMode === DistributedTracingModes.AI || distributedTracingMode === DistributedTracingModes.AI_AND_W3C;\r\n                    _isUsingW3CHeaders = distributedTracingMode === DistributedTracingModes.AI_AND_W3C || distributedTracingMode === DistributedTracingModes.W3C;\r\n                    if (_enableAjaxPerfTracking) {\r\n                        var iKey = config.instrumentationKey || \"unkwn\";\r\n                        if (iKey.length > 5) {\r\n                            _markPrefix = AJAX_MONITOR_PREFIX + iKey.substring(iKey.length - 5) + \".\";\r\n                        }\r\n                        else {\r\n                            _markPrefix = AJAX_MONITOR_PREFIX + iKey + \".\";\r\n                        }\r\n                    }\r\n                    if (_config.disableAjaxTracking === false) {\r\n                        _instrumentXhr();\r\n                    }\r\n                    _instrumentFetch();\r\n                    if (extensions.length > 0 && extensions) {\r\n                        var propExt = void 0, extIx = 0;\r\n                        while (!propExt && extIx < extensions.length) {\r\n                            if (extensions[extIx] && extensions[extIx].identifier === PropertiesPluginIdentifier) {\r\n                                propExt = extensions[extIx];\r\n                            }\r\n                            extIx++;\r\n                        }\r\n                        if (propExt) {\r\n                            _context = propExt.context; // we could move IPropertiesPlugin to common as well\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            _self.teardown = function () {\r\n                // Remove all instrumentation hooks\r\n                _arrForEach(_hooks, function (fn) {\r\n                    fn.rm();\r\n                });\r\n                _hooks = [];\r\n                _fetchInitialized = false;\r\n                _xhrInitialized = false;\r\n                _self.setInitialized(false);\r\n            };\r\n            _self.trackDependencyData = function (dependency, properties) {\r\n                _self[strTrackDependencyDataInternal](dependency, properties);\r\n            };\r\n            _self.includeCorrelationHeaders = function (ajaxData, input, init, xhr) {\r\n                // Test Hook to allow the overriding of the location host\r\n                var currentWindowHost = _self[\"_currentWindowHost\"] || _currentWindowHost;\r\n                if (input) {\r\n                    if (CorrelationIdHelper.canIncludeCorrelationHeader(_config, ajaxData.getAbsoluteUrl(), currentWindowHost)) {\r\n                        if (!init) {\r\n                            init = {};\r\n                        }\r\n                        // init headers override original request headers\r\n                        // so, if they exist use only them, otherwise use request's because they should have been applied in the first place\r\n                        // not using original request headers will result in them being lost\r\n                        init.headers = new Headers(init.headers || (input instanceof Request ? (input.headers || {}) : {}));\r\n                        if (_isUsingAIHeaders) {\r\n                            var id = \"|\" + ajaxData.traceID + \".\" + ajaxData.spanID;\r\n                            init.headers.set(RequestHeaders.requestIdHeader, id);\r\n                            if (_enableRequestHeaderTracking) {\r\n                                ajaxData.requestHeaders[RequestHeaders.requestIdHeader] = id;\r\n                            }\r\n                        }\r\n                        var appId = _config.appId || (_context && _context.appId());\r\n                        if (appId) {\r\n                            init.headers.set(RequestHeaders.requestContextHeader, RequestHeaders.requestContextAppIdFormat + appId);\r\n                            if (_enableRequestHeaderTracking) {\r\n                                ajaxData.requestHeaders[RequestHeaders.requestContextHeader] = RequestHeaders.requestContextAppIdFormat + appId;\r\n                            }\r\n                        }\r\n                        if (_isUsingW3CHeaders) {\r\n                            var traceparent = new Traceparent(ajaxData.traceID, ajaxData.spanID);\r\n                            init.headers.set(RequestHeaders.traceParentHeader, traceparent.toString());\r\n                            if (_enableRequestHeaderTracking) {\r\n                                ajaxData.requestHeaders[RequestHeaders.traceParentHeader] = traceparent.toString();\r\n                            }\r\n                        }\r\n                    }\r\n                    return init;\r\n                }\r\n                else if (xhr) {\r\n                    if (CorrelationIdHelper.canIncludeCorrelationHeader(_config, ajaxData.getAbsoluteUrl(), currentWindowHost)) {\r\n                        if (_isUsingAIHeaders) {\r\n                            var id = \"|\" + ajaxData.traceID + \".\" + ajaxData.spanID;\r\n                            xhr.setRequestHeader(RequestHeaders.requestIdHeader, id);\r\n                            if (_enableRequestHeaderTracking) {\r\n                                ajaxData.requestHeaders[RequestHeaders.requestIdHeader] = id;\r\n                            }\r\n                        }\r\n                        var appId = _config.appId || (_context && _context.appId());\r\n                        if (appId) {\r\n                            xhr.setRequestHeader(RequestHeaders.requestContextHeader, RequestHeaders.requestContextAppIdFormat + appId);\r\n                            if (_enableRequestHeaderTracking) {\r\n                                ajaxData.requestHeaders[RequestHeaders.requestContextHeader] = RequestHeaders.requestContextAppIdFormat + appId;\r\n                            }\r\n                        }\r\n                        if (_isUsingW3CHeaders) {\r\n                            var traceparent = new Traceparent(ajaxData.traceID, ajaxData.spanID);\r\n                            xhr.setRequestHeader(RequestHeaders.traceParentHeader, traceparent.toString());\r\n                            if (_enableRequestHeaderTracking) {\r\n                                ajaxData.requestHeaders[RequestHeaders.traceParentHeader] = traceparent.toString();\r\n                            }\r\n                        }\r\n                    }\r\n                    return xhr;\r\n                }\r\n                return undefined;\r\n            };\r\n            _self[strTrackDependencyDataInternal] = function (dependency, properties, systemProperties) {\r\n                if (_maxAjaxCallsPerView === -1 || _trackAjaxAttempts < _maxAjaxCallsPerView) {\r\n                    // Hack since expected format in w3c mode is |abc.def.\r\n                    // Non-w3c format is |abc.def\r\n                    // @todo Remove if better solution is available, e.g. handle in portal\r\n                    if ((_config.distributedTracingMode === DistributedTracingModes.W3C\r\n                        || _config.distributedTracingMode === DistributedTracingModes.AI_AND_W3C)\r\n                        && typeof dependency.id === \"string\" && dependency.id[dependency.id.length - 1] !== \".\") {\r\n                        dependency.id += \".\";\r\n                    }\r\n                    if (CoreUtils.isNullOrUndefined(dependency.startTime)) {\r\n                        dependency.startTime = new Date();\r\n                    }\r\n                    var item = TelemetryItemCreator.create(dependency, RemoteDependencyData.dataType, RemoteDependencyData.envelopeType, _self[strDiagLog](), properties, systemProperties);\r\n                    _self.core.track(item);\r\n                }\r\n                else if (_trackAjaxAttempts === _maxAjaxCallsPerView) {\r\n                    _throwInternalCritical(_self, _InternalMessageId.MaxAjaxPerPVExceeded, \"Maximum ajax per page view limit reached, ajax monitoring is paused until the next trackPageView(). In order to increase the limit set the maxAjaxCallsPerView configuration parameter.\", true);\r\n                }\r\n                ++_trackAjaxAttempts;\r\n            };\r\n            // Fetch Stuff\r\n            function _instrumentFetch() {\r\n                var fetch = _supportsFetch();\r\n                if (!fetch) {\r\n                    return;\r\n                }\r\n                var global = getGlobal();\r\n                var isPolyfill = fetch.polyfill;\r\n                if (_config.disableFetchTracking === false) {\r\n                    _hooks.push(InstrumentFunc(global, strFetch, {\r\n                        // Add request hook\r\n                        req: function (callDetails, input, init) {\r\n                            var fetchData;\r\n                            if (_fetchInitialized &&\r\n                                !_isDisabledRequest(null, input, init) &&\r\n                                // If we have a polyfil and XHR instrumented then let XHR report otherwise we get duplicates\r\n                                !(isPolyfill && _xhrInitialized)) {\r\n                                var ctx = callDetails.ctx();\r\n                                fetchData = _createFetchRecord(input, init);\r\n                                var newInit = _self.includeCorrelationHeaders(fetchData, input, init);\r\n                                if (newInit !== init) {\r\n                                    callDetails.set(1, newInit);\r\n                                }\r\n                                ctx.data = fetchData;\r\n                            }\r\n                        },\r\n                        rsp: function (callDetails, input) {\r\n                            var fetchData = callDetails.ctx().data;\r\n                            if (fetchData) {\r\n                                // Replace the result with the new promise from this code\r\n                                callDetails.rslt = callDetails.rslt.then(function (response) {\r\n                                    _reportFetchMetrics(callDetails, (response || {}).status, response, fetchData, function () {\r\n                                        var ajaxResponse = {\r\n                                            statusText: response.statusText,\r\n                                            headerMap: null,\r\n                                            correlationContext: _getFetchCorrelationContext(response)\r\n                                        };\r\n                                        if (_enableResponseHeaderTracking) {\r\n                                            var responseHeaderMap_1 = {};\r\n                                            response.headers.forEach(function (value, name) {\r\n                                                responseHeaderMap_1[name] = value;\r\n                                            });\r\n                                            ajaxResponse.headerMap = responseHeaderMap_1;\r\n                                        }\r\n                                        return ajaxResponse;\r\n                                    });\r\n                                    return response;\r\n                                })[\"catch\"](function (reason) {\r\n                                    _reportFetchMetrics(callDetails, 0, input, fetchData, null, { error: reason.message });\r\n                                    throw reason;\r\n                                });\r\n                            }\r\n                        },\r\n                        // Create an error callback to report any hook errors\r\n                        hkErr: _createErrorCallbackFunc(_self, _InternalMessageId.FailedMonitorAjaxOpen, \"Failed to monitor Window.fetch, monitoring data for this fetch call may be incorrect.\")\r\n                    }));\r\n                    _fetchInitialized = true;\r\n                }\r\n                else if (isPolyfill) {\r\n                    // If fetch is a polyfill we need to capture the request to ensure that we correctly track\r\n                    // disabled request URLS (i.e. internal urls) to ensure we don't end up in a constant loop\r\n                    // of reporting ourselves, for example React Native uses a polyfill for fetch\r\n                    // Note: Polyfill implementations that don't support the \"poyyfill\" tag are not supported\r\n                    // the workaround is to add a polyfill property to your fetch implementation before initializing\r\n                    // App Insights\r\n                    _hooks.push(InstrumentFunc(global, strFetch, {\r\n                        req: function (callDetails, input, init) {\r\n                            // Just call so that we record any disabled URL\r\n                            _isDisabledRequest(null, input, init);\r\n                        }\r\n                    }));\r\n                }\r\n                if (isPolyfill) {\r\n                    // retag the instrumented fetch with the same polyfill settings this is mostly for testing\r\n                    // But also supports multiple App Insights usages\r\n                    global[strFetch].polyfill = isPolyfill;\r\n                }\r\n            }\r\n            function _hookProto(target, funcName, callbacks) {\r\n                _hooks.push(InstrumentProto(target, funcName, callbacks));\r\n            }\r\n            function _instrumentXhr() {\r\n                if (_supportsAjaxMonitoring(_self) && !_xhrInitialized) {\r\n                    // Instrument open\r\n                    _hookProto(XMLHttpRequest, \"open\", {\r\n                        req: function (args, method, url, async) {\r\n                            var xhr = args.inst;\r\n                            var ajaxData = xhr[strAjaxData];\r\n                            if (!_isDisabledRequest(xhr, url) && _isMonitoredXhrInstance(xhr, true) &&\r\n                                (!ajaxData || !ajaxData.xhrMonitoringState.openDone)) {\r\n                                _openHandler(xhr, method, url, async);\r\n                            }\r\n                        },\r\n                        hkErr: _createErrorCallbackFunc(_self, _InternalMessageId.FailedMonitorAjaxOpen, \"Failed to monitor XMLHttpRequest.open, monitoring data for this ajax call may be incorrect.\")\r\n                    });\r\n                    // Instrument send\r\n                    _hookProto(XMLHttpRequest, \"send\", {\r\n                        req: function (args, context) {\r\n                            var xhr = args.inst;\r\n                            var ajaxData = xhr[strAjaxData];\r\n                            if (_isMonitoredXhrInstance(xhr) && !ajaxData.xhrMonitoringState.sendDone) {\r\n                                _createMarkId(\"xhr\", ajaxData);\r\n                                ajaxData.requestSentTime = DateTimeUtils.Now();\r\n                                xhr = _self.includeCorrelationHeaders(ajaxData, undefined, undefined, xhr);\r\n                                ajaxData.xhrMonitoringState.sendDone = true;\r\n                            }\r\n                        },\r\n                        hkErr: _createErrorCallbackFunc(_self, _InternalMessageId.FailedMonitorAjaxSend, \"Failed to monitor XMLHttpRequest, monitoring data for this ajax call may be incorrect.\")\r\n                    });\r\n                    // Instrument abort\r\n                    _hookProto(XMLHttpRequest, \"abort\", {\r\n                        req: function (args) {\r\n                            var xhr = args.inst;\r\n                            var ajaxData = xhr[strAjaxData];\r\n                            if (_isMonitoredXhrInstance(xhr) && !ajaxData.xhrMonitoringState.abortDone) {\r\n                                ajaxData.aborted = 1;\r\n                                ajaxData.xhrMonitoringState.abortDone = true;\r\n                            }\r\n                        },\r\n                        hkErr: _createErrorCallbackFunc(_self, _InternalMessageId.FailedMonitorAjaxAbort, \"Failed to monitor XMLHttpRequest.abort, monitoring data for this ajax call may be incorrect.\")\r\n                    });\r\n                    // Instrument setRequestHeader\r\n                    if (_enableRequestHeaderTracking) {\r\n                        _hookProto(XMLHttpRequest, \"setRequestHeader\", {\r\n                            req: function (args, header, value) {\r\n                                var xhr = args.inst;\r\n                                if (_isMonitoredXhrInstance(xhr)) {\r\n                                    xhr[strAjaxData].requestHeaders[header] = value;\r\n                                }\r\n                            },\r\n                            hkErr: _createErrorCallbackFunc(_self, _InternalMessageId.FailedMonitorAjaxSetRequestHeader, \"Failed to monitor XMLHttpRequest.setRequestHeader, monitoring data for this ajax call may be incorrect.\")\r\n                        });\r\n                    }\r\n                    _xhrInitialized = true;\r\n                }\r\n            }\r\n            function _isDisabledRequest(xhr, request, init) {\r\n                var isDisabled = false;\r\n                var theUrl = ((!CoreUtils.isString(request) ? (request || {}).url || \"\" : request) || \"\").toLowerCase();\r\n                var idx = _indexOf(theUrl, \"?\");\r\n                var idx2 = _indexOf(theUrl, \"#\");\r\n                if (idx === -1 || (idx2 !== -1 && idx2 < idx)) {\r\n                    idx = idx2;\r\n                }\r\n                if (idx !== -1) {\r\n                    // Strip off any Query string\r\n                    theUrl = theUrl.substring(0, idx);\r\n                }\r\n                // check that this instance is not not used by ajax call performed inside client side monitoring to send data to collector\r\n                if (!_isNullOrUndefined(xhr)) {\r\n                    // Look on the XMLHttpRequest of the URL string value\r\n                    isDisabled = xhr[DisabledPropertyName] === true || theUrl[DisabledPropertyName] === true;\r\n                }\r\n                else if (!_isNullOrUndefined(request)) {\r\n                    // Look for DisabledPropertyName in either Request or RequestInit\r\n                    isDisabled = (typeof request === 'object' ? request[DisabledPropertyName] === true : false) ||\r\n                        (init ? init[DisabledPropertyName] === true : false);\r\n                }\r\n                if (isDisabled) {\r\n                    // Add the disabled url if not present\r\n                    if (!_disabledUrls[theUrl]) {\r\n                        _disabledUrls[theUrl] = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    // Check to see if the url is listed as disabled\r\n                    if (_disabledUrls[theUrl]) {\r\n                        isDisabled = true;\r\n                    }\r\n                }\r\n                return isDisabled;\r\n            }\r\n            /// <summary>Verifies that particalar instance of XMLHttpRequest needs to be monitored</summary>\r\n            /// <param name=\"excludeAjaxDataValidation\">Optional parameter. True if ajaxData must be excluded from verification</param>\r\n            /// <returns type=\"bool\">True if instance needs to be monitored, otherwise false</returns>\r\n            function _isMonitoredXhrInstance(xhr, excludeAjaxDataValidation) {\r\n                var ajaxValidation = true;\r\n                var initialized = _xhrInitialized;\r\n                if (!_isNullOrUndefined(xhr)) {\r\n                    ajaxValidation = excludeAjaxDataValidation === true || !_isNullOrUndefined(xhr[strAjaxData]);\r\n                }\r\n                // checking to see that all interested functions on xhr were instrumented\r\n                return initialized\r\n                    // checking on ajaxData to see that it was not removed in user code\r\n                    && ajaxValidation;\r\n            }\r\n            function _openHandler(xhr, method, url, async) {\r\n                var traceID = (_context && _context.telemetryTrace && _context.telemetryTrace.traceID) || Util.generateW3CId();\r\n                var spanID = Util.generateW3CId().substr(0, 16);\r\n                var ajaxData = new ajaxRecord(traceID, spanID, _self[strDiagLog]());\r\n                ajaxData.method = method;\r\n                ajaxData.requestUrl = url;\r\n                ajaxData.xhrMonitoringState.openDone = true;\r\n                ajaxData.requestHeaders = {};\r\n                ajaxData.async = async;\r\n                xhr[strAjaxData] = ajaxData;\r\n                _attachToOnReadyStateChange(xhr);\r\n            }\r\n            function _attachToOnReadyStateChange(xhr) {\r\n                xhr[strAjaxData].xhrMonitoringState.stateChangeAttached = EventHelper.Attach(xhr, \"readystatechange\", function () {\r\n                    try {\r\n                        if (xhr && xhr.readyState === 4 && _isMonitoredXhrInstance(xhr)) {\r\n                            _onAjaxComplete(xhr);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        var exceptionText = Util.dump(e);\r\n                        // ignore messages with c00c023f, as this a known IE9 XHR abort issue\r\n                        if (!exceptionText || _indexOf(exceptionText.toLowerCase(), \"c00c023f\") === -1) {\r\n                            _throwInternalCritical(_self, _InternalMessageId.FailedMonitorAjaxRSC, \"Failed to monitor XMLHttpRequest 'readystatechange' event handler, monitoring data for this ajax call may be incorrect.\", {\r\n                                ajaxDiagnosticsMessage: _getFailedAjaxDiagnosticsMessage(xhr),\r\n                                exception: exceptionText\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            function _getResponseText(xhr) {\r\n                try {\r\n                    var responseType = xhr.responseType;\r\n                    if (responseType === \"\" || responseType === \"text\") {\r\n                        // As per the specification responseText is only valid if the type is an empty string or \"text\"\r\n                        return xhr.responseText;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // This shouldn't happend because of the above check -- but just in case, so just ignore\r\n                }\r\n                return null;\r\n            }\r\n            function _onAjaxComplete(xhr) {\r\n                var ajaxData = xhr[strAjaxData];\r\n                ajaxData.responseFinishedTime = DateTimeUtils.Now();\r\n                ajaxData.status = xhr.status;\r\n                function _reportXhrError(e, failedProps) {\r\n                    var errorProps = failedProps || {};\r\n                    errorProps[\"ajaxDiagnosticsMessage\"] = _getFailedAjaxDiagnosticsMessage(xhr);\r\n                    if (e) {\r\n                        errorProps[\"exception\"] = Util.dump(e);\r\n                    }\r\n                    _throwInternalWarning(_self, _InternalMessageId.FailedMonitorAjaxDur, \"Failed to calculate the duration of the ajax call, monitoring data for this ajax call won't be sent.\", errorProps);\r\n                }\r\n                _findPerfResourceEntry(\"xmlhttprequest\", ajaxData, function () {\r\n                    try {\r\n                        var dependency = ajaxData.CreateTrackItem(\"Ajax\", _enableRequestHeaderTracking, function () {\r\n                            var ajaxResponse = {\r\n                                statusText: xhr.statusText,\r\n                                headerMap: null,\r\n                                correlationContext: _getAjaxCorrelationContext(xhr),\r\n                                type: xhr.responseType,\r\n                                responseText: _getResponseText(xhr),\r\n                                response: xhr.response\r\n                            };\r\n                            if (_enableResponseHeaderTracking) {\r\n                                var headers = xhr.getAllResponseHeaders();\r\n                                if (headers) {\r\n                                    // xhr.getAllResponseHeaders() method returns all the response headers, separated by CRLF, as a string or null\r\n                                    // the regex converts the header string into an array of individual headers\r\n                                    var arr = CoreUtils.strTrim(headers).split(/[\\r\\n]+/);\r\n                                    var responseHeaderMap_2 = {};\r\n                                    _arrForEach(arr, function (line) {\r\n                                        var parts = line.split(': ');\r\n                                        var header = parts.shift();\r\n                                        var value = parts.join(': ');\r\n                                        responseHeaderMap_2[header] = value;\r\n                                    });\r\n                                    ajaxResponse.headerMap = responseHeaderMap_2;\r\n                                }\r\n                            }\r\n                            return ajaxResponse;\r\n                        });\r\n                        if (dependency) {\r\n                            _self[strTrackDependencyDataInternal](dependency);\r\n                        }\r\n                        else {\r\n                            _reportXhrError(null, {\r\n                                requestSentTime: ajaxData.requestSentTime,\r\n                                responseFinishedTime: ajaxData.responseFinishedTime\r\n                            });\r\n                        }\r\n                    }\r\n                    finally {\r\n                        // cleanup telemetry data\r\n                        try {\r\n                            xhr[strAjaxData] = null;\r\n                        }\r\n                        catch (e) {\r\n                            // May throw in environments that prevent extension or freeze xhr\r\n                        }\r\n                    }\r\n                }, function (e) {\r\n                    _reportXhrError(e, null);\r\n                });\r\n            }\r\n            function _getAjaxCorrelationContext(xhr) {\r\n                try {\r\n                    var responseHeadersString = xhr.getAllResponseHeaders();\r\n                    if (responseHeadersString !== null) {\r\n                        var index = _indexOf(responseHeadersString.toLowerCase(), RequestHeaders.requestContextHeaderLowerCase);\r\n                        if (index !== -1) {\r\n                            var responseHeader = xhr.getResponseHeader(RequestHeaders.requestContextHeader);\r\n                            return CorrelationIdHelper.getCorrelationContext(responseHeader);\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternalWarning(_self, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, \"Failed to get Request-Context correlation header as it may be not included in the response or not accessible.\", {\r\n                        ajaxDiagnosticsMessage: _getFailedAjaxDiagnosticsMessage(xhr),\r\n                        exception: Util.dump(e)\r\n                    });\r\n                }\r\n            }\r\n            function _createMarkId(type, ajaxData) {\r\n                if (ajaxData.requestUrl && _markPrefix && _enableAjaxPerfTracking) {\r\n                    var performance_1 = getPerformance();\r\n                    if (performance_1 && CoreUtils.isFunction(performance_1.mark)) {\r\n                        _markCount++;\r\n                        var markId = _markPrefix + type + \"#\" + _markCount;\r\n                        performance_1.mark(markId);\r\n                        var entries = performance_1.getEntriesByName(markId);\r\n                        if (entries && entries.length === 1) {\r\n                            ajaxData.perfMark = entries[0];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            function _findPerfResourceEntry(initiatorType, ajaxData, trackCallback, reportError) {\r\n                var perfMark = ajaxData.perfMark;\r\n                var performance = getPerformance();\r\n                var maxAttempts = _config.maxAjaxPerfLookupAttempts;\r\n                var retryDelay = _config.ajaxPerfLookupDelay;\r\n                var requestUrl = ajaxData.requestUrl;\r\n                var attempt = 0;\r\n                (function locateResourceTiming() {\r\n                    try {\r\n                        if (performance && perfMark) {\r\n                            attempt++;\r\n                            var perfTiming = null;\r\n                            var entries = performance.getEntries();\r\n                            for (var lp = entries.length - 1; lp >= 0; lp--) {\r\n                                var entry = entries[lp];\r\n                                if (entry) {\r\n                                    if (entry.entryType === \"resource\") {\r\n                                        if (entry.initiatorType === initiatorType &&\r\n                                            (_indexOf(entry.name, requestUrl) !== -1 || _indexOf(requestUrl, entry.name) !== -1)) {\r\n                                            perfTiming = entry;\r\n                                        }\r\n                                    }\r\n                                    else if (entry.entryType === \"mark\" && entry.name === perfMark.name) {\r\n                                        // We hit the start event\r\n                                        ajaxData.perfTiming = perfTiming;\r\n                                        break;\r\n                                    }\r\n                                    if (entry.startTime < perfMark.startTime - 1000) {\r\n                                        // Fallback to try and reduce the time spent looking for the perf entry\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        if (!perfMark || // - we don't have a perfMark or\r\n                            ajaxData.perfTiming || // - we have not found the perf entry or\r\n                            attempt >= maxAttempts || // - we have tried too many attempts or\r\n                            ajaxData.async === false) {\r\n                            if (perfMark && CoreUtils.isFunction(performance.clearMarks)) {\r\n                                // Remove the mark so we don't fill up the performance resources too much\r\n                                performance.clearMarks(perfMark.name);\r\n                            }\r\n                            ajaxData.perfAttempts = attempt;\r\n                            // just continue and report the track event\r\n                            trackCallback();\r\n                        }\r\n                        else {\r\n                            // We need to wait for the browser to populate the window.performance entry\r\n                            // This needs to be at least 1ms as waiting <= 1 (on firefox) is not enough time for fetch or xhr,\r\n                            // this is a scheduling issue for the browser implementation\r\n                            setTimeout(locateResourceTiming, retryDelay);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        reportError(e);\r\n                    }\r\n                })();\r\n            }\r\n            function _createFetchRecord(input, init) {\r\n                var traceID = (_context && _context.telemetryTrace && _context.telemetryTrace.traceID) || Util.generateW3CId();\r\n                var spanID = Util.generateW3CId().substr(0, 16);\r\n                var ajaxData = new ajaxRecord(traceID, spanID, _self[strDiagLog]());\r\n                ajaxData.requestSentTime = DateTimeUtils.Now();\r\n                if (input instanceof Request) {\r\n                    ajaxData.requestUrl = input ? input.url : \"\";\r\n                }\r\n                else {\r\n                    ajaxData.requestUrl = input;\r\n                }\r\n                var method = \"GET\";\r\n                if (init && init.method) {\r\n                    method = init.method;\r\n                }\r\n                else if (input && input instanceof Request) {\r\n                    method = input.method;\r\n                }\r\n                ajaxData.method = method;\r\n                var requestHeaders = {};\r\n                if (_enableRequestHeaderTracking) {\r\n                    var headers = new Headers((init ? init.headers : 0) || (input instanceof Request ? (input.headers || {}) : {}));\r\n                    headers.forEach(function (value, key) {\r\n                        requestHeaders[key] = value;\r\n                    });\r\n                }\r\n                ajaxData.requestHeaders = requestHeaders;\r\n                _createMarkId(\"fetch\", ajaxData);\r\n                return ajaxData;\r\n            }\r\n            function _getFailedFetchDiagnosticsMessage(input) {\r\n                var result = \"\";\r\n                try {\r\n                    if (!_isNullOrUndefined(input)) {\r\n                        if (typeof (input) === \"string\") {\r\n                            result += \"(url: '\" + input + \"')\";\r\n                        }\r\n                        else {\r\n                            result += \"(url: '\" + input.url + \"')\";\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternalCritical(_self, _InternalMessageId.FailedMonitorAjaxOpen, \"Failed to grab failed fetch diagnostics message\", { exception: Util.dump(e) });\r\n                }\r\n                return result;\r\n            }\r\n            function _reportFetchMetrics(callDetails, status, input, ajaxData, getResponse, properties) {\r\n                if (!ajaxData) {\r\n                    return;\r\n                }\r\n                function _reportFetchError(msgId, e, failedProps) {\r\n                    var errorProps = failedProps || {};\r\n                    errorProps[\"fetchDiagnosticsMessage\"] = _getFailedFetchDiagnosticsMessage(input);\r\n                    if (e) {\r\n                        errorProps[\"exception\"] = Util.dump(e);\r\n                    }\r\n                    _throwInternalWarning(_self, msgId, \"Failed to calculate the duration of the fetch call, monitoring data for this fetch call won't be sent.\", errorProps);\r\n                }\r\n                ajaxData.responseFinishedTime = DateTimeUtils.Now();\r\n                ajaxData.status = status;\r\n                _findPerfResourceEntry(\"fetch\", ajaxData, function () {\r\n                    var dependency = ajaxData.CreateTrackItem(\"Fetch\", _enableRequestHeaderTracking, getResponse);\r\n                    if (dependency) {\r\n                        _self[strTrackDependencyDataInternal](dependency);\r\n                    }\r\n                    else {\r\n                        _reportFetchError(_InternalMessageId.FailedMonitorAjaxDur, null, {\r\n                            requestSentTime: ajaxData.requestSentTime,\r\n                            responseFinishedTime: ajaxData.responseFinishedTime\r\n                        });\r\n                    }\r\n                }, function (e) {\r\n                    _reportFetchError(_InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, e, null);\r\n                });\r\n            }\r\n            function _getFetchCorrelationContext(response) {\r\n                if (response && response.headers) {\r\n                    try {\r\n                        var responseHeader = response.headers.get(RequestHeaders.requestContextHeader);\r\n                        return CorrelationIdHelper.getCorrelationContext(responseHeader);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternalWarning(_self, _InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, \"Failed to get Request-Context correlation header as it may be not included in the response or not accessible.\", {\r\n                            fetchDiagnosticsMessage: _getFailedFetchDiagnosticsMessage(response),\r\n                            exception: Util.dump(e)\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n    AjaxMonitor.getDefaultConfig = function () {\r\n        var config = {\r\n            maxAjaxCallsPerView: 500,\r\n            disableAjaxTracking: false,\r\n            disableFetchTracking: true,\r\n            disableCorrelationHeaders: false,\r\n            distributedTracingMode: DistributedTracingModes.AI,\r\n            correlationHeaderExcludedDomains: [\r\n                \"*.blob.core.windows.net\",\r\n                \"*.blob.core.chinacloudapi.cn\",\r\n                \"*.blob.core.cloudapi.de\",\r\n                \"*.blob.core.usgovcloudapi.net\"\r\n            ],\r\n            correlationHeaderDomains: undefined,\r\n            appId: undefined,\r\n            enableCorsCorrelation: false,\r\n            enableRequestHeaderTracking: false,\r\n            enableResponseHeaderTracking: false,\r\n            enableAjaxErrorStatusText: false,\r\n            enableAjaxPerfTracking: false,\r\n            maxAjaxPerfLookupAttempts: 3,\r\n            ajaxPerfLookupDelay: 25\r\n        };\r\n        return config;\r\n    };\r\n    AjaxMonitor.getEmptyConfig = function () {\r\n        var emptyConfig = this.getDefaultConfig();\r\n        _arrForEach(_objKeys(emptyConfig), function (value) {\r\n            emptyConfig[value] = undefined;\r\n        });\r\n        return emptyConfig;\r\n    };\r\n// Removed Stub for AjaxMonitor.prototype.initialize.\r\n// Removed Stub for AjaxMonitor.prototype.teardown.\r\n    AjaxMonitor.prototype.processTelemetry = function (item, itemCtx) {\r\n        this.processNext(item, itemCtx);\r\n    };\r\n// Removed Stub for AjaxMonitor.prototype.trackDependencyData.\r\n// Removed Stub for AjaxMonitor.prototype.includeCorrelationHeaders.\r\n// Removed Stub for AjaxMonitor.prototype.trackDependencyDataInternal.\r\n    AjaxMonitor.identifier = \"AjaxDependencyPlugin\";\r\n    return AjaxMonitor;\r\n}(BaseTelemetryPlugin));\r\nexport { AjaxMonitor };\r\n//# sourceMappingURL=ajax.js.map","/*!\n * Application Insights JavaScript SDK - Web, 2.5.9\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { CoreUtils, AppInsightsCore, LoggingSeverity, _InternalMessageId, hasWindow, hasDocument, isReactNative, doPerf } from \"@microsoft/applicationinsights-core-js\";\r\nimport { ApplicationInsights } from \"@microsoft/applicationinsights-analytics-js\";\r\nimport { Sender } from \"@microsoft/applicationinsights-channel-js\";\r\nimport { PropertiesPlugin } from \"@microsoft/applicationinsights-properties-js\";\r\nimport { AjaxPlugin as DependenciesPlugin } from '@microsoft/applicationinsights-dependencies-js';\r\nimport * as Common from \"@microsoft/applicationinsights-common\";\r\n\"use strict\";\r\nvar _internalSdkSrc;\r\n;\r\n/**\r\n * Telemetry type classes, e.g. PageView, Exception, etc\r\n */\r\nexport var Telemetry = Common;\r\n/**\r\n * Application Insights API\r\n * @class Initialization\r\n * @implements {IApplicationInsights}\r\n */\r\nvar Initialization = /** @class */ (function () {\r\n    function Initialization(snippet) {\r\n        var _self = this;\r\n        // initialize the queue and config in case they are undefined\r\n        _self._snippetVersion = \"\" + (snippet.sv || snippet.version || \"\");\r\n        snippet.queue = snippet.queue || [];\r\n        snippet.version = snippet.version || 2.0; // Default to new version\r\n        var config = snippet.config || {};\r\n        if (config.connectionString) {\r\n            var cs = Common.ConnectionStringParser.parse(config.connectionString);\r\n            var ingest = cs.ingestionendpoint;\r\n            config.endpointUrl = ingest ? ingest + \"/v2/track\" : config.endpointUrl; // only add /v2/track when from connectionstring\r\n            config.instrumentationKey = cs.instrumentationkey || config.instrumentationKey;\r\n        }\r\n        _self.appInsights = new ApplicationInsights();\r\n        _self.properties = new PropertiesPlugin();\r\n        _self.dependencies = new DependenciesPlugin();\r\n        _self.core = new AppInsightsCore();\r\n        _self.snippet = snippet;\r\n        _self.config = config;\r\n        _self.getSKUDefaults();\r\n    }\r\n    // Analytics Plugin\r\n    /**\r\n     * Log a user action or other occurrence.\r\n     * @param {IEventTelemetry} event\r\n     * @param {ICustomProperties} [customProperties]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackEvent = function (event, customProperties) {\r\n        this.appInsights.trackEvent(event, customProperties);\r\n    };\r\n    /**\r\n     * Logs that a page, or similar container was displayed to the user.\r\n     * @param {IPageViewTelemetry} pageView\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackPageView = function (pageView) {\r\n        var inPv = pageView || {};\r\n        this.appInsights.trackPageView(inPv);\r\n    };\r\n    /**\r\n     * Log a bag of performance information via the customProperties field.\r\n     * @param {IPageViewPerformanceTelemetry} pageViewPerformance\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackPageViewPerformance = function (pageViewPerformance) {\r\n        var inPvp = pageViewPerformance || {};\r\n        this.appInsights.trackPageViewPerformance(inPvp);\r\n    };\r\n    /**\r\n     * Log an exception that you have caught.\r\n     * @param {IExceptionTelemetry} exception\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackException = function (exception) {\r\n        if (!exception.exception && exception.error) {\r\n            exception.exception = exception.error;\r\n        }\r\n        this.appInsights.trackException(exception);\r\n    };\r\n    /**\r\n     * Manually send uncaught exception telemetry. This method is automatically triggered\r\n     * on a window.onerror event.\r\n     * @param {IAutoExceptionTelemetry} exception\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype._onerror = function (exception) {\r\n        this.appInsights._onerror(exception);\r\n    };\r\n    /**\r\n     * Log a diagnostic scenario such entering or leaving a function.\r\n     * @param {ITraceTelemetry} trace\r\n     * @param {ICustomProperties} [customProperties]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackTrace = function (trace, customProperties) {\r\n        this.appInsights.trackTrace(trace, customProperties);\r\n    };\r\n    /**\r\n     * Log a numeric value that is not associated with a specific event. Typically used\r\n     * to send regular reports of performance indicators.\r\n     *\r\n     * To send a single measurement, just use the `name` and `average` fields\r\n     * of {@link IMetricTelemetry}.\r\n     *\r\n     * If you take measurements frequently, you can reduce the telemetry bandwidth by\r\n     * aggregating multiple measurements and sending the resulting average and modifying\r\n     * the `sampleCount` field of {@link IMetricTelemetry}.\r\n     * @param {IMetricTelemetry} metric input object argument. Only `name` and `average` are mandatory.\r\n     * @param {ICustomProperties} [customProperties]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackMetric = function (metric, customProperties) {\r\n        this.appInsights.trackMetric(metric, customProperties);\r\n    };\r\n    /**\r\n     * Starts the timer for tracking a page load time. Use this instead of `trackPageView` if you want to control when the page view timer starts and stops,\r\n     * but don't want to calculate the duration yourself. This method doesn't send any telemetry. Call `stopTrackPage` to log the end of the page view\r\n     * and send the event.\r\n     * @param name A string that idenfities this item, unique within this HTML document. Defaults to the document title.\r\n     */\r\n    Initialization.prototype.startTrackPage = function (name) {\r\n        this.appInsights.startTrackPage(name);\r\n    };\r\n    /**\r\n     * Stops the timer that was started by calling `startTrackPage` and sends the pageview load time telemetry with the specified properties and measurements.\r\n     * The duration of the page view will be the time between calling `startTrackPage` and `stopTrackPage`.\r\n     * @param   name  The string you used as the name in startTrackPage. Defaults to the document title.\r\n     * @param   url   String - a relative or absolute URL that identifies the page or other item. Defaults to the window location.\r\n     * @param   properties  map[string, string] - additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this page, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    Initialization.prototype.stopTrackPage = function (name, url, customProperties, measurements) {\r\n        this.appInsights.stopTrackPage(name, url, customProperties, measurements);\r\n    };\r\n    Initialization.prototype.startTrackEvent = function (name) {\r\n        this.appInsights.startTrackEvent(name);\r\n    };\r\n    /**\r\n     * Log an extended event that you started timing with `startTrackEvent`.\r\n     * @param   name    The string you used to identify this event in `startTrackEvent`.\r\n     * @param   properties  map[string, string] - additional data used to filter events and metrics in the portal. Defaults to empty.\r\n     * @param   measurements    map[string, number] - metrics associated with this event, displayed in Metrics Explorer on the portal. Defaults to empty.\r\n     */\r\n    Initialization.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        this.appInsights.stopTrackEvent(name, properties, measurements); // Todo: Fix to pass measurements once type is updated\r\n    };\r\n    Initialization.prototype.addTelemetryInitializer = function (telemetryInitializer) {\r\n        return this.appInsights.addTelemetryInitializer(telemetryInitializer);\r\n    };\r\n    // Properties Plugin\r\n    /**\r\n     * Set the authenticated user id and the account id. Used for identifying a specific signed-in user. Parameters must not contain whitespace or ,;=|\r\n     *\r\n     * The method will only set the `authenticatedUserId` and `accountId` in the current page view. To set them for the whole session, you should set `storeInCookie = true`\r\n     * @param {string} authenticatedUserId\r\n     * @param {string} [accountId]\r\n     * @param {boolean} [storeInCookie=false]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n        if (storeInCookie === void 0) { storeInCookie = false; }\r\n        this.properties.context.user.setAuthenticatedUserContext(authenticatedUserId, accountId, storeInCookie);\r\n    };\r\n    /**\r\n     * Clears the authenticated user id and account id. The associated cookie is cleared, if present.\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.clearAuthenticatedUserContext = function () {\r\n        this.properties.context.user.clearAuthenticatedUserContext();\r\n    };\r\n    // Dependencies Plugin\r\n    /**\r\n     * Log a dependency call (e.g. ajax)\r\n     * @param {IDependencyTelemetry} dependency\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.trackDependencyData = function (dependency) {\r\n        this.dependencies.trackDependencyData(dependency);\r\n    };\r\n    // Misc\r\n    /**\r\n     * Manually trigger an immediate send of all telemetry still in the buffer.\r\n     * @param {boolean} [async=true]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.flush = function (async) {\r\n        var _this = this;\r\n        if (async === void 0) { async = true; }\r\n        doPerf(this.core, function () { return \"AISKU.flush\"; }, function () {\r\n            CoreUtils.arrForEach(_this.core.getTransmissionControls(), function (channels) {\r\n                CoreUtils.arrForEach(channels, function (channel) {\r\n                    channel.flush(async);\r\n                });\r\n            });\r\n        }, null, async);\r\n    };\r\n    /**\r\n     * Manually trigger an immediate send of all telemetry still in the buffer using beacon Sender.\r\n     * Fall back to xhr sender if beacon is not supported.\r\n     * @param {boolean} [async=true]\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.onunloadFlush = function (async) {\r\n        if (async === void 0) { async = true; }\r\n        CoreUtils.arrForEach(this.core.getTransmissionControls(), function (channels) {\r\n            CoreUtils.arrForEach(channels, function (channel) {\r\n                if (channel.onunloadFlush) {\r\n                    channel.onunloadFlush();\r\n                }\r\n                else {\r\n                    channel.flush(async);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Initialize this instance of ApplicationInsights\r\n     * @returns {IApplicationInsights}\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.loadAppInsights = function (legacyMode, logger, notificationManager) {\r\n        var _this = this;\r\n        if (legacyMode === void 0) { legacyMode = false; }\r\n        var _self = this;\r\n        function _updateSnippetProperties(snippet) {\r\n            if (snippet) {\r\n                var snippetVer = \"\";\r\n                if (!CoreUtils.isNullOrUndefined(_self._snippetVersion)) {\r\n                    snippetVer += _self._snippetVersion;\r\n                }\r\n                if (legacyMode) {\r\n                    snippetVer += \".lg\";\r\n                }\r\n                if (_self.context && _self.context.internal) {\r\n                    _self.context.internal.snippetVer = snippetVer || \"-\";\r\n                }\r\n                // apply updated properties to the global instance (snippet)\r\n                for (var field in _self) {\r\n                    if (CoreUtils.isString(field) &&\r\n                        !CoreUtils.isFunction(_self[field]) &&\r\n                        field.substring(0, 1) !== \"_\") {\r\n                        snippet[field] = _self[field];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // dont allow additional channels/other extensions for legacy mode; legacy mode is only to allow users to switch with no code changes!\r\n        if (legacyMode && _self.config.extensions && _self.config.extensions.length > 0) {\r\n            throw new Error(\"Extensions not allowed in legacy mode\");\r\n        }\r\n        doPerf(_self.core, function () { return \"AISKU.loadAppInsights\"; }, function () {\r\n            var extensions = [];\r\n            var appInsightsChannel = new Sender();\r\n            extensions.push(appInsightsChannel);\r\n            extensions.push(_self.properties);\r\n            extensions.push(_self.dependencies);\r\n            extensions.push(_self.appInsights);\r\n            // initialize core\r\n            _self.core.initialize(_self.config, extensions, logger, notificationManager);\r\n            _self.context = _self.properties.context;\r\n            if (_internalSdkSrc && _self.context) {\r\n                _self.context.internal.sdkSrc = _internalSdkSrc;\r\n            }\r\n            _updateSnippetProperties(_self.snippet);\r\n            // Empty queue of all api calls logged prior to sdk download\r\n            _self.emptyQueue();\r\n            _self.pollInternalLogs();\r\n            _self.addHousekeepingBeforeUnload(_this);\r\n        });\r\n        return _self;\r\n    };\r\n    /**\r\n     * Overwrite the lazy loaded fields of global window snippet to contain the\r\n     * actual initialized API methods\r\n     * @param {Snippet} snippet\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.updateSnippetDefinitions = function (snippet) {\r\n        // apply full appInsights to the global instance\r\n        // Note: This must be called before loadAppInsights is called\r\n        for (var field in this) {\r\n            if (CoreUtils.isString(field)) {\r\n                snippet[field] = this[field];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Call any functions that were queued before the main script was loaded\r\n     * @memberof Initialization\r\n     */\r\n    Initialization.prototype.emptyQueue = function () {\r\n        var _self = this;\r\n        // call functions that were queued before the main script was loaded\r\n        try {\r\n            if (Common.Util.isArray(_self.snippet.queue)) {\r\n                // note: do not check length in the for-loop conditional in case something goes wrong and the stub methods are not overridden.\r\n                var length_1 = _self.snippet.queue.length;\r\n                for (var i = 0; i < length_1; i++) {\r\n                    var call = _self.snippet.queue[i];\r\n                    call();\r\n                }\r\n                _self.snippet.queue = undefined;\r\n                delete _self.snippet.queue;\r\n            }\r\n        }\r\n        catch (exception) {\r\n            var properties = {};\r\n            if (exception && CoreUtils.isFunction(exception.toString)) {\r\n                properties.exception = exception.toString();\r\n            }\r\n            // need from core\r\n            // Microsoft.ApplicationInsights._InternalLogging.throwInternal(\r\n            //     LoggingSeverity.WARNING,\r\n            //     _InternalMessageId.FailedToSendQueuedTelemetry,\r\n            //     \"Failed to send queued telemetry\",\r\n            //     properties);\r\n        }\r\n    };\r\n    Initialization.prototype.pollInternalLogs = function () {\r\n        this.core.pollInternalLogs();\r\n    };\r\n    Initialization.prototype.addHousekeepingBeforeUnload = function (appInsightsInstance) {\r\n        // Add callback to push events when the user navigates away\r\n        if (hasWindow() || hasDocument()) {\r\n            var performHousekeeping = function () {\r\n                // Adds the ability to flush all data before the page unloads.\r\n                // Note: This approach tries to push a sync request with all the pending events onbeforeunload.\r\n                // Firefox does not respect this.Other browsers DO push out the call with < 100% hit rate.\r\n                // Telemetry here will help us analyze how effective this approach is.\r\n                // Another approach would be to make this call sync with a acceptable timeout to reduce the\r\n                // impact on user experience.\r\n                // appInsightsInstance.context._sender.triggerSend();\r\n                appInsightsInstance.onunloadFlush(false);\r\n                // Back up the current session to local storage\r\n                // This lets us close expired sessions after the cookies themselves expire\r\n                var ext = appInsightsInstance.appInsights.core['_extensions'][Common.PropertiesPluginIdentifier];\r\n                if (ext && ext.context && ext.context._sessionManager) {\r\n                    ext.context._sessionManager.backup();\r\n                }\r\n            };\r\n            if (!appInsightsInstance.appInsights.config.disableFlushOnBeforeUnload) {\r\n                // Hook the unload event for the document, window and body to ensure that the client events are flushed to the server\r\n                // As just hooking the window does not always fire (on chrome) for page navigations.\r\n                var added = CoreUtils.addEventHandler('beforeunload', performHousekeeping);\r\n                added = CoreUtils.addEventHandler('pagehide', performHousekeeping) || added;\r\n                // A reactNative app may not have a window and therefore the beforeunload/pagehide events -- so don't\r\n                // log the failure in this case\r\n                if (!added && !isReactNative()) {\r\n                    appInsightsInstance.appInsights.core.logger.throwInternal(LoggingSeverity.CRITICAL, _InternalMessageId.FailedToAddHandlerForOnBeforeUnload, 'Could not add handler for beforeunload and pagehide');\r\n                }\r\n            }\r\n            // We also need to hook the pagehide event as not all versions of Safari support load/unload events.\r\n            if (!appInsightsInstance.appInsights.config.disableFlushOnUnload) {\r\n                // Not adding any telemetry as pagehide as it's not supported on all browsers\r\n                CoreUtils.addEventHandler('pagehide', performHousekeeping);\r\n            }\r\n        }\r\n    };\r\n    Initialization.prototype.getSKUDefaults = function () {\r\n        var _self = this;\r\n        _self.config.diagnosticLogInterval =\r\n            _self.config.diagnosticLogInterval && _self.config.diagnosticLogInterval > 0 ? _self.config.diagnosticLogInterval : 10000;\r\n    };\r\n    return Initialization;\r\n}());\r\nexport { Initialization };\r\n// tslint:disable-next-line\r\n(function () {\r\n    var sdkSrc = null;\r\n    var isModule = false;\r\n    var cdns = [\r\n        \"://az416426.vo.msecnd.net/\"\r\n    ];\r\n    try {\r\n        // Try and determine whether the sdk is being loaded from the CDN\r\n        // currentScript is only valid during initial processing\r\n        var scrpt = (document || {}).currentScript;\r\n        if (scrpt) {\r\n            sdkSrc = scrpt.src;\r\n            // } else {\r\n            //     // We need to update to at least typescript 2.9 for this to work :-(\r\n            //     // Leaving as a stub for now so after we upgrade this breadcrumb is available\r\n            //     let meta = import.meta;\r\n            //     sdkSrc = (meta || {}).url;\r\n            //     isModule = true;\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    if (sdkSrc) {\r\n        try {\r\n            var url = sdkSrc.toLowerCase();\r\n            if (url) {\r\n                var src = \"\";\r\n                for (var idx = 0; idx < cdns.length; idx++) {\r\n                    if (url.indexOf(cdns[idx]) !== -1) {\r\n                        src = \"cdn\" + (idx + 1);\r\n                        if (url.indexOf(\"/scripts/\") === -1) {\r\n                            if (url.indexOf(\"/next/\") !== -1) {\r\n                                src += \"-next\";\r\n                            }\r\n                            else if (url.indexOf(\"/beta/\") !== -1) {\r\n                                src += \"-beta\";\r\n                            }\r\n                        }\r\n                        _internalSdkSrc = src + (isModule ? \".mod\" : \"\");\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n})();\r\n//# sourceMappingURL=Initialization.js.map","/*!\n * Application Insights JavaScript SDK - Web, 2.5.9\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { Util, ProcessLegacy } from \"@microsoft/applicationinsights-common\";\r\n// ToDo: fix properties and measurements once updates are done to common\r\nvar AppInsightsDeprecated = /** @class */ (function () {\r\n    function AppInsightsDeprecated(snippet, appInsightsNew) {\r\n        this._hasLegacyInitializers = false;\r\n        this._queue = [];\r\n        this.config = AppInsightsDeprecated.getDefaultConfig(snippet.config);\r\n        this.appInsightsNew = appInsightsNew;\r\n        this.context = { addTelemetryInitializer: this.addTelemetryInitializers.bind(this) };\r\n    }\r\n    AppInsightsDeprecated.getDefaultConfig = function (config) {\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        // set default values\r\n        config.endpointUrl = config.endpointUrl || \"https://dc.services.visualstudio.com/v2/track\";\r\n        config.sessionRenewalMs = 30 * 60 * 1000;\r\n        config.sessionExpirationMs = 24 * 60 * 60 * 1000;\r\n        config.maxBatchSizeInBytes = config.maxBatchSizeInBytes > 0 ? config.maxBatchSizeInBytes : 102400; // 100kb\r\n        config.maxBatchInterval = !isNaN(config.maxBatchInterval) ? config.maxBatchInterval : 15000;\r\n        config.enableDebug = Util.stringToBoolOrDefault(config.enableDebug);\r\n        config.disableExceptionTracking = Util.stringToBoolOrDefault(config.disableExceptionTracking);\r\n        config.disableTelemetry = Util.stringToBoolOrDefault(config.disableTelemetry);\r\n        config.verboseLogging = Util.stringToBoolOrDefault(config.verboseLogging);\r\n        config.emitLineDelimitedJson = Util.stringToBoolOrDefault(config.emitLineDelimitedJson);\r\n        config.diagnosticLogInterval = config.diagnosticLogInterval || 10000;\r\n        config.autoTrackPageVisitTime = Util.stringToBoolOrDefault(config.autoTrackPageVisitTime);\r\n        if (isNaN(config.samplingPercentage) || config.samplingPercentage <= 0 || config.samplingPercentage >= 100) {\r\n            config.samplingPercentage = 100;\r\n        }\r\n        config.disableAjaxTracking = Util.stringToBoolOrDefault(config.disableAjaxTracking);\r\n        config.maxAjaxCallsPerView = !isNaN(config.maxAjaxCallsPerView) ? config.maxAjaxCallsPerView : 500;\r\n        config.isBeaconApiDisabled = Util.stringToBoolOrDefault(config.isBeaconApiDisabled, true);\r\n        config.disableCorrelationHeaders = Util.stringToBoolOrDefault(config.disableCorrelationHeaders);\r\n        config.correlationHeaderExcludedDomains = config.correlationHeaderExcludedDomains || [\r\n            \"*.blob.core.windows.net\",\r\n            \"*.blob.core.chinacloudapi.cn\",\r\n            \"*.blob.core.cloudapi.de\",\r\n            \"*.blob.core.usgovcloudapi.net\"\r\n        ];\r\n        config.disableFlushOnBeforeUnload = Util.stringToBoolOrDefault(config.disableFlushOnBeforeUnload);\r\n        config.disableFlushOnUnload = Util.stringToBoolOrDefault(config.disableFlushOnUnload, config.disableFlushOnBeforeUnload);\r\n        config.enableSessionStorageBuffer = Util.stringToBoolOrDefault(config.enableSessionStorageBuffer, true);\r\n        config.isRetryDisabled = Util.stringToBoolOrDefault(config.isRetryDisabled);\r\n        config.isCookieUseDisabled = Util.stringToBoolOrDefault(config.isCookieUseDisabled);\r\n        config.isStorageUseDisabled = Util.stringToBoolOrDefault(config.isStorageUseDisabled);\r\n        config.isBrowserLinkTrackingEnabled = Util.stringToBoolOrDefault(config.isBrowserLinkTrackingEnabled);\r\n        config.enableCorsCorrelation = Util.stringToBoolOrDefault(config.enableCorsCorrelation);\r\n        return config;\r\n    };\r\n    /**\r\n     * The array of telemetry initializers to call before sending each telemetry item.\r\n     */\r\n    AppInsightsDeprecated.prototype.addTelemetryInitializers = function (callBack) {\r\n        var _this = this;\r\n        // Add initializer to current processing only if there is any old telemetry initializer\r\n        if (!this._hasLegacyInitializers) {\r\n            this.appInsightsNew.addTelemetryInitializer(function (item) {\r\n                _this._processLegacyInitializers(item); // setup call back for each legacy processor\r\n            });\r\n            this._hasLegacyInitializers = true;\r\n        }\r\n        this._queue.push(callBack);\r\n    };\r\n    AppInsightsDeprecated.prototype.startTrackPage = function (name) {\r\n        this.appInsightsNew.startTrackPage(name);\r\n    };\r\n    AppInsightsDeprecated.prototype.stopTrackPage = function (name, url, properties, measurements) {\r\n        this.appInsightsNew.stopTrackPage(name, url, properties); // update\r\n    };\r\n    AppInsightsDeprecated.prototype.trackPageView = function (name, url, properties, measurements, duration) {\r\n        var telemetry = {\r\n            name: name,\r\n            uri: url,\r\n            properties: properties,\r\n            measurements: measurements\r\n        };\r\n        // fix for props, measurements, duration\r\n        this.appInsightsNew.trackPageView(telemetry);\r\n    };\r\n    AppInsightsDeprecated.prototype.trackEvent = function (name, properties, measurements) {\r\n        this.appInsightsNew.trackEvent({ name: name });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackDependency = function (id, method, absoluteUrl, pathName, totalTime, success, resultCode) {\r\n        this.appInsightsNew.trackDependencyData({\r\n            id: id,\r\n            target: absoluteUrl,\r\n            type: pathName,\r\n            duration: totalTime,\r\n            properties: { HttpMethod: method },\r\n            success: success,\r\n            responseCode: resultCode\r\n        });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackException = function (exception, handledAt, properties, measurements, severityLevel) {\r\n        this.appInsightsNew.trackException({\r\n            exception: exception\r\n        });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackMetric = function (name, average, sampleCount, min, max, properties) {\r\n        this.appInsightsNew.trackMetric({ name: name, average: average, sampleCount: sampleCount, min: min, max: max });\r\n    };\r\n    AppInsightsDeprecated.prototype.trackTrace = function (message, properties, severityLevel) {\r\n        this.appInsightsNew.trackTrace({ message: message, severityLevel: severityLevel });\r\n    };\r\n    AppInsightsDeprecated.prototype.flush = function (async) {\r\n        this.appInsightsNew.flush(async);\r\n    };\r\n    AppInsightsDeprecated.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n        this.appInsightsNew.context.user.setAuthenticatedUserContext(authenticatedUserId, accountId, storeInCookie);\r\n    };\r\n    AppInsightsDeprecated.prototype.clearAuthenticatedUserContext = function () {\r\n        this.appInsightsNew.context.user.clearAuthenticatedUserContext();\r\n    };\r\n    AppInsightsDeprecated.prototype._onerror = function (message, url, lineNumber, columnNumber, error) {\r\n        this.appInsightsNew._onerror({ message: message, url: url, lineNumber: lineNumber, columnNumber: columnNumber, error: error });\r\n    };\r\n    AppInsightsDeprecated.prototype.startTrackEvent = function (name) {\r\n        this.appInsightsNew.startTrackEvent(name);\r\n    };\r\n    AppInsightsDeprecated.prototype.stopTrackEvent = function (name, properties, measurements) {\r\n        this.appInsightsNew.stopTrackEvent(name, properties, measurements);\r\n    };\r\n    AppInsightsDeprecated.prototype.downloadAndSetup = function (config) {\r\n        throw new Error(\"downloadAndSetup not implemented in web SKU\");\r\n    };\r\n    AppInsightsDeprecated.prototype.updateSnippetDefinitions = function (snippet) {\r\n        // apply full appInsights to the global instance\r\n        // Note: This must be called before loadAppInsights is called\r\n        for (var field in this) {\r\n            if (typeof field === 'string') {\r\n                snippet[field] = this[field];\r\n            }\r\n        }\r\n    };\r\n    // note: these are split into methods to enable unit tests\r\n    AppInsightsDeprecated.prototype.loadAppInsights = function () {\r\n        // initialize global instance of appInsights\r\n        // var appInsights = new Microsoft.ApplicationInsights.AppInsights(this.config);\r\n        var _this = this;\r\n        // implement legacy version of trackPageView for 0.10<\r\n        if (this.config[\"iKey\"]) {\r\n            var originalTrackPageView_1 = this.trackPageView;\r\n            this.trackPageView = function (pagePath, properties, measurements) {\r\n                originalTrackPageView_1.apply(_this, [null, pagePath, properties, measurements]);\r\n            };\r\n        }\r\n        // implement legacy pageView interface if it is present in the snippet\r\n        var legacyPageView = \"logPageView\";\r\n        if (typeof this.snippet[legacyPageView] === \"function\") {\r\n            this[legacyPageView] = function (pagePath, properties, measurements) {\r\n                _this.trackPageView(null, pagePath, properties, measurements);\r\n            };\r\n        }\r\n        // implement legacy event interface if it is present in the snippet\r\n        var legacyEvent = \"logEvent\";\r\n        if (typeof this.snippet[legacyEvent] === \"function\") {\r\n            this[legacyEvent] = function (name, props, measurements) {\r\n                _this.trackEvent(name, props, measurements);\r\n            };\r\n        }\r\n        return this;\r\n    };\r\n    AppInsightsDeprecated.prototype._processLegacyInitializers = function (item) {\r\n        // instead of mapping new to legacy and then back again and repeating in channel, attach callback for channel to call\r\n        item.tags[ProcessLegacy] = this._queue;\r\n        return item;\r\n    };\r\n    return AppInsightsDeprecated;\r\n}());\r\nexport { AppInsightsDeprecated };\r\n//# sourceMappingURL=ApplicationInsightsDeprecated.js.map","/*!\n * Application Insights JavaScript SDK - Web, 2.5.9\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { AppInsightsDeprecated } from \"./ApplicationInsightsDeprecated\";\r\nimport { Initialization as ApplicationInsights } from \"./Initialization\";\r\nvar ApplicationInsightsContainer = /** @class */ (function () {\r\n    function ApplicationInsightsContainer() {\r\n    }\r\n    ApplicationInsightsContainer.getAppInsights = function (snippet, version) {\r\n        var initialization = new ApplicationInsights(snippet);\r\n        var legacyMode = version !== 2.0 ? true : false;\r\n        // Two target scenarios:\r\n        // 1. Customer runs v1 snippet + runtime. If customer updates just cdn location to new SDK, it will run in compat mode so old apis work\r\n        // 2. Customer updates to new snippet (that uses cdn location to new SDK. This is same as a new customer onboarding\r\n        // and all api signatures are expected to map to new SDK. Note new snippet specifies version\r\n        if (version === 2.0) {\r\n            initialization.updateSnippetDefinitions(snippet);\r\n            initialization.loadAppInsights(legacyMode);\r\n            return initialization; // default behavior with new snippet\r\n        }\r\n        else {\r\n            var legacy = new AppInsightsDeprecated(snippet, initialization); // target scenario old snippet + updated endpoint\r\n            legacy.updateSnippetDefinitions(snippet);\r\n            initialization.loadAppInsights(legacyMode);\r\n            return legacy;\r\n        }\r\n    };\r\n    return ApplicationInsightsContainer;\r\n}());\r\nexport { ApplicationInsightsContainer };\r\n//# sourceMappingURL=ApplicationInsightsContainer.js.map","/*!\n * Application Insights JavaScript SDK - Web, 2.5.9\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport '@microsoft/applicationinsights-shims';\r\nexport { Initialization as ApplicationInsights, Telemetry } from \"./Initialization\";\r\nexport { ApplicationInsightsContainer } from \"./ApplicationInsightsContainer\";\r\n// Re-exports\r\nexport { AppInsightsCore, LoggingSeverity, _InternalMessageId, PerfEvent, PerfManager, doPerf, NotificationManager } from \"@microsoft/applicationinsights-core-js\";\r\nexport { Util, SeverityLevel, Event, Exception, Metric, PageView, PageViewPerformance, RemoteDependencyData, Trace, DistributedTracingModes } from \"@microsoft/applicationinsights-common\";\r\nexport { Sender } from \"@microsoft/applicationinsights-channel-js\";\r\nexport { ApplicationInsights as ApplicationAnalytics } from \"@microsoft/applicationinsights-analytics-js\";\r\nexport { PropertiesPlugin } from \"@microsoft/applicationinsights-properties-js\";\r\nexport { AjaxPlugin as DependenciesPlugin } from \"@microsoft/applicationinsights-dependencies-js\";\r\n//# sourceMappingURL=applicationinsights-web.js.map","/**\n * @license\n * v1.2.6\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https://github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\nimport { extend, objectDefinedNotNull, getAttrValueFromString, jsS, hOP, combine, getGUID, mergeHeaders, mergeOptions, getHashCode } from '@pnp/common';\nimport { CachingOptions, Queryable, CachingParserWrapper, ODataBatch } from '@pnp/odata';\nimport { SPHttpClient, toAbsoluteUrl } from '@pnp/sp';\nimport { Logger } from '@pnp/logging';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\nfunction objectPath() {\r\n    return \"<ObjectPath Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" />\";\r\n}\r\nfunction identityQuery() {\r\n    return \"<ObjectIdentityQuery Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" />\";\r\n}\r\nfunction opQuery(selectProperties, childSelectProperties) {\r\n    // this is fairly opaque behavior, but is the simplest way to convey the required information.\r\n    // if selectProperties.length === 0 or null then select all\r\n    // else select indicated properties\r\n    if (selectProperties === void 0) { selectProperties = null; }\r\n    if (childSelectProperties === void 0) { childSelectProperties = null; }\r\n    // if childSelectProperties === null do not include that block\r\n    // if childSelectProperties.length === 0 then select all\r\n    // else select indicated properties\r\n    var builder = [];\r\n    builder.push(\"<Query Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\">\");\r\n    if (selectProperties === null || selectProperties.length < 1) {\r\n        builder.push(\"<Query SelectAllProperties=\\\"true\\\" >\");\r\n        builder.push(\"<Properties />\");\r\n        builder.push(\"</Query >\");\r\n    }\r\n    else {\r\n        builder.push(\"<Query SelectAllProperties=\\\"false\\\" >\");\r\n        builder.push(\"<Properties>\");\r\n        [].push.apply(builder, selectProperties.map(function (p) { return \"<Property Name=\\\"\" + p + \"\\\" SelectAll=\\\"true\\\" />\"; }));\r\n        builder.push(\"</Properties>\");\r\n        builder.push(\"</Query >\");\r\n    }\r\n    if (childSelectProperties !== null) {\r\n        if (childSelectProperties.length < 1) {\r\n            builder.push(\"<ChildItemQuery SelectAllProperties=\\\"true\\\" >\");\r\n            builder.push(\"<Properties />\");\r\n            builder.push(\"</ChildItemQuery >\");\r\n        }\r\n        else {\r\n            builder.push(\"<ChildItemQuery SelectAllProperties=\\\"false\\\" >\");\r\n            builder.push(\"<Properties>\");\r\n            [].push.apply(builder, childSelectProperties.map(function (p) { return \"<Property Name=\\\"\" + p + \"\\\" SelectAll=\\\"true\\\" />\"; }));\r\n            builder.push(\"</Properties>\");\r\n            builder.push(\"</ChildItemQuery >\");\r\n        }\r\n    }\r\n    builder.push(\"</Query >\");\r\n    return builder.join(\"\");\r\n}\r\nfunction setProperty(name, type, value) {\r\n    var builder = [];\r\n    builder.push(\"<SetProperty Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    builder.push(\"<Parameter Type=\\\"\" + type + \"\\\">\" + value + \"</Parameter>\");\r\n    builder.push(\"</SetProperty>\");\r\n    return builder.join(\"\");\r\n}\r\nfunction methodAction(name, params) {\r\n    var builder = [];\r\n    builder.push(\"<Method Id=\\\"$$ID$$\\\" ObjectPathId=\\\"$$PATH_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    if (params !== null) {\r\n        var arrParams = params.toArray();\r\n        if (arrParams.length < 1) {\r\n            builder.push(\"<Parameters />\");\r\n        }\r\n        else {\r\n            builder.push(\"<Parameters>\");\r\n            [].push.apply(builder, arrParams.map(function (p) { return \"<Parameter Type=\\\"\" + p.type + \"\\\">\" + p.value + \"</Parameter>\"; }));\r\n            builder.push(\"</Parameters>\");\r\n        }\r\n    }\r\n    builder.push(\"</Method>\");\r\n    return builder.join(\"\");\r\n}\r\nfunction objectProperties(o) {\r\n    return Object.getOwnPropertyNames(o).map(function (name) {\r\n        var value = o[name];\r\n        if (typeof value === \"boolean\") {\r\n            return setProperty(name, \"Boolean\", \"\" + value);\r\n        }\r\n        else if (typeof value === \"number\") {\r\n            return setProperty(name, \"Number\", \"\" + value);\r\n        }\r\n        else if (typeof value === \"string\") {\r\n            return setProperty(name, \"String\", \"\" + value);\r\n        }\r\n        return \"\";\r\n    }, []);\r\n}\n\nfunction property(name) {\r\n    var actions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        actions[_i - 1] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<Property Id=\\\"$$ID$$\\\" ParentId=\\\"$$PARENT_ID$$\\\" Name=\\\"\" + name + \"\\\" />\", actions);\r\n}\r\nfunction staticMethod(name, typeId) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<StaticMethod Id=\\\"$$ID$$\\\" Name=\\\"\" + name + \"\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\nfunction staticProperty(name, typeId) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<StaticProperty Id=\\\"$$ID$$\\\" Name=\\\"\" + name + \"\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\nfunction objConstructor(typeId) {\r\n    var actions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        actions[_i - 1] = arguments[_i];\r\n    }\r\n    return new ObjectPath(\"<Constructor Id=\\\"$$ID$$\\\" TypeId=\\\"\" + typeId + \"\\\" />\", actions);\r\n}\r\n/**\r\n * Used to build parameters when calling methods\r\n */\r\nvar MethodParams = /** @class */ (function () {\r\n    function MethodParams(_p) {\r\n        if (_p === void 0) { _p = []; }\r\n        this._p = _p;\r\n    }\r\n    MethodParams.build = function (initValues) {\r\n        if (initValues === void 0) { initValues = []; }\r\n        var params = new MethodParams();\r\n        [].push.apply(params._p, initValues);\r\n        return params;\r\n    };\r\n    MethodParams.prototype.string = function (value) {\r\n        return this.a(\"String\", value);\r\n    };\r\n    MethodParams.prototype.number = function (value) {\r\n        return this.a(\"Number\", value.toString());\r\n    };\r\n    MethodParams.prototype.boolean = function (value) {\r\n        return this.a(\"Boolean\", value.toString());\r\n    };\r\n    MethodParams.prototype.strArray = function (values) {\r\n        return this.a(\"Array\", values.map(function (v) { return \"<Object Type=\\\"String\\\">\" + v + \"</Object>\"; }).join(\"\"));\r\n    };\r\n    MethodParams.prototype.objectPath = function (inputIndex) {\r\n        return this.a(\"ObjectPath\", inputIndex.toString());\r\n    };\r\n    MethodParams.prototype.toArray = function () {\r\n        return this._p;\r\n    };\r\n    MethodParams.prototype.a = function (type, value) {\r\n        this._p.push({ type: type, value: value });\r\n        return this;\r\n    };\r\n    return MethodParams;\r\n}());\r\nfunction method(name, params) {\r\n    var actions = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        actions[_i - 2] = arguments[_i];\r\n    }\r\n    var builder = [];\r\n    builder.push(\"<Method Id=\\\"$$ID$$\\\" ParentId=\\\"$$PARENT_ID$$\\\" Name=\\\"\" + name + \"\\\">\");\r\n    if (params !== null) {\r\n        var arrParams = params.toArray();\r\n        if (arrParams.length < 1) {\r\n            builder.push(\"<Parameters />\");\r\n        }\r\n        else {\r\n            builder.push(\"<Parameters>\");\r\n            [].push.apply(builder, arrParams.map(function (p) {\r\n                if (p.type === \"ObjectPath\") {\r\n                    return \"<Parameter ObjectPathId=\\\"$$OP_PARAM_ID_\" + p.value + \"$$\\\" />\";\r\n                }\r\n                return \"<Parameter Type=\\\"\" + p.type + \"\\\">\" + p.value + \"</Parameter>\";\r\n            }));\r\n            builder.push(\"</Parameters>\");\r\n        }\r\n    }\r\n    builder.push(\"</Method>\");\r\n    return new ObjectPath(builder.join(\"\"), actions);\r\n}\n\n/**\r\n * Transforms an array of object paths into a request xml body. Does not do placeholder substitutions.\r\n *\r\n * @param objectPaths The object paths for which we want to generate a body\r\n */\r\nfunction writeObjectPathBody(objectPaths) {\r\n    var actions = [];\r\n    var paths = [];\r\n    objectPaths.forEach(function (op) {\r\n        paths.push(op.path);\r\n        actions.push.apply(actions, op.actions);\r\n    });\r\n    // create our xml payload\r\n    return [\r\n        \"<Request xmlns=\\\"http://schemas.microsoft.com/sharepoint/clientquery/2009\\\" SchemaVersion=\\\"15.0.0.0\\\" LibraryVersion=\\\"16.0.0.0\\\" ApplicationName=\\\"PnPjs\\\">\",\r\n        \"<Actions>\",\r\n        actions.join(\"\"),\r\n        \"</Actions>\",\r\n        \"<ObjectPaths>\",\r\n        paths.join(\"\"),\r\n        \"</ObjectPaths>\",\r\n        \"</Request>\",\r\n    ].join(\"\");\r\n}\n\n/**\r\n * Represents an ObjectPath used when querying ProcessQuery\r\n */\r\nvar ObjectPath = /** @class */ (function () {\r\n    function ObjectPath(path, actions, id, replaceAfter) {\r\n        if (actions === void 0) { actions = []; }\r\n        if (id === void 0) { id = -1; }\r\n        if (replaceAfter === void 0) { replaceAfter = []; }\r\n        this.path = path;\r\n        this.actions = actions;\r\n        this.id = id;\r\n        this.replaceAfter = replaceAfter;\r\n    }\r\n    return ObjectPath;\r\n}());\r\n/**\r\n * Replaces all found instance of the $$ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nfunction opSetId(id, xml) {\r\n    return xml.replace(/\\$\\$ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$PATH_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nfunction opSetPathId(id, xml) {\r\n    return xml.replace(/\\$\\$PATH_ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$PARENT_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param id New value to be insterted\r\n * @param xml The existing xml fragment in which the replace should occur\r\n */\r\nfunction opSetParentId(id, xml) {\r\n    return xml.replace(/\\$\\$PARENT_ID\\$\\$/g, id);\r\n}\r\n/**\r\n * Replaces all found instance of the $$OP_PARAM_ID$$ placeholder in the supplied xml string\r\n *\r\n * @param map A mapping where [index] = replaced_object_path_id\r\n * @param xml The existing xml fragment in which the replace should occur\r\n * @param indexMapper Used when creating batches, not meant for direct use external to this library\r\n */\r\nfunction opSetPathParamId(map, xml, indexMapper) {\r\n    if (indexMapper === void 0) { indexMapper = function (n) { return n; }; }\r\n    // this approach works because input params must come before the things that need them\r\n    // meaning the right id will always be in the map\r\n    var matches = /\\$\\$OP_PARAM_ID_(\\d+)\\$\\$/ig.exec(xml);\r\n    if (matches !== null) {\r\n        for (var i = 1; i < matches.length; i++) {\r\n            var index = parseInt(matches[i], 10);\r\n            var regex = new RegExp(\"\\\\$\\\\$OP_PARAM_ID_\" + index + \"\\\\$\\\\$\", \"ig\");\r\n            xml = xml.replace(regex, map[indexMapper(index)].toString());\r\n        }\r\n    }\r\n    return xml;\r\n}\r\n/**\r\n * Represents a collection of IObjectPaths\r\n */\r\nvar ObjectPathQueue = /** @class */ (function () {\r\n    function ObjectPathQueue(_paths, _relationships) {\r\n        if (_paths === void 0) { _paths = []; }\r\n        if (_relationships === void 0) { _relationships = {}; }\r\n        this._paths = _paths;\r\n        this._relationships = _relationships;\r\n        this._contextIndex = -1;\r\n        this._siteIndex = -1;\r\n        this._webIndex = -1;\r\n    }\r\n    /**\r\n     * Adds an object path to the queue\r\n     *\r\n     * @param op The action to add\r\n     * @returns The index of the added object path\r\n     */\r\n    ObjectPathQueue.prototype.add = function (op) {\r\n        this.dirty();\r\n        this._paths.push(op);\r\n        return this.lastIndex;\r\n    };\r\n    ObjectPathQueue.prototype.addChildRelationship = function (parentIndex, childIndex) {\r\n        if (objectDefinedNotNull(this._relationships[\"_\" + parentIndex])) {\r\n            this._relationships[\"_\" + parentIndex].push(childIndex);\r\n        }\r\n        else {\r\n            this._relationships[\"_\" + parentIndex] = [childIndex];\r\n        }\r\n    };\r\n    ObjectPathQueue.prototype.getChildRelationship = function (parentIndex) {\r\n        if (objectDefinedNotNull(this._relationships[\"_\" + parentIndex])) {\r\n            return this._relationships[\"_\" + parentIndex];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    ObjectPathQueue.prototype.getChildRelationships = function () {\r\n        return this._relationships;\r\n    };\r\n    /**\r\n     * Appends an action to the supplied IObjectPath, replacing placeholders\r\n     *\r\n     * @param op IObjectPath to which the action will be appended\r\n     * @param action The action to append\r\n     */\r\n    ObjectPathQueue.prototype.appendAction = function (op, action) {\r\n        this.dirty();\r\n        op.actions.push(action);\r\n        return this;\r\n    };\r\n    /**\r\n     * Appends an action to the last IObjectPath in the collection\r\n     *\r\n     * @param action\r\n     */\r\n    ObjectPathQueue.prototype.appendActionToLast = function (action) {\r\n        return this.appendAction(this.last, action);\r\n    };\r\n    /**\r\n     * Creates a copy of this ObjectPathQueue\r\n     */\r\n    ObjectPathQueue.prototype.clone = function () {\r\n        var clone = new ObjectPathQueue(this.toArray(), extend({}, this._relationships));\r\n        clone._contextIndex = this._contextIndex;\r\n        clone._siteIndex = this._siteIndex;\r\n        clone._webIndex = this._webIndex;\r\n        return clone;\r\n    };\r\n    /**\r\n     * Gets a copy of this instance's paths\r\n     */\r\n    ObjectPathQueue.prototype.toArray = function () {\r\n        return this._paths.slice(0);\r\n    };\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"last\", {\r\n        /**\r\n         * The last IObjectPath instance added to this collection\r\n         */\r\n        get: function () {\r\n            if (this._paths.length < 1) {\r\n                return null;\r\n            }\r\n            return this._paths[this.lastIndex];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"lastIndex\", {\r\n        /**\r\n         * Index of the last IObjectPath added to the queue\r\n         */\r\n        get: function () {\r\n            return this._paths.length - 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"siteIndex\", {\r\n        /**\r\n         * Gets the index of the current site in the queue\r\n         */\r\n        get: function () {\r\n            if (this._siteIndex < 0) {\r\n                // this needs to be here in case we create it\r\n                var contextIndex = this.contextIndex;\r\n                this._siteIndex = this.add(property(\"Site\", \r\n                // actions\r\n                objectPath()));\r\n                this.addChildRelationship(contextIndex, this._siteIndex);\r\n            }\r\n            return this._siteIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"webIndex\", {\r\n        /**\r\n         * Gets the index of the current web in the queue\r\n         */\r\n        get: function () {\r\n            if (this._webIndex < 0) {\r\n                // this needs to be here in case we create it\r\n                var contextIndex = this.contextIndex;\r\n                this._webIndex = this.add(property(\"Web\", \r\n                // actions\r\n                objectPath()));\r\n                this.addChildRelationship(contextIndex, this._webIndex);\r\n            }\r\n            return this._webIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectPathQueue.prototype, \"contextIndex\", {\r\n        /**\r\n         * Gets the index of the Current context in the queue, can be used to establish parent -> child rels\r\n         */\r\n        get: function () {\r\n            if (this._contextIndex < 0) {\r\n                this._contextIndex = this.add(staticProperty(\"Current\", \"{3747adcd-a3c3-41b9-bfab-4a64dd2f1e0a}\", \r\n                // actions\r\n                objectPath()));\r\n            }\r\n            return this._contextIndex;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ObjectPathQueue.prototype.toBody = function () {\r\n        if (objectDefinedNotNull(this._xml)) {\r\n            return this._xml;\r\n        }\r\n        // create our xml payload\r\n        this._xml = writeObjectPathBody(this.toIndexedTree());\r\n        return this._xml;\r\n    };\r\n    /**\r\n     * Conducts the string replacements for id, parent id, and path id\r\n     *\r\n     * @returns The tree with all string replacements made\r\n     */\r\n    ObjectPathQueue.prototype.toIndexedTree = function () {\r\n        var _this = this;\r\n        var builderIndex = -1;\r\n        var lastOpId = -1;\r\n        var idIndexMap = [];\r\n        return this.toArray().map(function (op, index, arr) {\r\n            var opId = ++builderIndex;\r\n            // track the array index => opId relationship\r\n            idIndexMap.push(opId);\r\n            // do path replacements\r\n            op.path = opSetPathParamId(idIndexMap, opSetId(opId.toString(), op.path));\r\n            if (lastOpId >= 0) {\r\n                // if we have a parent do the replace\r\n                op.path = opSetParentId(lastOpId.toString(), op.path);\r\n            }\r\n            // rewrite actions with placeholders replaced\r\n            op.actions = op.actions.map(function (a) {\r\n                var actionId = ++builderIndex;\r\n                return opSetId(actionId.toString(), opSetPathId(opId.toString(), a));\r\n            });\r\n            // handle any specific child relationships\r\n            _this.getChildRelationship(index).forEach(function (childIndex) {\r\n                // set the parent id for our non-immediate children, thus removing the token so it isn't overwritten\r\n                arr[childIndex].path = opSetParentId(opId.toString(), arr[childIndex].path);\r\n            });\r\n            // and remember our last object path id for the parent replace above\r\n            lastOpId = opId;\r\n            return op;\r\n        });\r\n    };\r\n    /**\r\n     * Dirties this queue clearing any cached data\r\n     */\r\n    ObjectPathQueue.prototype.dirty = function () {\r\n        this._xml = null;\r\n    };\r\n    return ObjectPathQueue;\r\n}());\n\n/**\r\n * Used within the request pipeline to parse ProcessQuery results\r\n */\r\nvar ProcessQueryParser = /** @class */ (function () {\r\n    function ProcessQueryParser(op) {\r\n        this.op = op;\r\n    }\r\n    /**\r\n     * Parses the response checking for errors\r\n     *\r\n     * @param r Response object\r\n     */\r\n    ProcessQueryParser.prototype.parse = function (r) {\r\n        var _this = this;\r\n        return r.text().then(function (t) {\r\n            if (!r.ok) {\r\n                throw Error(t);\r\n            }\r\n            try {\r\n                return JSON.parse(t);\r\n            }\r\n            catch (e) {\r\n                // special case in ProcessQuery where we got an error back, but it is not in json format\r\n                throw Error(t);\r\n            }\r\n        }).then(function (parsed) {\r\n            // here we need to check for an error body\r\n            if (parsed.length > 0 && hOP(parsed[0], \"ErrorInfo\") && parsed[0].ErrorInfo !== null) {\r\n                throw Error(jsS(parsed[0].ErrorInfo));\r\n            }\r\n            return _this.findResult(parsed);\r\n        });\r\n    };\r\n    ProcessQueryParser.prototype.findResult = function (json) {\r\n        for (var i = 0; i < this.op.actions.length; i++) {\r\n            var a = this.op.actions[i];\r\n            // let's see if the result is null based on the ObjectPath action, if it exists\r\n            // <ObjectPath Id=\"8\" ObjectPathId=\"7\" />\r\n            if (/^<ObjectPath /i.test(a)) {\r\n                var result = this.getParsedResultById(json, parseInt(getAttrValueFromString(a, \"Id\"), 10));\r\n                if (!result || (result && result.IsNull)) {\r\n                    return Promise.resolve(null);\r\n                }\r\n            }\r\n            // let's see if we have a query result\r\n            // <Query Id=\"5\" ObjectPathId = \"3\" >\r\n            if (/^<Query /i.test(a)) {\r\n                var result = this.getParsedResultById(json, parseInt(getAttrValueFromString(a, \"Id\"), 10));\r\n                if (result && hOP(result, \"_Child_Items_\")) {\r\n                    // this is a collection result\r\n                    /* tslint:disable:no-string-literal */\r\n                    return Promise.resolve(result[\"_Child_Items_\"]);\r\n                    /* tslint:enable:no-string-literal */\r\n                }\r\n                else {\r\n                    // this is an instance result\r\n                    return Promise.resolve(result);\r\n                }\r\n            }\r\n            // this is an invokeMethodAction so the last method action corresponds to our result\r\n            if (i === (this.op.actions.length - 1) && /^<Method /i.test(a)) {\r\n                return Promise.resolve(this.getParsedResultById(json, parseInt(getAttrValueFromString(a, \"Id\"), 10)));\r\n            }\r\n        }\r\n        // no result could be found so we are effectively returning void\r\n        // issue is we really don't know if we should be returning void (a method invocation with a void return) or\r\n        // if we just didn't find something above. We will let downstream things worry about that\r\n    };\r\n    /**\r\n     * Locates a result by ObjectPath id\r\n     *\r\n     * @param parsed the parsed JSON body from the response\r\n     * @param id The ObjectPath id whose result we want\r\n     */\r\n    ProcessQueryParser.prototype.getParsedResultById = function (parsed, id) {\r\n        for (var i = 0; i < parsed.length; i++) {\r\n            if (parsed[i] === id) {\r\n                return parsed[i + 1];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return ProcessQueryParser;\r\n}());\n\nvar ProcessQueryPath = \"_vti_bin/client.svc/ProcessQuery\";\r\nvar ClientSvcQueryable = /** @class */ (function (_super) {\r\n    __extends(ClientSvcQueryable, _super);\r\n    function ClientSvcQueryable(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        if (_objectPaths === void 0) { _objectPaths = null; }\r\n        var _this = _super.call(this) || this;\r\n        _this._objectPaths = _objectPaths;\r\n        _this._selects = [];\r\n        if (typeof parent === \"string\") {\r\n            // we assume the parent here is an absolute url to a web\r\n            _this._parentUrl = parent;\r\n            _this._url = combine(parent.replace(ProcessQueryPath, \"\"), ProcessQueryPath);\r\n            if (!objectDefinedNotNull(_this._objectPaths)) {\r\n                _this._objectPaths = new ObjectPathQueue();\r\n            }\r\n        }\r\n        else {\r\n            _this._parentUrl = parent._parentUrl;\r\n            _this._url = combine(parent._parentUrl, ProcessQueryPath);\r\n            if (!objectDefinedNotNull(_objectPaths)) {\r\n                _this._objectPaths = parent._objectPaths.clone();\r\n            }\r\n            _this.configureFrom(parent);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Choose which fields to return\r\n     *\r\n     * @param selects One or more fields to return\r\n     */\r\n    ClientSvcQueryable.prototype.select = function () {\r\n        var selects = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            selects[_i] = arguments[_i];\r\n        }\r\n        [].push.apply(this._selects, selects);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds this query to the supplied batch\r\n     *\r\n     * @example\r\n     * ```\r\n     *\r\n     * let b = pnp.sp.createBatch();\r\n     * pnp.sp.web.inBatch(b).get().then(...);\r\n     * b.execute().then(...)\r\n     * ```\r\n     */\r\n    ClientSvcQueryable.prototype.inBatch = function (batch) {\r\n        if (this.batch !== null) {\r\n            throw Error(\"This query is already part of a batch.\");\r\n        }\r\n        this._batch = batch;\r\n        return this;\r\n    };\r\n    /**\r\n     * Gets the full url with query information\r\n     *\r\n     */\r\n    ClientSvcQueryable.prototype.toUrlAndQuery = function () {\r\n        return _super.prototype.toUrl.call(this) + \"?\" + Array.from(this.query).map(function (v) { return v[0] + \"=\" + v[1]; }).join(\"&\");\r\n    };\r\n    ClientSvcQueryable.prototype.getSelects = function () {\r\n        return objectDefinedNotNull(this._selects) ? this._selects : [];\r\n    };\r\n    /**\r\n     * Gets a child object based on this instance's paths and the supplied paramters\r\n     *\r\n     * @param factory Instance factory of the child type\r\n     * @param methodName Name of the method used to load the child\r\n     * @param params Parameters required by the method to load the child\r\n     */\r\n    ClientSvcQueryable.prototype.getChild = function (factory, methodName, params) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        objectPaths.add(method(methodName, params, \r\n        // actions\r\n        objectPath()));\r\n        return new factory(this, objectPaths);\r\n    };\r\n    /**\r\n     * Gets a property of the current instance\r\n     *\r\n     * @param factory Instance factory of the child type\r\n     * @param propertyName Name of the property to load\r\n     */\r\n    ClientSvcQueryable.prototype.getChildProperty = function (factory, propertyName) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        objectPaths.add(property(propertyName));\r\n        return new factory(this, objectPaths);\r\n    };\r\n    /**\r\n     * Sends a request\r\n     *\r\n     * @param op\r\n     * @param options\r\n     * @param parser\r\n     */\r\n    ClientSvcQueryable.prototype.send = function (objectPaths, options, parser) {\r\n        if (options === void 0) { options = {}; }\r\n        if (parser === void 0) { parser = null; }\r\n        if (!objectDefinedNotNull(parser)) {\r\n            // we assume here that we want to return for this index path\r\n            parser = new ProcessQueryParser(objectPaths.last);\r\n        }\r\n        if (this.hasBatch) {\r\n            // this is using the options variable to pass some extra information downstream to the batch\r\n            options = extend(options, {\r\n                clientsvc_ObjectPaths: objectPaths.clone(),\r\n            });\r\n        }\r\n        else {\r\n            if (!hOP(options, \"body\")) {\r\n                options = extend(options, {\r\n                    body: objectPaths.toBody(),\r\n                });\r\n            }\r\n        }\r\n        return _super.prototype.postCore.call(this, options, parser);\r\n    };\r\n    /**\r\n     * Sends the request, merging the result data with a new instance of factory\r\n     */\r\n    ClientSvcQueryable.prototype.sendGet = function (factory) {\r\n        var _this = this;\r\n        var ops = this._objectPaths.clone().appendActionToLast(opQuery(this.getSelects()));\r\n        return this.send(ops).then(function (r) { return extend(new factory(_this), r); });\r\n    };\r\n    /**\r\n     * Sends the request, merging the result data array with a new instances of factory\r\n     */\r\n    ClientSvcQueryable.prototype.sendGetCollection = function (factory) {\r\n        var ops = this._objectPaths.clone().appendActionToLast(opQuery([], this.getSelects()));\r\n        return this.send(ops).then(function (r) { return r.map(function (d) { return extend(factory(d), d); }); });\r\n    };\r\n    /**\r\n     * Invokes the specified method on the server and returns the result\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethod = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, opQuery([], null));\r\n    };\r\n    /**\r\n     * Invokes a method action that returns a single result and does not have an associated query (ex: GetDescription on Term)\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodAction = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, null, true);\r\n    };\r\n    /**\r\n     * Invokes the specified non-query method on the server\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeNonQuery = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        // by definition we are not returning anything from these calls so we should not be caching the results\r\n        this._useCaching = false;\r\n        return this.invokeMethodImpl(methodName, params, actions, null, true);\r\n    };\r\n    /**\r\n     * Invokes the specified method on the server and returns the resulting collection\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param actions Any additional actions to execute in addition to the method invocation (set property for example)\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodCollection = function (methodName, params) {\r\n        if (params === void 0) { params = null; }\r\n        var actions = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            actions[_i - 2] = arguments[_i];\r\n        }\r\n        return this.invokeMethodImpl(methodName, params, actions, opQuery([], []));\r\n    };\r\n    /**\r\n     * Updates this instance, returning a copy merged with the updated data after the update\r\n     *\r\n     * @param properties Plain object of the properties and values to update\r\n     * @param factory Factory method use to create a new instance of FactoryType\r\n     */\r\n    ClientSvcQueryable.prototype.invokeUpdate = function (properties, factory) {\r\n        var _this = this;\r\n        var ops = this._objectPaths.clone();\r\n        // append setting all the properties to this instance\r\n        objectProperties(properties).map(function (a) { return ops.appendActionToLast(a); });\r\n        ops.appendActionToLast(opQuery([], null));\r\n        return this.send(ops).then(function (r) { return extend(new factory(_this), r); });\r\n    };\r\n    /**\r\n     * Converts the current instance to a request context\r\n     *\r\n     * @param verb The request verb\r\n     * @param options The set of supplied request options\r\n     * @param parser The supplied ODataParser instance\r\n     * @param pipeline Optional request processing pipeline\r\n     */\r\n    ClientSvcQueryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\r\n        var _this = this;\r\n        return toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\r\n            mergeOptions(options, _this._options);\r\n            var headers = new Headers();\r\n            mergeHeaders(headers, options.headers);\r\n            mergeHeaders(headers, {\r\n                \"accept\": \"*/*\",\r\n                \"content-type\": \"text/xml\",\r\n            });\r\n            options = extend(options, { headers: headers });\r\n            // we need to do some special cache handling to ensure we have a good key\r\n            if (_this._useCaching) {\r\n                // because all the requests use the same url they would collide in the cache we use a special key\r\n                var cacheKey = \"PnPjs.ProcessQueryClient(\" + getHashCode(_this._objectPaths.toBody()) + \")\";\r\n                if (objectDefinedNotNull(_this._cachingOptions)) {\r\n                    // if our key ends in the ProcessQuery url we overwrite it\r\n                    if (/\\/client\\.svc\\/ProcessQuery\\?$/i.test(_this._cachingOptions.key)) {\r\n                        _this._cachingOptions.key = cacheKey;\r\n                    }\r\n                }\r\n                else {\r\n                    _this._cachingOptions = new CachingOptions(cacheKey);\r\n                }\r\n            }\r\n            var dependencyDispose = _this.hasBatch ? _this.addBatchDependency() : function () { return; };\r\n            // build our request context\r\n            var context = {\r\n                batch: _this.batch,\r\n                batchDependency: dependencyDispose,\r\n                cachingOptions: _this._cachingOptions,\r\n                clientFactory: function () { return new SPHttpClient(); },\r\n                isBatched: _this.hasBatch,\r\n                isCached: _this._useCaching,\r\n                options: options,\r\n                parser: parser,\r\n                pipeline: pipeline,\r\n                requestAbsoluteUrl: url,\r\n                requestId: getGUID(),\r\n                verb: verb,\r\n            };\r\n            return context;\r\n        });\r\n    };\r\n    /**\r\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\r\n    */\r\n    ClientSvcQueryable.prototype.addBatchDependency = function () {\r\n        if (this._batch !== null) {\r\n            return this._batch.addDependency();\r\n        }\r\n        return function () { return null; };\r\n    };\r\n    Object.defineProperty(ClientSvcQueryable.prototype, \"hasBatch\", {\r\n        /**\r\n         * Indicates if the current query has a batch associated\r\n         *\r\n         */\r\n        get: function () {\r\n            return objectDefinedNotNull(this._batch);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ClientSvcQueryable.prototype, \"batch\", {\r\n        /**\r\n         * The batch currently associated with this query or null\r\n         *\r\n         */\r\n        get: function () {\r\n            return this.hasBatch ? this._batch : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Executes the actual invoke method call\r\n     *\r\n     * @param methodName Name of the method to invoke\r\n     * @param params Method parameters\r\n     * @param queryAction Specifies the query action to take\r\n     */\r\n    ClientSvcQueryable.prototype.invokeMethodImpl = function (methodName, params, actions, queryAction, isAction) {\r\n        if (isAction === void 0) { isAction = false; }\r\n        var ops = this._objectPaths.clone();\r\n        if (isAction) {\r\n            ops.appendActionToLast(methodAction(methodName, params));\r\n        }\r\n        else {\r\n            ops.add(method.apply(void 0, [methodName, params].concat([objectPath()].concat(actions, [queryAction]))));\r\n        }\r\n        return this.send(ops);\r\n    };\r\n    return ClientSvcQueryable;\r\n}(Queryable));\n\n/**\r\n * Implements ODataBatch for use with the ObjectPath framework\r\n */\r\nvar ObjectPathBatch = /** @class */ (function (_super) {\r\n    __extends(ObjectPathBatch, _super);\r\n    function ObjectPathBatch(parentUrl, _batchId) {\r\n        var _this = _super.call(this, _batchId) || this;\r\n        _this.parentUrl = parentUrl;\r\n        return _this;\r\n    }\r\n    ObjectPathBatch.prototype.executeImpl = function () {\r\n        // if we don't have any requests, don't bother sending anything\r\n        // this could be due to caching further upstream, or just an empty batch\r\n        if (this.requests.length < 1) {\r\n            Logger.write(\"Resolving empty batch.\", 1 /* Info */);\r\n            return Promise.resolve();\r\n        }\r\n        var executor = new BatchExecutor(this.parentUrl, this.batchId);\r\n        executor.appendRequests(this.requests);\r\n        return executor.execute();\r\n    };\r\n    return ObjectPathBatch;\r\n}(ODataBatch));\r\nvar BatchExecutor = /** @class */ (function (_super) {\r\n    __extends(BatchExecutor, _super);\r\n    function BatchExecutor(parentUrl, batchId) {\r\n        var _this = _super.call(this, parentUrl) || this;\r\n        _this.batchId = batchId;\r\n        _this._requests = [];\r\n        _this._builderIndex = 1;\r\n        // we add our session object path and hard code in the IDs so we can reference it\r\n        var method$$1 = staticMethod(\"GetTaxonomySession\", \"{981cbc68-9edc-4f8d-872f-71146fcbb84f}\");\r\n        method$$1.path = opSetId(\"0\", method$$1.path);\r\n        method$$1.actions.push(opSetId(\"1\", opSetPathId(\"0\", objectPath())));\r\n        _this._objectPaths.add(method$$1);\r\n        return _this;\r\n    }\r\n    BatchExecutor.prototype.appendRequests = function (requests) {\r\n        var _this = this;\r\n        requests.forEach(function (request) {\r\n            // grab the special property we added to options when we created the batch info\r\n            var pathQueue = request.options.clientsvc_ObjectPaths;\r\n            var paths = pathQueue.toArray();\r\n            // getChildRelationships\r\n            if (paths.length < 0) {\r\n                return;\r\n            }\r\n            var indexMappingFunction = function (n) { return n; };\r\n            if (/GetTaxonomySession/i.test(paths[0].path)) {\r\n                // drop the first thing as it is a get session object path, which we add once for the entire batch\r\n                paths = paths.slice(1);\r\n                // replace the next item's parent id with 0, which will be the id of the session call at the root of this request\r\n                paths[0].path = opSetParentId(\"0\", paths[0].path);\r\n                indexMappingFunction = function (n) { return n - 1; };\r\n            }\r\n            var lastOpId = -1;\r\n            var idIndexMap = [];\r\n            paths.map(function (op, index, arr) {\r\n                // rewrite the path string\r\n                var opId = ++_this._builderIndex;\r\n                // track the array index => opId relationship\r\n                idIndexMap.push(opId);\r\n                var path = opSetPathParamId(idIndexMap, opSetId(opId.toString(), op.path), indexMappingFunction);\r\n                if (lastOpId >= 0) {\r\n                    path = opSetParentId(lastOpId.toString(), path);\r\n                }\r\n                // rewrite actions with placeholders replaced\r\n                var opActions = op.actions.map(function (a) {\r\n                    var actionId = ++_this._builderIndex;\r\n                    return opSetId(actionId.toString(), opSetPathId(opId.toString(), a));\r\n                });\r\n                // handle any specific child relationships\r\n                // the childIndex is reduced by 1 because we are removing the Session Path\r\n                pathQueue.getChildRelationship(index + 1).map(function (i) { return i - 1; }).forEach(function (childIndex) {\r\n                    // set the parent id for our non-immediate children\r\n                    arr[childIndex].path = opSetParentId(opId.toString(), arr[childIndex].path);\r\n                });\r\n                // and remember our last object path id for the parent replace above\r\n                lastOpId = opId;\r\n                // return our now substituted path and actions as a new object path instance\r\n                return new ObjectPath(path, opActions);\r\n            }).forEach(function (op) { return _this._objectPaths.add(op); });\r\n            // get this once\r\n            var obPaths = _this._objectPaths.toArray();\r\n            // create a new parser to handle finding the result based on the path\r\n            var parser = new ProcessQueryParser(obPaths[obPaths.length - 1]);\r\n            if (request.parser instanceof CachingParserWrapper) {\r\n                // handle special case of caching\r\n                request.parser = new ProcessQueryCachingParserWrapper(parser, request.parser);\r\n            }\r\n            else {\r\n                request.parser = parser;\r\n            }\r\n            // add the request to our batch requests\r\n            _this._requests.push(request);\r\n            // remove the temp property\r\n            delete request.options.clientsvc_ObjectPaths;\r\n        });\r\n    };\r\n    BatchExecutor.prototype.execute = function () {\r\n        var _this = this;\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this._requests.length + \" requests.\", 1 /* Info */);\r\n        // create our request body from all the merged object paths\r\n        var options = {\r\n            body: writeObjectPathBody(this._objectPaths.toArray()),\r\n        };\r\n        Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", 1 /* Info */);\r\n        // send the batch\r\n        return _super.prototype.postCore.call(this, options, new BatchParser()).then(function (rawResponse) {\r\n            Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", 1 /* Info */);\r\n            return _this._requests.reduce(function (chain, request) {\r\n                Logger.write(\"[\" + request.id + \"] (\" + (new Date()).getTime() + \") Resolving request in batch \" + _this.batchId + \".\", 1 /* Info */);\r\n                return chain.then(function (_) { return request.parser.findResult(rawResponse).then(request.resolve).catch(request.reject); });\r\n            }, Promise.resolve());\r\n        });\r\n    };\r\n    return BatchExecutor;\r\n}(ClientSvcQueryable));\r\n/**\r\n * Used to return the raw results from parsing the batch\r\n */\r\nvar BatchParser = /** @class */ (function (_super) {\r\n    __extends(BatchParser, _super);\r\n    function BatchParser() {\r\n        return _super.call(this, null) || this;\r\n    }\r\n    BatchParser.prototype.findResult = function (json) {\r\n        // we leave it to the individual request parsers to find their results in the raw json body\r\n        return json;\r\n    };\r\n    return BatchParser;\r\n}(ProcessQueryParser));\r\n/**\r\n * Handles processing batched results that are also cached\r\n */\r\nvar ProcessQueryCachingParserWrapper = /** @class */ (function (_super) {\r\n    __extends(ProcessQueryCachingParserWrapper, _super);\r\n    function ProcessQueryCachingParserWrapper(parser, wrapper) {\r\n        return _super.call(this, parser, wrapper.cacheOptions) || this;\r\n    }\r\n    ProcessQueryCachingParserWrapper.prototype.findResult = function (json) {\r\n        var _this = this;\r\n        return this.parser.findResult(json).then(function (d) { return _this.cacheData(d); });\r\n    };\r\n    return ProcessQueryCachingParserWrapper;\r\n}(CachingParserWrapper));\n\nexport { ObjectPathBatch, ClientSvcQueryable, ObjectPath, opSetId, opSetPathId, opSetParentId, opSetPathParamId, ObjectPathQueue, objectPath, identityQuery, opQuery, setProperty, methodAction, objectProperties, property, staticMethod, staticProperty, objConstructor, MethodParams, method, ProcessQueryParser, writeObjectPathBody };\n//# sourceMappingURL=sp-clientsvc.es5.js.map\n","/**\n * @license\n * v1.2.6\n * MIT (https://github.com/pnp/pnpjs/blob/master/LICENSE)\n * Copyright (c) 2018 Microsoft\n * docs: https://pnp.github.io/pnpjs/\n * source: https://github.com/pnp/pnpjs\n * bugs: https://github.com/pnp/pnpjs/issues\n */\nimport { ClientSvcQueryable, MethodParams, property, setProperty, method, objConstructor, objectPath, objectProperties, opQuery, ObjectPathBatch, staticMethod } from '@pnp/sp-clientsvc';\nimport { stringIsNullOrEmpty, extend, sanitizeGuid, getGUID, objectDefinedNotNull } from '@pnp/common';\nimport { sp } from '@pnp/sp';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\n/**\r\n * Represents a collection of labels\r\n */\r\nvar Labels = /** @class */ (function (_super) {\r\n    __extends(Labels, _super);\r\n    function Labels(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        if (_objectPaths === void 0) { _objectPaths = null; }\r\n        var _this = _super.call(this, parent, _objectPaths) || this;\r\n        _this._objectPaths.add(property(\"Labels\"));\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets a label from the collection by its value\r\n     *\r\n     * @param value The value to retrieve\r\n     */\r\n    Labels.prototype.getByValue = function (value) {\r\n        var params = MethodParams.build().string(value);\r\n        return this.getChild(Label, \"GetByValue\", params);\r\n    };\r\n    /**\r\n     * Loads the data and merges with with the ILabel instances\r\n     */\r\n    Labels.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!stringIsNullOrEmpty(d.Value)) {\r\n                return _this.getByValue(d.Value);\r\n            }\r\n            throw Error(\"Could not find Value in Labels.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    return Labels;\r\n}(ClientSvcQueryable));\r\n/**\r\n * Represents a label instance\r\n */\r\nvar Label = /** @class */ (function (_super) {\r\n    __extends(Label, _super);\r\n    function Label() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the data for this Label\r\n     */\r\n    Label.prototype.get = function () {\r\n        return this.sendGet(Label);\r\n    };\r\n    /**\r\n     * Sets this label as the default\r\n     */\r\n    Label.prototype.setAsDefaultForLanguage = function () {\r\n        return this.invokeNonQuery(\"SetAsDefaultForLanguage\");\r\n    };\r\n    /**\r\n     * Deletes this label\r\n     */\r\n    Label.prototype.delete = function () {\r\n        return this.invokeNonQuery(\"DeleteObject\");\r\n    };\r\n    return Label;\r\n}(ClientSvcQueryable));\n\nvar Terms = /** @class */ (function (_super) {\r\n    __extends(Terms, _super);\r\n    function Terms() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the terms in this collection\r\n     */\r\n    Terms.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!stringIsNullOrEmpty(d.Name)) {\r\n                return _this.getByName(d.Name);\r\n            }\r\n            else if (!stringIsNullOrEmpty(d.Id)) {\r\n                return _this.getById(d.Id);\r\n            }\r\n            throw Error(\"Could not find Name or Id in Terms.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    /**\r\n     * Gets a term by id\r\n     *\r\n     * @param id The id of the term\r\n     */\r\n    Terms.prototype.getById = function (id) {\r\n        var params = MethodParams.build()\r\n            .string(sanitizeGuid(id));\r\n        return this.getChild(Term, \"GetById\", params);\r\n    };\r\n    /**\r\n     * Gets a term by name\r\n     *\r\n     * @param name Term name\r\n     */\r\n    Terms.prototype.getByName = function (name) {\r\n        var params = MethodParams.build()\r\n            .string(name);\r\n        return this.getChild(Term, \"GetByName\", params);\r\n    };\r\n    return Terms;\r\n}(ClientSvcQueryable));\r\n/**\r\n * Represents the operations available on a given term\r\n */\r\nvar Term = /** @class */ (function (_super) {\r\n    __extends(Term, _super);\r\n    function Term() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(Term.prototype, \"labels\", {\r\n        get: function () {\r\n            return new Labels(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getChildProperty(Term, \"Parent\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"pinSourceTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSet, \"PinSourceTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"reusedTerms\", {\r\n        get: function () {\r\n            return this.getChildProperty(Terms, \"ReusedTerms\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"sourceTerm\", {\r\n        get: function () {\r\n            return this.getChildProperty(Term, \"SourceTerm\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"termSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSet, \"TermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Term.prototype, \"termSets\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSets, \"TermSets\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new label for this Term\r\n     *\r\n     * @param name label value\r\n     * @param lcid language code\r\n     * @param isDefault Is the default label\r\n     */\r\n    Term.prototype.createLabel = function (name, lcid, isDefault) {\r\n        var _this = this;\r\n        if (isDefault === void 0) { isDefault = false; }\r\n        var params = MethodParams.build()\r\n            .string(name)\r\n            .number(lcid)\r\n            .boolean(isDefault);\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateLabel\", params)\r\n            .then(function (r) { return extend(_this.labels.getByValue(name), r); });\r\n    };\r\n    /**\r\n     * Sets the deprecation flag on a term\r\n     *\r\n     * @param doDeprecate New value for the deprecation flag\r\n     */\r\n    Term.prototype.deprecate = function (doDeprecate) {\r\n        var params = MethodParams.build().boolean(doDeprecate);\r\n        return this.invokeNonQuery(\"Deprecate\", params);\r\n    };\r\n    /**\r\n     * Loads the term data\r\n     */\r\n    Term.prototype.get = function () {\r\n        return this.sendGet(Term);\r\n    };\r\n    /**\r\n     * Gets the appropriate description for a term\r\n     *\r\n     * @param lcid Language code\r\n     */\r\n    Term.prototype.getDescription = function (lcid) {\r\n        var params = MethodParams.build().number(lcid);\r\n        return this.invokeMethodAction(\"GetDescription\", params);\r\n    };\r\n    /**\r\n     * Sets the description\r\n     *\r\n     * @param description Term description\r\n     * @param lcid Language code\r\n     */\r\n    Term.prototype.setDescription = function (description, lcid) {\r\n        var params = MethodParams.build().string(description).number(lcid);\r\n        return this.invokeNonQuery(\"SetDescription\", params);\r\n    };\r\n    /**\r\n     * Sets a custom property on this term\r\n     *\r\n     * @param name Property name\r\n     * @param value Property value\r\n     */\r\n    Term.prototype.setLocalCustomProperty = function (name, value) {\r\n        var params = MethodParams.build().string(name).string(value);\r\n        return this.invokeNonQuery(\"SetLocalCustomProperty\", params);\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    Term.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, Term);\r\n    };\r\n    return Term;\r\n}(ClientSvcQueryable));\n\nvar TermSets = /** @class */ (function (_super) {\r\n    __extends(TermSets, _super);\r\n    function TermSets() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Gets the termsets in this collection\r\n     */\r\n    TermSets.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!stringIsNullOrEmpty(d.Name)) {\r\n                return _this.getByName(d.Name);\r\n            }\r\n            else if (!stringIsNullOrEmpty(d.Id)) {\r\n                return _this.getById(d.Id);\r\n            }\r\n            throw Error(\"Could not find Value in Labels.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    /**\r\n     * Gets a TermSet from this collection by id\r\n     *\r\n     * @param id TermSet id\r\n     */\r\n    TermSets.prototype.getById = function (id) {\r\n        var params = MethodParams.build()\r\n            .string(sanitizeGuid(id));\r\n        return this.getChild(TermSet, \"GetById\", params);\r\n    };\r\n    /**\r\n     * Gets a TermSet from this collection by name\r\n     *\r\n     * @param name TermSet name\r\n     */\r\n    TermSets.prototype.getByName = function (name) {\r\n        var params = MethodParams.build()\r\n            .string(name);\r\n        return this.getChild(TermSet, \"GetByName\", params);\r\n    };\r\n    return TermSets;\r\n}(ClientSvcQueryable));\r\nvar TermSet = /** @class */ (function (_super) {\r\n    __extends(TermSet, _super);\r\n    function TermSet() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(TermSet.prototype, \"group\", {\r\n        /**\r\n         * Gets the group containing this Term set\r\n         */\r\n        get: function () {\r\n            return this.getChildProperty(TermGroup, \"Group\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermSet.prototype, \"terms\", {\r\n        /**\r\n         * Access all the terms in this termset\r\n         */\r\n        get: function () {\r\n            return this.getChild(Terms, \"GetAllTerms\", null);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a stakeholder to the TermSet\r\n     *\r\n     * @param stakeholderName The login name of the user to be added as a stakeholder\r\n     */\r\n    TermSet.prototype.addStakeholder = function (stakeholderName) {\r\n        var params = MethodParams.build()\r\n            .string(stakeholderName);\r\n        return this.invokeNonQuery(\"DeleteStakeholder\", params);\r\n    };\r\n    /**\r\n     * Deletes a stakeholder to the TermSet\r\n     *\r\n     * @param stakeholderName The login name of the user to be added as a stakeholder\r\n     */\r\n    TermSet.prototype.deleteStakeholder = function (stakeholderName) {\r\n        var params = MethodParams.build()\r\n            .string(stakeholderName);\r\n        return this.invokeNonQuery(\"AddStakeholder\", params);\r\n    };\r\n    /**\r\n     * Gets the data for this TermSet\r\n     */\r\n    TermSet.prototype.get = function () {\r\n        return this.sendGet(TermSet);\r\n    };\r\n    /**\r\n     * Get a term by id\r\n     *\r\n     * @param id Term id\r\n     */\r\n    TermSet.prototype.getTermById = function (id) {\r\n        var params = MethodParams.build()\r\n            .string(sanitizeGuid(id));\r\n        return this.getChild(Term, \"GetTerm\", params);\r\n    };\r\n    /**\r\n     * Adds a term to this term set\r\n     *\r\n     * @param name Name for the term\r\n     * @param lcid Language code\r\n     * @param isAvailableForTagging set tagging availability (default: true)\r\n     * @param id GUID id for the term (optional)\r\n     */\r\n    TermSet.prototype.addTerm = function (name, lcid, isAvailableForTagging, id) {\r\n        var _this = this;\r\n        if (isAvailableForTagging === void 0) { isAvailableForTagging = true; }\r\n        if (id === void 0) { id = getGUID(); }\r\n        var params = MethodParams.build()\r\n            .string(name)\r\n            .number(lcid)\r\n            .string(sanitizeGuid(id));\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateTerm\", params, setProperty(\"IsAvailableForTagging\", \"Boolean\", \"\" + isAvailableForTagging))\r\n            .then(function (r) { return extend(_this.getTermById(r.Id), r); });\r\n    };\r\n    /**\r\n     * Copies this term set immediately\r\n     */\r\n    TermSet.prototype.copy = function () {\r\n        return this.invokeMethod(\"Copy\", null);\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term set, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    TermSet.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, TermSet);\r\n    };\r\n    return TermSet;\r\n}(ClientSvcQueryable));\n\n/**\r\n * Represents a group in the taxonomy heirarchy\r\n */\r\nvar TermGroup = /** @class */ (function (_super) {\r\n    __extends(TermGroup, _super);\r\n    function TermGroup(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        var _this = _super.call(this, parent, _objectPaths) || this;\r\n        // this should mostly be true\r\n        _this.store = parent instanceof TermStore ? parent : null;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(TermGroup.prototype, \"termSets\", {\r\n        /**\r\n         * Gets the collection of term sets in this group\r\n         */\r\n        get: function () {\r\n            return this.getChildProperty(TermSets, \"TermSets\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a contributor to the Group\r\n     *\r\n     * @param principalName The login name of the user to be added as a contributor\r\n     */\r\n    TermGroup.prototype.addContributor = function (principalName) {\r\n        var params = MethodParams.build().string(principalName);\r\n        return this.invokeNonQuery(\"AddContributor\", params);\r\n    };\r\n    /**\r\n     * Adds a group manager to the Group\r\n     *\r\n     * @param principalName The login name of the user to be added as a group manager\r\n     */\r\n    TermGroup.prototype.addGroupManager = function (principalName) {\r\n        var params = MethodParams.build().string(principalName);\r\n        return this.invokeNonQuery(\"AddGroupManager\", params);\r\n    };\r\n    /**\r\n     * Creates a new TermSet in this Group using the provided language and unique identifier\r\n     *\r\n     * @param name The name of the new TermSet being created\r\n     * @param lcid The language that the new TermSet name is in\r\n     * @param id The unique identifier of the new TermSet being created (optional)\r\n     */\r\n    TermGroup.prototype.createTermSet = function (name, lcid, id) {\r\n        var _this = this;\r\n        if (id === void 0) { id = getGUID(); }\r\n        var params = MethodParams.build()\r\n            .string(name)\r\n            .string(sanitizeGuid(id))\r\n            .number(lcid);\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateTermSet\", params)\r\n            .then(function (r) { return extend(_this.store.getTermSetById(r.Id), r); });\r\n    };\r\n    /**\r\n     * Gets this term store's data\r\n     */\r\n    TermGroup.prototype.get = function () {\r\n        return this.sendGet(TermGroup);\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term set, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    TermGroup.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, TermGroup);\r\n    };\r\n    return TermGroup;\r\n}(ClientSvcQueryable));\n\n/**\r\n * Represents the set of available term stores and the collection methods\r\n */\r\nvar TermStores = /** @class */ (function (_super) {\r\n    __extends(TermStores, _super);\r\n    function TermStores(parent) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        var _this = _super.call(this, parent) || this;\r\n        _this._objectPaths.add(property(\"TermStores\", \r\n        // actions\r\n        objectPath()));\r\n        return _this;\r\n    }\r\n    /**\r\n     * Gets the term stores\r\n     */\r\n    TermStores.prototype.get = function () {\r\n        var _this = this;\r\n        return this.sendGetCollection(function (d) {\r\n            if (!stringIsNullOrEmpty(d.Name)) {\r\n                return _this.getByName(d.Name);\r\n            }\r\n            else if (!stringIsNullOrEmpty(d.Id)) {\r\n                return _this.getById(d.Id);\r\n            }\r\n            throw Error(\"Could not find Name or Id in TermStores.get(). You must include at least one of these in your select fields.\");\r\n        });\r\n    };\r\n    /**\r\n     * Returns the TermStore specified by its index name\r\n     *\r\n     * @param name The index name of the TermStore to be returned\r\n     */\r\n    TermStores.prototype.getByName = function (name) {\r\n        return this.getChild(TermStore, \"GetByName\", MethodParams.build().string(name));\r\n    };\r\n    /**\r\n     * Returns the TermStore specified by its GUID index\r\n     *\r\n     * @param id The GUID index of the TermStore to be returned\r\n     */\r\n    TermStores.prototype.getById = function (id) {\r\n        return this.getChild(TermStore, \"GetById\", MethodParams.build().string(sanitizeGuid(id)));\r\n    };\r\n    return TermStores;\r\n}(ClientSvcQueryable));\r\nvar TermStore = /** @class */ (function (_super) {\r\n    __extends(TermStore, _super);\r\n    function TermStore(parent, _objectPaths) {\r\n        if (parent === void 0) { parent = \"\"; }\r\n        if (_objectPaths === void 0) { _objectPaths = null; }\r\n        return _super.call(this, parent, _objectPaths) || this;\r\n    }\r\n    Object.defineProperty(TermStore.prototype, \"hashTagsTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSet, \"HashTagsTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermStore.prototype, \"keywordsTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSet, \"KeywordsTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermStore.prototype, \"orphanedTermsTermSet\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermSet, \"OrphanedTermsTermSet\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TermStore.prototype, \"systemGroup\", {\r\n        get: function () {\r\n            return this.getChildProperty(TermGroup, \"SystemGroup\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the term store data\r\n     */\r\n    TermStore.prototype.get = function () {\r\n        return this.sendGet(TermStore);\r\n    };\r\n    /**\r\n     * Gets term sets\r\n     *\r\n     * @param name\r\n     * @param lcid\r\n     */\r\n    TermStore.prototype.getTermSetsByName = function (name, lcid) {\r\n        var params = MethodParams.build()\r\n            .string(name)\r\n            .number(lcid);\r\n        return this.getChild(TermSets, \"GetTermSetsByName\", params);\r\n    };\r\n    /**\r\n     * Provides access to an ITermSet by id\r\n     *\r\n     * @param id\r\n     */\r\n    TermStore.prototype.getTermSetById = function (id) {\r\n        var params = MethodParams.build().string(sanitizeGuid(id));\r\n        return this.getChild(TermSet, \"GetTermSet\", params);\r\n    };\r\n    /**\r\n     * Provides access to an ITermSet by id\r\n     *\r\n     * @param id\r\n     */\r\n    TermStore.prototype.getTermById = function (id) {\r\n        var params = MethodParams.build().string(sanitizeGuid(id));\r\n        return this.getChild(Term, \"GetTerm\", params);\r\n    };\r\n    /**\r\n     * Provides access to an ITermSet by id\r\n     *\r\n     * @param id\r\n     */\r\n    TermStore.prototype.getTermsById = function () {\r\n        var ids = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            ids[_i] = arguments[_i];\r\n        }\r\n        var params = MethodParams.build().strArray(ids.map(function (id) { return sanitizeGuid(id); }));\r\n        return this.getChild(Terms, \"GetTermsById\", params);\r\n    };\r\n    /**\r\n     * Gets a term from a term set based on the supplied ids\r\n     *\r\n     * @param termId Term Id\r\n     * @param termSetId Termset Id\r\n     */\r\n    TermStore.prototype.getTermInTermSet = function (termId, termSetId) {\r\n        var params = MethodParams.build().string(sanitizeGuid(termId)).string(sanitizeGuid(termSetId));\r\n        return this.getChild(Term, \"GetTermInTermSet\", params);\r\n    };\r\n    /**\r\n     * This method provides access to a ITermGroup by id\r\n     *\r\n     * @param id The group id\r\n     */\r\n    TermStore.prototype.getTermGroupById = function (id) {\r\n        var params = MethodParams.build()\r\n            .string(sanitizeGuid(id));\r\n        return this.getChild(TermGroup, \"GetGroup\", params);\r\n    };\r\n    /**\r\n     * Gets the terms by the supplied information (see: https://msdn.microsoft.com/en-us/library/hh626704%28v=office.12%29.aspx)\r\n     *\r\n     * @param info\r\n     */\r\n    TermStore.prototype.getTerms = function (info) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        // this will be the parent of the GetTerms call, but we need to create the input param first\r\n        var parentIndex = objectPaths.lastIndex;\r\n        // this is our input object\r\n        var input = objConstructor.apply(void 0, [\"{61a1d689-2744-4ea3-a88b-c95bee9803aa}\",\r\n            // actions\r\n            objectPath()].concat(objectProperties(info)));\r\n        // add the input object path\r\n        var inputIndex = objectPaths.add(input);\r\n        // this sets up the GetTerms call\r\n        var params = MethodParams.build().objectPath(inputIndex);\r\n        // call the method\r\n        var methodIndex = objectPaths.add(method(\"GetTerms\", params, \r\n        // actions\r\n        objectPath()));\r\n        // setup the parent relationship even though they are seperated in the collection\r\n        objectPaths.addChildRelationship(parentIndex, methodIndex);\r\n        return new Terms(this, objectPaths);\r\n    };\r\n    /**\r\n     * Gets the site collection group associated with the current site\r\n     *\r\n     * @param createIfMissing If true the group will be created, otherwise null (default: false)\r\n     */\r\n    TermStore.prototype.getSiteCollectionGroup = function (createIfMissing) {\r\n        if (createIfMissing === void 0) { createIfMissing = false; }\r\n        var objectPaths = this._objectPaths.clone();\r\n        var methodParent = objectPaths.lastIndex;\r\n        var siteIndex = objectPaths.siteIndex;\r\n        var params = MethodParams.build().objectPath(siteIndex).boolean(createIfMissing);\r\n        var methodIndex = objectPaths.add(method(\"GetSiteCollectionGroup\", params, \r\n        // actions\r\n        objectPath()));\r\n        // the parent of this method call is this instance, not the current/site\r\n        objectPaths.addChildRelationship(methodParent, methodIndex);\r\n        return new TermGroup(this, objectPaths);\r\n    };\r\n    /**\r\n     * Adds a working language to the TermStore\r\n     *\r\n     * @param lcid The locale identifier of the working language to add\r\n     */\r\n    TermStore.prototype.addLanguage = function (lcid) {\r\n        var params = MethodParams.build().number(lcid);\r\n        return this.invokeNonQuery(\"AddLanguage\", params);\r\n    };\r\n    /**\r\n     * Creates a new Group in this TermStore\r\n     *\r\n     * @param name The name of the new Group being created\r\n     * @param id The ID (Guid) that the new group should have\r\n     */\r\n    TermStore.prototype.addGroup = function (name, id) {\r\n        var _this = this;\r\n        if (id === void 0) { id = getGUID(); }\r\n        var params = MethodParams.build()\r\n            .string(name)\r\n            .string(sanitizeGuid(id));\r\n        this._useCaching = false;\r\n        return this.invokeMethod(\"CreateGroup\", params)\r\n            .then(function (r) { return extend(_this.getTermGroupById(r.Id), r); });\r\n    };\r\n    /**\r\n     * Commits all updates to the database that have occurred since the last commit or rollback\r\n     */\r\n    TermStore.prototype.commitAll = function () {\r\n        return this.invokeNonQuery(\"CommitAll\");\r\n    };\r\n    /**\r\n     * Delete a working language from the TermStore\r\n     *\r\n     * @param lcid locale ID for the language to be deleted\r\n     */\r\n    TermStore.prototype.deleteLanguage = function (lcid) {\r\n        var params = MethodParams.build().number(lcid);\r\n        return this.invokeNonQuery(\"DeleteLanguage\", params);\r\n    };\r\n    /**\r\n     * Discards all updates that have occurred since the last commit or rollback\r\n     */\r\n    TermStore.prototype.rollbackAll = function () {\r\n        return this.invokeNonQuery(\"RollbackAll\");\r\n    };\r\n    /**\r\n     * Updates the cache\r\n     */\r\n    TermStore.prototype.updateCache = function () {\r\n        return this.invokeNonQuery(\"UpdateCache\");\r\n    };\r\n    /**\r\n     * Updates the specified properties of this term set, not all properties can be updated\r\n     *\r\n     * @param properties Plain object representing the properties and new values to update\r\n     */\r\n    TermStore.prototype.update = function (properties) {\r\n        return this.invokeUpdate(properties, TermStore);\r\n    };\r\n    /**\r\n     * This method makes sure that this instance is aware of all child terms that are used in the current site collection\r\n     */\r\n    TermStore.prototype.updateUsedTermsOnSite = function () {\r\n        var objectPaths = this._objectPaths.clone();\r\n        var methodParent = objectPaths.lastIndex;\r\n        var siteIndex = objectPaths.siteIndex;\r\n        var params = MethodParams.build().objectPath(siteIndex);\r\n        var methodIndex = objectPaths.add(method(\"UpdateUsedTermsOnSite\", params));\r\n        // the parent of this method call is this instance, not the current context/site\r\n        objectPaths.addChildRelationship(methodParent, methodIndex);\r\n        return this.send(objectPaths);\r\n    };\r\n    /**\r\n     * Gets a list of changes\r\n     *\r\n     * @param info Lookup information\r\n     */\r\n    TermStore.prototype.getChanges = function (info) {\r\n        var objectPaths = this._objectPaths.clone();\r\n        var methodParent = objectPaths.lastIndex;\r\n        var inputIndex = objectPaths.add(objConstructor.apply(void 0, [\"{1f849fb0-4fcb-4a54-9b01-9152b9e482d3}\",\r\n            // actions\r\n            objectPath()].concat(objectProperties(info))));\r\n        var params = MethodParams.build().objectPath(inputIndex);\r\n        var methodIndex = objectPaths.add(method(\"GetChanges\", params, \r\n        // actions\r\n        objectPath(), opQuery([], this.getSelects())));\r\n        objectPaths.addChildRelationship(methodParent, methodIndex);\r\n        return this.send(objectPaths);\r\n    };\r\n    return TermStore;\r\n}(ClientSvcQueryable));\n\n/**\r\n * The root taxonomy object\r\n */\r\nvar Session = /** @class */ (function (_super) {\r\n    __extends(Session, _super);\r\n    function Session(webUrl) {\r\n        if (webUrl === void 0) { webUrl = \"\"; }\r\n        var _this = _super.call(this, webUrl) || this;\r\n        // everything starts with the session\r\n        _this._objectPaths.add(staticMethod(\"GetTaxonomySession\", \"{981cbc68-9edc-4f8d-872f-71146fcbb84f}\", \r\n        // actions\r\n        objectPath()));\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Session.prototype, \"termStores\", {\r\n        /**\r\n         * The collection of term stores\r\n         */\r\n        get: function () {\r\n            return new TermStores(this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Provides access to sp.setup from @pnp/sp\r\n     *\r\n     * @param config Configuration\r\n     */\r\n    Session.prototype.setup = function (config) {\r\n        sp.setup(config);\r\n    };\r\n    /**\r\n     * Creates a new batch\r\n     */\r\n    Session.prototype.createBatch = function () {\r\n        return new ObjectPathBatch(this.toUrl());\r\n    };\r\n    /**\r\n     * Gets the default keyword termstore for this session\r\n     */\r\n    Session.prototype.getDefaultKeywordTermStore = function () {\r\n        return this.getChild(TermStore, \"GetDefaultKeywordsTermStore\", null);\r\n    };\r\n    /**\r\n     * Gets the default site collection termstore for this session\r\n     */\r\n    Session.prototype.getDefaultSiteCollectionTermStore = function () {\r\n        return this.getChild(TermStore, \"GetDefaultSiteCollectionTermStore\", null);\r\n    };\r\n    return Session;\r\n}(ClientSvcQueryable));\n\nvar StringMatchOption;\r\n(function (StringMatchOption) {\r\n    StringMatchOption[StringMatchOption[\"StartsWith\"] = 0] = \"StartsWith\";\r\n    StringMatchOption[StringMatchOption[\"ExactMatch\"] = 1] = \"ExactMatch\";\r\n})(StringMatchOption || (StringMatchOption = {}));\r\nvar ChangedItemType;\r\n(function (ChangedItemType) {\r\n    ChangedItemType[ChangedItemType[\"Unknown\"] = 0] = \"Unknown\";\r\n    ChangedItemType[ChangedItemType[\"Term\"] = 1] = \"Term\";\r\n    ChangedItemType[ChangedItemType[\"TermSet\"] = 2] = \"TermSet\";\r\n    ChangedItemType[ChangedItemType[\"Group\"] = 3] = \"Group\";\r\n    ChangedItemType[ChangedItemType[\"TermStore\"] = 4] = \"TermStore\";\r\n    ChangedItemType[ChangedItemType[\"Site\"] = 5] = \"Site\";\r\n})(ChangedItemType || (ChangedItemType = {}));\r\nvar ChangedOperationType;\r\n(function (ChangedOperationType) {\r\n    ChangedOperationType[ChangedOperationType[\"Unknown\"] = 0] = \"Unknown\";\r\n    ChangedOperationType[ChangedOperationType[\"Add\"] = 1] = \"Add\";\r\n    ChangedOperationType[ChangedOperationType[\"Edit\"] = 2] = \"Edit\";\r\n    ChangedOperationType[ChangedOperationType[\"DeleteObject\"] = 3] = \"DeleteObject\";\r\n    ChangedOperationType[ChangedOperationType[\"Move\"] = 4] = \"Move\";\r\n    ChangedOperationType[ChangedOperationType[\"Copy\"] = 5] = \"Copy\";\r\n    ChangedOperationType[ChangedOperationType[\"PathChange\"] = 6] = \"PathChange\";\r\n    ChangedOperationType[ChangedOperationType[\"Merge\"] = 7] = \"Merge\";\r\n    ChangedOperationType[ChangedOperationType[\"ImportObject\"] = 8] = \"ImportObject\";\r\n    ChangedOperationType[ChangedOperationType[\"Restore\"] = 9] = \"Restore\";\r\n})(ChangedOperationType || (ChangedOperationType = {}));\n\nfunction setItemMetaDataField(item, fieldName, term) {\r\n    if (!objectDefinedNotNull(term)) {\r\n        return Promise.resolve(null);\r\n    }\r\n    var postData = {};\r\n    postData[fieldName] = {\r\n        \"Label\": term.Name,\r\n        \"TermGuid\": sanitizeGuid(term.Id),\r\n        \"WssId\": \"-1\",\r\n        \"__metadata\": { \"type\": \"SP.Taxonomy.TaxonomyFieldValue\" },\r\n    };\r\n    return item.update(postData);\r\n}\r\nfunction setItemMetaDataMultiField(item, fieldName) {\r\n    var terms = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        terms[_i - 2] = arguments[_i];\r\n    }\r\n    if (terms.length < 1) {\r\n        return Promise.resolve(null);\r\n    }\r\n    return item.list.fields.getByTitle(fieldName + \"_0\").select(\"InternalName\").get().then(function (i) {\r\n        var postData = {};\r\n        postData[i.InternalName] = terms.map(function (term) { return \"-1;#\" + term.Name + \"|\" + sanitizeGuid(term.Id) + \";#\"; }).join(\"\");\r\n        return item.update(postData);\r\n    });\r\n}\n\n// export an existing session instance\r\nvar taxonomy = new Session();\n\nexport { taxonomy, Labels, Label, Session, TermGroup, Terms, Term, TermSets, TermSet, TermStores, TermStore, StringMatchOption, ChangedItemType, ChangedOperationType, setItemMetaDataField, setItemMetaDataMultiField };\n//# sourceMappingURL=sp-taxonomy.es5.js.map\n"],"sourceRoot":""}